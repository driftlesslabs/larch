Search.setIndex({"docnames": ["api/dataset", "api/datatree", "api/generated/larch.DataTree", "api/generated/larch.DataTree.ALTID", "api/generated/larch.DataTree.CASEID", "api/generated/larch.DataTree.add_dataset", "api/generated/larch.DataTree.add_relationship", "api/generated/larch.DataTree.digitize_relationships", "api/generated/larch.DataTree.n_alts", "api/generated/larch.DataTree.n_cases", "api/generated/larch.DataTree.query_cases", "api/generated/larch.DataTree.relationships_are_digitized", "api/generated/larch.DataTree.replace_datasets", "api/generated/larch.DataTree.root_node_name", "api/generated/larch.DataTree.setup_flow", "api/generated/larch.DataTree.subspaces", "api/generated/larch.Dataset", "api/generated/larch.Dataset.attrs", "api/generated/larch.Dataset.chunks", "api/generated/larch.Dataset.chunksizes", "api/generated/larch.Dataset.construct", "api/generated/larch.Dataset.construct.from_idca", "api/generated/larch.Dataset.construct.from_idce", "api/generated/larch.Dataset.construct.from_idco", "api/generated/larch.Dataset.coords", "api/generated/larch.Dataset.data_vars", "api/generated/larch.Dataset.dims", "api/generated/larch.Dataset.encoding", "api/generated/larch.Dataset.indexes", "api/generated/larch.Dataset.nbytes", "api/generated/larch.Dataset.set_dtypes", "api/generated/larch.Dataset.sizes", "api/generated/larch.Model", "api/generated/larch.Model.availability_ca_var", "api/generated/larch.Model.availability_co_vars", "api/generated/larch.Model.bhhh", "api/generated/larch.Model.calculate_parameter_covariance", "api/generated/larch.Model.choice_ca_var", "api/generated/larch.Model.choice_co_code", "api/generated/larch.Model.choice_co_vars", "api/generated/larch.Model.d_loglike", "api/generated/larch.Model.d_loglike_casewise", "api/generated/larch.Model.dataset", "api/generated/larch.Model.datatree", "api/generated/larch.Model.estimation_statistics", "api/generated/larch.Model.lock_value", "api/generated/larch.Model.loglike", "api/generated/larch.Model.loglike_casewise", "api/generated/larch.Model.loglike_null", "api/generated/larch.Model.logsums", "api/generated/larch.Model.maximize_loglike", "api/generated/larch.Model.most_recent_estimation_result", "api/generated/larch.Model.n_cases", "api/generated/larch.Model.parameter_summary", "api/generated/larch.Model.pf", "api/generated/larch.Model.possible_overspecification", "api/generated/larch.Model.probability", "api/generated/larch.Model.quantity", "api/generated/larch.Model.quantity_ca", "api/generated/larch.Model.remove_unused_parameters", "api/generated/larch.Model.set_cap", "api/generated/larch.Model.set_values", "api/generated/larch.Model.total_weight", "api/generated/larch.Model.utility", "api/generated/larch.Model.utility_ca", "api/generated/larch.Model.utility_co", "api/generated/larch.NestingTree", "api/generated/larch.NestingTree.add_edge", "api/generated/larch.NestingTree.add_node", "api/generated/larch.NestingTree.new_node", "api/generated/larch.NestingTree.remove_edge", "api/generated/larch.NestingTree.remove_node", "api/index", "api/linear", "api/model", "api/nesting", "examples/exampville/200_exampville", "examples/exampville/201_exville_mode_choice", "examples/exampville/202_exville_mc_logsums", "examples/exampville/203_exville_dest", "examples/exampville/204_exville_dest_only", "examples/exampville/251_bySpec", "examples/exampville/index", "examples/index", "examples/mtc/001_mnl", "examples/mtc/017_mnl", "examples/mtc/022_nl", "examples/mtc/030_mnl_constrain", "examples/mtc/index", "examples/swissmetro/101_swissmetro_mnl", "examples/swissmetro/102-swissmetro-weighted", "examples/swissmetro/109-swissmetro-nl", "examples/swissmetro/151-swissmetro-panel-latent-class", "examples/swissmetro/index", "examples/xlogit-artificial/xlogit-test", "index", "user-guide/choice-models", "user-guide/data-fundamentals", "user-guide/index", "user-guide/installation", "user-guide/linear-funcs"], "filenames": ["api/dataset.rst", "api/datatree.rst", "api/generated/larch.DataTree.rst", "api/generated/larch.DataTree.ALTID.rst", "api/generated/larch.DataTree.CASEID.rst", "api/generated/larch.DataTree.add_dataset.rst", "api/generated/larch.DataTree.add_relationship.rst", "api/generated/larch.DataTree.digitize_relationships.rst", "api/generated/larch.DataTree.n_alts.rst", "api/generated/larch.DataTree.n_cases.rst", "api/generated/larch.DataTree.query_cases.rst", "api/generated/larch.DataTree.relationships_are_digitized.rst", "api/generated/larch.DataTree.replace_datasets.rst", "api/generated/larch.DataTree.root_node_name.rst", "api/generated/larch.DataTree.setup_flow.rst", "api/generated/larch.DataTree.subspaces.rst", "api/generated/larch.Dataset.rst", "api/generated/larch.Dataset.attrs.rst", "api/generated/larch.Dataset.chunks.rst", "api/generated/larch.Dataset.chunksizes.rst", "api/generated/larch.Dataset.construct.rst", "api/generated/larch.Dataset.construct.from_idca.rst", "api/generated/larch.Dataset.construct.from_idce.rst", "api/generated/larch.Dataset.construct.from_idco.rst", "api/generated/larch.Dataset.coords.rst", "api/generated/larch.Dataset.data_vars.rst", "api/generated/larch.Dataset.dims.rst", "api/generated/larch.Dataset.encoding.rst", "api/generated/larch.Dataset.indexes.rst", "api/generated/larch.Dataset.nbytes.rst", "api/generated/larch.Dataset.set_dtypes.rst", "api/generated/larch.Dataset.sizes.rst", "api/generated/larch.Model.rst", "api/generated/larch.Model.availability_ca_var.rst", "api/generated/larch.Model.availability_co_vars.rst", "api/generated/larch.Model.bhhh.rst", "api/generated/larch.Model.calculate_parameter_covariance.rst", "api/generated/larch.Model.choice_ca_var.rst", "api/generated/larch.Model.choice_co_code.rst", "api/generated/larch.Model.choice_co_vars.rst", "api/generated/larch.Model.d_loglike.rst", "api/generated/larch.Model.d_loglike_casewise.rst", "api/generated/larch.Model.dataset.rst", "api/generated/larch.Model.datatree.rst", "api/generated/larch.Model.estimation_statistics.rst", "api/generated/larch.Model.lock_value.rst", "api/generated/larch.Model.loglike.rst", "api/generated/larch.Model.loglike_casewise.rst", "api/generated/larch.Model.loglike_null.rst", "api/generated/larch.Model.logsums.rst", "api/generated/larch.Model.maximize_loglike.rst", "api/generated/larch.Model.most_recent_estimation_result.rst", "api/generated/larch.Model.n_cases.rst", "api/generated/larch.Model.parameter_summary.rst", "api/generated/larch.Model.pf.rst", "api/generated/larch.Model.possible_overspecification.rst", "api/generated/larch.Model.probability.rst", "api/generated/larch.Model.quantity.rst", "api/generated/larch.Model.quantity_ca.rst", "api/generated/larch.Model.remove_unused_parameters.rst", "api/generated/larch.Model.set_cap.rst", "api/generated/larch.Model.set_values.rst", "api/generated/larch.Model.total_weight.rst", "api/generated/larch.Model.utility.rst", "api/generated/larch.Model.utility_ca.rst", "api/generated/larch.Model.utility_co.rst", "api/generated/larch.NestingTree.rst", "api/generated/larch.NestingTree.add_edge.rst", "api/generated/larch.NestingTree.add_node.rst", "api/generated/larch.NestingTree.new_node.rst", "api/generated/larch.NestingTree.remove_edge.rst", "api/generated/larch.NestingTree.remove_node.rst", "api/index.md", "api/linear.rst", "api/model.rst", "api/nesting.rst", "examples/exampville/200_exampville.ipynb", "examples/exampville/201_exville_mode_choice.ipynb", "examples/exampville/202_exville_mc_logsums.ipynb", "examples/exampville/203_exville_dest.ipynb", "examples/exampville/204_exville_dest_only.ipynb", "examples/exampville/251_bySpec.ipynb", "examples/exampville/index.md", "examples/index.md", "examples/mtc/001_mnl.ipynb", "examples/mtc/017_mnl.ipynb", "examples/mtc/022_nl.ipynb", "examples/mtc/030_mnl_constrain.ipynb", "examples/mtc/index.md", "examples/swissmetro/101_swissmetro_mnl.ipynb", "examples/swissmetro/102-swissmetro-weighted.ipynb", "examples/swissmetro/109-swissmetro-nl.ipynb", "examples/swissmetro/151-swissmetro-panel-latent-class.ipynb", "examples/swissmetro/index.md", "examples/xlogit-artificial/xlogit-test.ipynb", "index.md", "user-guide/choice-models.ipynb", "user-guide/data-fundamentals.ipynb", "user-guide/index.md", "user-guide/installation.md", "user-guide/linear-funcs.ipynb"], "titles": ["Dataset", "DataTree", "larch.DataTree", "larch.DataTree.ALTID", "larch.DataTree.CASEID", "larch.DataTree.add_dataset", "larch.DataTree.add_relationship", "larch.DataTree.digitize_relationships", "larch.DataTree.n_alts", "larch.DataTree.n_cases", "larch.DataTree.query_cases", "larch.DataTree.relationships_are_digitized", "larch.DataTree.replace_datasets", "larch.DataTree.root_node_name", "larch.DataTree.setup_flow", "larch.DataTree.subspaces", "larch.Dataset", "larch.Dataset.attrs", "larch.Dataset.chunks", "larch.Dataset.chunksizes", "larch.Dataset.construct", "larch.Dataset.construct.from_idca", "larch.Dataset.construct.from_idce", "larch.Dataset.construct.from_idco", "larch.Dataset.coords", "larch.Dataset.data_vars", "larch.Dataset.dims", "larch.Dataset.encoding", "larch.Dataset.indexes", "larch.Dataset.nbytes", "larch.Dataset.set_dtypes", "larch.Dataset.sizes", "larch.Model", "larch.Model.availability_ca_var", "larch.Model.availability_co_vars", "larch.Model.bhhh", "larch.Model.calculate_parameter_covariance", "larch.Model.choice_ca_var", "larch.Model.choice_co_code", "larch.Model.choice_co_vars", "larch.Model.d_loglike", "larch.Model.d_loglike_casewise", "larch.Model.dataset", "larch.Model.datatree", "larch.Model.estimation_statistics", "larch.Model.lock_value", "larch.Model.loglike", "larch.Model.loglike_casewise", "larch.Model.loglike_null", "larch.Model.logsums", "larch.Model.maximize_loglike", "larch.Model.most_recent_estimation_result", "larch.Model.n_cases", "larch.Model.parameter_summary", "larch.Model.pf", "larch.Model.possible_overspecification", "larch.Model.probability", "larch.Model.quantity", "larch.Model.quantity_ca", "larch.Model.remove_unused_parameters", "larch.Model.set_cap", "larch.Model.set_values", "larch.Model.total_weight", "larch.Model.utility", "larch.Model.utility_ca", "larch.Model.utility_co", "larch.NestingTree", "larch.NestingTree.add_edge", "larch.NestingTree.add_node", "larch.NestingTree.new_node", "larch.NestingTree.remove_edge", "larch.NestingTree.remove_node", "API", "Linear Functions", "Model", "NestingTree", "200: Exampville Simulated Data", "201: Exampville Mode Choice", "202: Exampville Mode Choice Logsums", "203: Exampville Destination Choice", "204: Exampville Destination Choice without Logsums", "&lt;no title&gt;", "Exampville Simulator", "Examples", "1: MTC MNL Mode Choice", "17: MTC Expanded MNL Mode Choice", "22: MTC Motorized and Non-Motorized Nested Mode Choice", "1: MTC MNL Constrained Mode Choice", "MTC Examples", "101: Swissmetro MNL Mode Choice", "102: Swissmetro Weighted MNL Mode Choice", "109: Swissmetro Nested Logit Mode Choice", "&lt;no title&gt;", "Swissmetro Examples", "&lt;no title&gt;", "Larch Documentation", "Choice Models", "Data for Discrete Choice", "User Guide", "Installing Larch", "Linear Functions"], "terms": {"idca": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 84, 96, 98], "idco": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 84, 89, 96, 98], "class": [2, 6, 16, 32, 58, 66, 73, 76, 84, 92, 97, 100], "graph": [2, 66, 67, 68, 71, 77, 86, 91, 96], "none": [2, 7, 10, 12, 16, 18, 19, 35, 36, 40, 41, 45, 46, 47, 49, 56, 57, 61, 63, 66, 68, 69, 76, 78, 94, 96, 97], "root_node_nam": [2, 72, 81], "extra_func": 2, "extra_var": 2, "cache_dir": [2, 14], "relationship": [2, 5, 6, 7, 11, 12, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 96], "force_digit": 2, "fals": [2, 5, 7, 14, 30, 35, 36, 40, 50, 56, 67, 73, 77, 94, 97], "kwarg": [2, 6, 10, 12, 14, 32, 35, 40, 41, 45, 46, 47, 50, 61, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 96, 97], "sourc": [2, 5, 6, 7, 10, 12, 14, 16, 32, 40, 43, 46, 47, 48, 50, 63, 66, 67, 68, 69, 70, 71, 73, 78, 80, 89], "base": [2, 7, 12, 16, 28, 29, 32, 66, 73, 77, 79, 80, 92, 97, 100], "__init__": [2, 16, 32, 66, 72, 77, 78, 79, 80, 81], "method": [2, 16, 32, 50, 58, 66, 69, 72, 73, 77, 78, 79, 80, 84, 86, 87, 89, 90, 91, 92, 96, 97, 100], "attribut": [2, 16, 17, 27, 32, 66, 67, 68, 72, 77, 84, 85, 89, 90, 92, 96, 97, 100], "properti": [3, 4, 8, 9, 11, 13, 15, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 33, 34, 37, 38, 39, 42, 43, 51, 52, 54, 55, 96], "The": [3, 4, 6, 8, 9, 10, 13, 14, 16, 45, 46, 50, 52, 58, 60, 63, 64, 65, 66, 67, 68, 69, 73, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99], "_altid_": [3, 8, 84, 89, 90, 96, 97], "dimens": [3, 4, 6, 8, 9, 10, 14, 16, 18, 19, 26, 31, 63, 79, 80, 84, 85, 86, 87, 89, 90, 91, 96, 97], "root": [3, 4, 5, 8, 9, 10, 13, 14, 67, 68, 69], "dataset": [3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 72, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97], "type": [3, 4, 8, 9, 11, 13, 15, 26, 30, 33, 34, 37, 38, 39, 42, 43, 52, 58, 64, 65, 73, 78, 79, 80, 85, 86, 87, 89, 90, 91, 96, 97], "str": [3, 4, 5, 6, 10, 12, 13, 14, 15, 33, 34, 37, 38, 39, 45, 50, 69, 73, 85], "_caseid_": [4, 9, 84, 89, 90, 96, 97], "name": [5, 14, 15, 16, 18, 19, 26, 30, 31, 34, 39, 45, 53, 61, 66, 68, 69, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 100], "as_root": 5, "add": [5, 6, 14, 66, 67, 68, 69, 78, 90, 92, 96, 100], "new": [5, 6, 10, 12, 14, 16, 26, 31, 46, 61, 63, 68, 69, 76, 77, 78, 79, 80, 81, 85, 89, 91, 94, 96, 97], "node": [5, 12, 13, 15, 67, 68, 69, 70, 71, 77, 96], "thi": [5, 6, 10, 12, 13, 14, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 44, 46, 50, 53, 58, 60, 61, 63, 64, 65, 68, 69, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "paramet": [5, 6, 7, 10, 12, 14, 16, 30, 44, 45, 46, 48, 50, 53, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 94, 97, 98, 100], "panda": [5, 10, 16, 28, 53, 63, 73, 76, 77, 78, 79, 80, 81, 84, 87, 89, 90, 91, 92, 97], "datafram": [5, 30, 53, 63, 76, 77, 78, 87, 89, 96, 97], "Will": 5, "coerc": [5, 28], "object": [5, 14, 15, 16, 24, 25, 26, 28, 66, 67, 68, 73, 76, 79, 80, 81, 84, 87, 89, 90, 91, 96, 97], "i": [5, 6, 10, 12, 13, 14, 16, 18, 19, 26, 31, 34, 44, 45, 46, 48, 50, 58, 61, 63, 66, 67, 68, 69, 70, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100], "alreadi": [5, 6, 44, 67, 69, 77, 97], "format": [5, 12, 58, 63, 64, 73, 76, 77, 79, 80, 84, 89, 90, 91, 96, 98], "us": [5, 6, 10, 14, 16, 28, 45, 46, 48, 50, 58, 59, 61, 63, 67, 68, 69, 73, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 99, 100], "copi": [5, 7, 51, 77, 79, 80, 86, 87, 94, 97], "process": [5, 46, 61, 63, 73, 76, 77, 78, 96, 97, 100], "possibl": [5, 50, 78, 96, 97], "tupl": [5, 14, 16, 18, 19, 85], "also": [5, 44, 66, 76, 77, 78, 79, 80, 85, 89, 96, 97, 100], "bool": [5, 7, 11, 12, 14, 30, 44, 48, 50, 59, 67, 73, 97], "default": [5, 7, 10, 12, 14, 16, 30, 44, 46, 48, 50, 59, 60, 63, 66, 67, 85, 96, 97, 99], "set": [5, 14, 16, 26, 30, 45, 46, 48, 60, 61, 63, 68, 69, 72, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 100], "tree": [5, 6, 10, 12, 13, 69, 79, 80, 86, 91, 96], "displac": 5, "ani": [5, 10, 16, 17, 27, 29, 50, 61, 65, 66, 68, 73, 85, 87, 92, 96, 97, 100], "exist": [5, 16, 60, 61, 69, 71, 78, 79, 91, 96, 99, 100], "arg": [6, 10, 14, 32, 50, 66, 70, 73, 76, 77, 78, 79, 80, 81, 96], "point": [6, 14, 76, 97], "from": [6, 7, 10, 14, 16, 18, 19, 26, 31, 46, 51, 58, 63, 64, 65, 68, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100], "variabl": [6, 10, 14, 16, 24, 25, 26, 29, 30, 31, 33, 34, 37, 38, 39, 58, 64, 77, 78, 84, 85, 89, 90, 91, 96, 97], "one": [6, 12, 16, 58, 60, 61, 64, 73, 78, 80, 85, 87, 88, 89, 92, 96, 97, 100], "anoth": [6, 16, 76, 85, 96, 97], "both": [6, 58, 61, 64, 96, 97, 100], "parent": [6, 13, 68, 69], "child": [6, 68, 77, 96], "should": [6, 58, 64, 67, 73, 96], "have": [6, 16, 58, 64, 65, 76, 78, 79, 80, 82, 84, 85, 86, 87, 89, 96, 97, 100], "been": [6, 7, 44, 78, 97], "ad": [6, 16, 26, 31, 50, 67, 69, 77, 96, 97], "all": [6, 7, 11, 14, 16, 29, 46, 48, 58, 63, 69, 71, 73, 77, 79, 80, 84, 85, 89, 90, 91, 92, 96, 97], "argument": [6, 16, 50, 61, 66, 67, 68, 69, 78, 97], "ar": [6, 10, 11, 12, 14, 16, 33, 50, 58, 59, 60, 61, 65, 66, 67, 68, 76, 77, 79, 80, 82, 85, 86, 87, 88, 91, 93, 95, 96, 97, 99], "pass": [6, 16, 50, 89, 100], "through": [6, 50, 61, 77, 78, 79, 80, 96], "contructor": 6, "unless": [6, 12, 60, 69, 96], "onli": [6, 7, 13, 14, 44, 61, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 96, 97, 100], "singl": [6, 68, 73, 84, 89, 96, 97, 100], "provid": [6, 14, 31, 76, 77, 78, 79, 80, 82, 88, 93, 96, 97, 100], "which": [6, 13, 14, 16, 73, 76, 77, 78, 79, 80, 81, 84, 85, 89, 94, 96, 97, 100], "case": [6, 16, 44, 46, 52, 62, 63, 78, 79, 80, 89, 96, 97, 100], "from_str": 6, "constructor": [6, 72, 89], "inplac": [7, 30], "redigit": [7, 12], "true": [7, 12, 14, 44, 48, 59, 67, 73, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 94, 96, 97], "convert": [7, 30, 66, 96, 97], "label": [7, 12, 16, 28, 67, 85, 87, 96, 97], "posit": [7, 11, 12, 58, 87, 96, 97], "re": [7, 12, 77, 85, 86, 97], "comput": [7, 14, 42, 44, 46, 48, 58, 62, 63, 64, 65, 72, 73, 77, 78, 85, 86, 89, 96, 97, 100], "even": [7, 77, 84, 97], "had": [7, 10, 16], "previous": [7, 12, 79], "digit": [7, 11, 12, 14], "return": [7, 10, 12, 14, 26, 30, 44, 46, 48, 50, 53, 62, 63, 69, 73, 76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 96, 97], "place": [7, 12, 85, 100], "size": [8, 9, 12, 26, 29, 46, 63, 72, 80, 82, 85, 86, 87, 89, 90, 91], "int": [8, 9, 14, 18, 19, 26, 29, 31, 34, 39, 46, 50, 52, 63, 67, 68, 69, 70, 71, 85], "queri": 10, "filter": [10, 78, 85], "appli": [10, 84, 85, 97], "python": [10, 14, 46, 63, 66, 68, 76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 99, 100], "express": [10, 14, 33, 34, 39, 58, 64, 77, 81, 85, 87, 89, 96, 97], "evalu": [10, 34, 39, 46, 63, 89, 96], "against": [10, 85, 96], "data": [10, 12, 13, 14, 16, 18, 19, 25, 29, 42, 43, 48, 52, 58, 62, 64, 65, 66, 67, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 98, 100], "eval": [10, 89, 92], "function": [10, 14, 16, 34, 39, 50, 58, 63, 64, 65, 72, 77, 79, 80, 84, 85, 89, 95, 97, 98], "can": [10, 14, 16, 18, 19, 58, 64, 66, 67, 69, 73, 76, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 90, 91, 93, 96, 97, 100], "contain": [10, 44, 53, 63, 77, 96, 97, 100], "valid": [10, 12, 72, 73], "cannot": [10, 18, 19, 26, 28, 31, 100], "statement": 10, "parser": 10, "construct": [10, 72, 77, 78, 79, 80, 81, 89, 90, 91, 92, 96, 97], "syntax": 10, "pars": 10, "code": [10, 14, 34, 39, 65, 67, 68, 69, 77, 84, 89, 96, 97], "slightli": [10, 79, 80], "differ": [10, 26, 79, 80, 85, 86, 96], "than": [10, 79, 80, 85, 88, 97], "standard": [10, 53, 77, 96, 97], "altern": [10, 12, 16, 33, 34, 38, 39, 45, 63, 65, 67, 69, 72, 77, 79, 80, 84, 85, 89, 92, 97, 98, 100], "you": [10, 14, 73, 76, 77, 78, 79, 80, 81, 88, 89, 93, 94, 96, 97, 99, 100], "an": [10, 12, 14, 16, 28, 30, 31, 33, 34, 37, 38, 39, 44, 48, 66, 67, 68, 70, 71, 73, 78, 80, 85, 89, 94, 96, 97, 100], "retain": 10, "strict": [10, 85], "semant": 10, "engin": [10, 78, 86, 97], "numexpr": 10, "support": [10, 96], "tri": 10, "fall": [10, 88], "back": 10, "perform": [10, 14, 86], "oper": [10, 94, 97], "d": [10, 16, 78, 84, 85, 89, 90, 91, 94, 97], "top": [10, 14], "level": [10, 14, 63, 77, 78, 96, 97], "A": [10, 12, 14, 16, 34, 39, 43, 50, 51, 61, 68, 69, 71, 73, 96, 99], "same": [10, 14, 16, 18, 19, 85, 86, 88, 92, 93, 96, 97, 100], "content": 10, "except": [10, 14, 16, 44, 48, 58, 61, 64, 68, 71, 73, 76, 97, 100], "each": [10, 16, 34, 39, 44, 48, 65, 68, 73, 77, 78, 79, 80, 84, 85, 88, 89, 92, 96, 97], "arrai": [10, 14, 16, 18, 19, 29, 42, 46, 61, 63, 66, 77, 79, 80, 84, 89, 90, 91, 96, 97], "index": [10, 16, 63, 72, 76, 78, 79, 80, 81, 84, 89, 90, 91, 96, 97], "result": [10, 12, 14, 50, 51, 63, 72, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "caseid": [10, 72, 78, 79, 80, 84, 89, 90, 91, 96, 97], "whether": [11, 30, 34, 39, 50, 80, 97], "other": [12, 14, 16, 50, 68, 69, 73, 77, 79, 80, 86, 92, 96, 97, 100], "replac": [12, 46, 61, 63, 78, 96, 97], "more": [12, 14, 26, 60, 61, 73, 79, 80, 85, 86, 87, 89, 90, 91, 95, 97, 99, 100], "map": [12, 14, 15, 16, 18, 19, 24, 26, 28, 30, 31, 34, 39, 65, 68, 76, 77, 85, 86, 87, 89, 90, 91, 96], "dictionari": [12, 17, 25, 27, 46, 50, 61, 63, 77, 89, 96], "rais": [12, 14, 28, 30, 48, 61, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 97, 100], "error": [12, 14, 28, 30, 53, 77, 84, 86, 94, 96], "when": [12, 14, 16, 26, 30, 31, 76, 77, 78, 79, 80, 82, 85, 87, 89, 96, 97], "downstream": 12, "referenc": 12, "ident": 12, "If": [12, 14, 29, 44, 46, 61, 63, 66, 68, 69, 70, 73, 77, 78, 94, 96, 97, 99], "deactiv": 12, "incompat": 12, "flow": [12, 14], "reli": [12, 96], "give": [12, 14, 16, 34, 37, 38, 39, 63, 73, 77, 79, 84, 86, 96], "erron": 12, "crash": [12, 14], "segfault": [12, 14], "automat": [12, 16, 67, 69, 79, 87, 96, 97, 100], "were": [12, 59, 79, 97], "complet": [12, 58, 64, 76, 77, 78, 79, 80, 81, 84, 86, 89, 90, 91, 94, 96, 99], "ever": 13, "up": [14, 68, 80, 84, 87, 89, 90, 91, 94, 97], "analysi": [14, 76, 84], "structur": [14, 73, 77, 78, 79, 80, 84, 86, 91, 92, 97, 98, 100], "definition_spec": 14, "dict": [14, 16, 17, 27, 34, 39, 46, 50, 51, 61, 63, 76, 77, 78, 79, 80, 81, 84, 96, 97], "defin": [14, 69, 76, 77, 78, 79, 80, 81, 85, 89, 92, 94, 96, 97, 100], "creat": [14, 16, 44, 53, 66, 68, 69, 73, 77, 79, 80, 84, 85, 86, 87, 89, 90, 91, 100], "path": [14, 78, 79], "like": [14, 16, 46, 61, 63, 79, 80, 84, 85, 89, 90, 91, 94, 96, 97, 99, 100], "option": [14, 16, 46, 50, 61, 63, 66, 67, 68, 69, 79, 80, 85, 96, 100], "locat": 14, "write": [14, 77, 78, 87, 89, 97, 100], "out": [14, 16, 79, 80, 85, 96, 97, 99, 100], "gener": [14, 44, 53, 59, 68, 77, 78, 79, 80, 81, 82, 95, 96, 97], "numba": [14, 77, 79, 80, 85, 86, 87], "uniqu": [14, 65, 69, 77, 79, 80], "temporari": 14, "directori": 14, "cach": [14, 44, 48, 78, 97], "file": [14, 16, 76, 77, 78, 79, 80, 81, 94, 96, 97, 100], "given": [14, 16, 44, 46, 58, 61, 63, 65, 68, 69, 73, 80, 87, 89, 90, 91, 96, 97, 100], "sure": [14, 84], "avoid": 14, "conflict": 14, "": [14, 18, 19, 38, 58, 77, 78, 79, 80, 84, 96, 97], "dtype": [14, 29, 30, 76, 81, 84, 89, 90, 91, 96, 97], "float32": [14, 84], "numpi": [14, 66, 73, 76, 77, 78, 79, 80, 81, 92, 94, 97], "output": [14, 44, 50, 77, 89, 90, 91], "boundscheck": 14, "enabl": 14, "bound": [14, 50, 60, 84, 96], "check": [14, 73, 77, 89, 90, 91], "indic": [14, 33, 34, 37, 39, 48, 63, 65, 68, 77, 96, 97], "access": [14, 15, 76, 85, 86, 87, 89, 90, 91, 96, 97], "indexerror": 14, "do": [14, 30, 77, 78, 81, 88, 89, 90, 91, 93, 96, 97, 99], "faster": 14, "produc": 14, "garbag": 14, "problem": 14, "so": [14, 16, 58, 77, 79, 80, 88, 89, 91, 93, 96, 97, 100], "try": [14, 73, 76, 99], "turn": 14, "debug": 14, "get": [14, 73, 96, 97], "unexplain": 14, "error_model": 14, "control": [14, 79, 80, 97], "divid": 14, "zero": [14, 48, 78, 85, 97], "behavior": [14, 87, 96, 97], "caus": 14, "cpython": 14, "inf": [14, 96], "nan": [14, 81, 96, 97], "nopython": 14, "compil": [14, 76, 77, 78, 79, 80, 81, 86, 89, 94, 96], "mode": [14, 76, 79, 80, 81, 82, 83, 88, 92, 93, 94, 97], "littl": [14, 76, 77, 78, 79, 80, 81, 84, 87, 89, 94, 96], "off": [14, 94, 96], "product": [14, 73, 99], "speed": [14, 94], "benefit": [14, 31], "sharrow": [14, 79, 80, 85, 86, 87, 89, 90, 91, 96], "lost": 14, "fastmath": 14, "fast": [14, 73, 86, 97], "float": [14, 45, 46, 48, 62, 73, 97], "transform": [14, 58, 89, 97, 100], "improv": [14, 84], "tini": [14, 96], "distort": 14, "see": [14, 16, 26, 50, 77, 79, 80, 97], "doc": 14, "detail": [14, 58, 88, 96, 97], "parallel": 14, "disabl": 14, "certain": [14, 96], "readm": 14, "string": [14, 72, 73, 79], "inject": 14, "comment": 14, "flow_librari": 14, "memori": [14, 16, 76, 77, 97], "precompil": 14, "repeatedli": 14, "definit": [14, 72, 82, 89, 96], "extra_hash_data": 14, "hashabl": [14, 16, 18, 19, 26, 31, 68], "addit": [14, 96, 100], "hash": 14, "prevent": [14, 96], "multipl": [14, 16, 45, 68, 96], "similar": [14, 16, 77, 79, 80, 97, 99, 100], "write_hash_audit": 14, "audit": 14, "log": [14, 44, 46, 48, 50, 59, 63, 73, 77, 81, 84, 86, 89, 90, 91, 94, 100], "purpos": [14, 77, 89, 90, 91, 92], "hashing_level": 14, "1": [14, 16, 45, 46, 48, 63, 65, 66, 73, 76, 77, 78, 79, 80, 81, 83, 85, 86, 88, 89, 90, 91, 92, 94, 96, 97, 100], "increas": 14, "2": [14, 16, 65, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "inform": [14, 88, 95, 97], "about": [14, 59, 95, 97], "encod": [14, 72, 98], "requir": [14, 76, 77, 86, 96, 97], "pre": [14, 77, 78, 96, 97, 100], "dim_exclud": 14, "collect": [14, 68, 69, 79, 80, 97], "exclud": [14, 77, 89, 90], "direct": 15, "data_var": [16, 72], "datavar": 16, "coord": [16, 72, 78, 80, 96], "attr": [16, 66, 72, 96], "datawithcoord": 16, "datasetaggreg": 16, "datasetarithmet": 16, "dataarrai": [16, 24, 25, 26, 31, 63, 78, 79, 80, 85, 86, 87, 89, 90, 91, 96, 97], "multi": [16, 63, 96], "dimension": [16, 97], "databas": 16, "resembl": 16, "represent": [16, 96], "netcdf": 16, "consist": [16, 26, 31, 85, 86, 87, 89, 90, 91, 96], "coordin": [16, 24, 80, 84, 89, 90, 96, 97], "togeth": [16, 77, 85, 91, 96, 100], "form": [16, 45, 58, 73, 79, 80, 89, 100], "self": [16, 76, 85, 86, 87, 88, 89, 90, 91, 96, 100], "describ": [16, 89, 96, 97], "implement": [16, 55, 58, 82, 97], "interfac": [16, 99], "kei": [16, 34, 39, 61, 65, 66, 68, 78, 85, 86, 87, 89, 90, 91, 96, 97], "valu": [16, 37, 39, 44, 45, 46, 48, 53, 58, 60, 61, 63, 65, 66, 68, 72, 73, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "By": [16, 96, 97], "equal": [16, 46, 61, 63, 85], "e": [16, 26, 44, 45, 66, 73, 94, 97], "those": [16, 79, 80, 89, 90, 91, 96, 97, 100], "readili": [16, 97], "built": [16, 79, 80, 84, 87, 89, 90, 91], "To": [16, 46, 63, 77, 78, 85, 86, 87, 89, 90, 91, 96, 97, 100], "load": [16, 42, 48, 62, 77, 78, 79, 80, 85, 96, 97], "open_dataset": [16, 78, 97], "dim": [16, 31, 72, 80, 85, 86, 87, 89, 90, 91, 96], "must": [16, 46, 61, 63, 65, 69, 78, 87, 89, 97, 99, 100], "length": [16, 18, 19, 26, 31, 46, 61, 63, 84, 85, 86, 87, 89, 90, 91], "appear": [16, 85, 97, 100], "follow": [16, 96], "notat": [16, 100], "accept": [16, 100], "var": [16, 97], "scalar": [16, 61], "move": [16, 97], "below": [16, 77, 96, 97], "item": [16, 50, 85, 86, 87, 89, 90, 91, 96], "save": [16, 78, 82, 96, 97], "These": [16, 50, 69, 96], "associ": [16, 34, 39, 61, 69], "mean": 16, "thei": [16, 61, 67, 69, 79, 85, 86, 87], "constant": [16, 44, 92, 94], "fix": [16, 45, 77, 79, 84, 85, 87, 96, 100], "independ": 16, "quantiti": [16, 58, 72], "unlik": [16, 96], "vari": [16, 50, 84], "measur": 16, "depend": [16, 78, 96], "belong": 16, "arbitrari": [16, 66], "implicitli": [16, 100], "last": [16, 46, 63, 76, 77, 78, 79, 80, 81, 92, 94, 97, 100], "impli": [16, 67, 68, 69, 87], "either": [16, 97, 100], "In": [16, 76, 77, 78, 79, 80, 81, 84, 87, 89, 91, 92, 94, 96, 97, 100], "latter": 16, "assum": [16, 68, 96], "along": [16, 80], "mai": [16, 48, 66, 76, 77, 78, 79, 80, 81, 85, 89, 94, 95, 96], "order": [16, 84, 85, 86, 87, 89, 90, 91, 97], "explicitli": [16, 61, 68, 77, 85, 87, 89, 97, 100], "g": [16, 66, 73, 97], "custom": 16, "xarrai": [16, 18, 19, 78, 84, 89, 90, 96, 98], "bypass": 16, "creation": [16, 77, 78, 97], "includ": [16, 29, 44, 46, 50, 61, 63, 76, 78, 79, 80, 85, 88, 89, 92, 96, 97, 100], "global": [16, 17, 27, 60, 96], "exampl": [16, 48, 58, 64, 65, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 100], "np": [16, 77, 78, 79, 80, 91, 92, 94, 96, 97], "random": [16, 94], "seed": [16, 94], "0": [16, 46, 60, 63, 66, 76, 77, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 100], "temperatur": 16, "15": [16, 76, 77, 78, 79, 80, 81, 84, 86, 89, 90, 91, 94, 96, 97], "8": [16, 76, 77, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 97], "randn": 16, "3": [16, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 100], "precipit": 16, "10": [16, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "rand": 16, "lon": 16, "99": [16, 84, 85, 87], "83": [16, 84, 90, 97], "32": [16, 77, 80, 84, 90, 97], "79": [16, 84], "23": [16, 87, 97], "lat": 16, "42": [16, 84, 87, 89, 90, 94], "25": [16, 60, 78, 79, 80, 84, 85, 86, 92, 96, 97], "21": [16, 77, 80, 84, 86, 87, 89, 90, 97], "63": [16, 84, 85, 89, 90], "59": [16, 84, 85, 97], "time": [16, 50, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 92, 94, 96, 97], "pd": [16, 76, 77, 78, 79, 80, 81, 84, 87, 89, 90, 91, 92, 96, 97], "date_rang": 16, "2014": 16, "09": [16, 91], "06": [16, 84, 87, 94, 97], "period": 16, "reference_tim": 16, "timestamp": 16, "05": [16, 84, 86, 87, 94], "initi": [16, 61, 66, 69, 78], "xr": [16, 78, 97], "x": [16, 35, 40, 41, 46, 47, 49, 56, 57, 58, 63, 64, 65, 76, 77, 78, 79, 80, 84, 85, 87, 89, 90, 91, 92, 94, 96, 97, 100], "y": [16, 76, 94, 97], "descript": [16, 84], "weather": 16, "relat": [16, 96, 97], "float64": [16, 76, 84, 96, 97], "datetime64": 16, "n": [16, 71, 77, 78, 79, 80, 81, 94], "07": [16, 84, 85, 91, 97], "08": [16, 76, 87], "without": [16, 73, 82, 83, 92, 95, 97, 100], "29": [16, 79, 80, 84, 85, 86, 97], "11": [16, 76, 77, 78, 79, 80, 81, 84, 85, 87, 91, 92, 97], "18": [16, 76, 77, 79, 80, 84, 87, 91, 92, 97], "22": [16, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 94, 96, 97], "28": [16, 79, 80, 84, 86, 89, 90, 97], "16": [16, 76, 77, 78, 79, 81, 84, 86, 87, 89, 90, 94, 97], "26": [16, 78, 79, 80, 84, 85, 87, 97], "5": [16, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "68": [16, 84, 85, 86], "9": [16, 76, 77, 78, 79, 80, 81, 84, 87, 89, 90, 94, 96, 97], "256": 16, "7104": 16, "7": [16, 76, 77, 78, 79, 80, 81, 84, 85, 89, 90, 92, 94, 97], "992": 16, "4": [16, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97], "615": 16, "805": 16, "find": [16, 77, 85, 89, 90, 91, 96, 99], "where": [16, 73, 78, 80, 92, 97], "coldest": 16, "wa": [16, 39, 78, 97], "what": [16, 30, 77, 97], "isel": 16, "argmin": 16, "182": 16, "326": 16, "block": [18, 19, 85], "underli": [18, 19, 97], "dask": [18, 19, 97], "modifi": [18, 19, 26, 31, 96], "directli": [18, 19, 26, 31, 76, 79, 96], "call": [18, 19, 76, 77, 78, 79, 80, 81, 85, 92, 94, 97, 100], "chunksiz": [18, 72], "maintain": 18, "backward": [18, 46, 63], "compat": 18, "unify_chunk": [18, 19], "chunk": [19, 72, 78, 97], "datasetcoordin": 24, "correspond": [24, 25, 66], "datavari": 25, "frozen": [26, 31], "updat": [26, 31, 46, 61, 63, 68, 95, 96], "note": [26, 48, 58, 61, 85, 97], "chang": [26, 45, 61, 68, 85, 86, 87, 89, 90, 91, 96, 97], "futur": [26, 85, 86, 87, 89, 90, 91, 95, 96, 97], "ha": [28, 44, 60, 65, 73, 79, 80, 94, 96, 97], "xindex": 28, "total": [29, 62, 76, 97], "byte": 29, "consum": 29, "backend": [29, 78, 97], "doe": [29, 84, 89, 90, 91, 96, 97, 100], "estim": [29, 44, 45, 50, 53, 72, 73, 78, 81, 82, 84, 85, 86, 87, 89, 90, 91, 94, 97, 98, 100], "infer": 30, "on_error": 30, "warn": [30, 61, 76, 77, 78, 79, 80, 81, 89, 94, 96, 97], "ignor": [30, 61], "convers": [30, 98], "trigger": 30, "alia": [31, 85], "numbamodel": [32, 76, 77, 78, 79, 80, 81, 89, 94, 96], "optimizemixin": 32, "panelmixin": 32, "avail": [33, 34, 48, 72, 76, 77, 82, 84, 85, 89, 90, 91, 97, 98, 99], "repres": [34, 39, 92, 96, 97, 100], "number": [34, 39, 50, 52, 69, 76, 79, 80, 84, 85, 96, 97], "some": [34, 39, 68, 69, 73, 77, 78, 79, 80, 84, 85, 89, 90, 94, 96, 97, 100], "start_cas": [35, 40, 41, 46, 47, 49, 56, 57, 63], "stop_cas": [35, 40, 41, 46, 47, 49, 56, 57, 63], "step_cas": [35, 40, 41, 46, 47, 49, 56, 57, 63], "return_datafram": [35, 56, 57], "pval": [36, 81, 94], "robust": [36, 91], "choic": [37, 38, 72, 73, 76, 82, 83, 88, 92, 93, 94, 95, 98, 100], "id": [38, 80, 89, 90, 92, 94, 96, 97], "chosen": [39, 84, 89, 96, 97], "return_seri": 40, "compute_loglike_nul": 44, "xhtml": 44, "summari": [44, 53, 77, 79, 84, 94], "statist": [44, 50, 53, 77, 79, 96], "small": [44, 53, 82, 86, 97], "tabl": [44, 53, 76, 77, 78, 79, 80, 81, 96, 97], "likelihood": [44, 45, 46, 48, 50, 51, 63, 77, 84, 86, 89, 90, 91, 94, 96], "converg": [44, 84, 85, 96], "null": [44, 48, 53, 61, 76, 84, 85, 86, 87, 89, 90, 91, 94, 96], "known": [44, 53, 97], "No": [44, 76, 77, 78, 79, 80, 81, 92, 94, 97], "addition": 44, "refer": [44, 58, 64, 73, 85, 96, 97, 100], "everyth": [44, 99], "rho": 44, "squar": [44, 84, 96], "respect": [44, 61, 85], "report": [44, 72, 82, 84, 85, 87, 89, 90, 91, 98], "aggreg": [44, 82], "well": [44, 77, 84, 89, 96, 97], "per": [44, 77, 85, 86, 87], "its": [44, 78, 96], "xmle": 44, "elem": 44, "holdfast": 45, "dure": [45, 76], "maxim": [45, 50, 51], "algorithm": [45, 84, 96], "numer": [45, 60, 84, 97], "befor": [46, 61, 63, 77, 79, 97], "vector": [46, 61, 63, 96], "frame": [46, 48, 61, 63, 76, 96], "current": [46, 48, 61, 63, 84, 86, 89, 90, 91, 94, 96, 100], "first": [46, 63, 76, 77, 78, 79, 80, 81, 84, 85, 87, 89, 90, 91, 94, 96, 97], "start": [46, 63, 79, 80, 96, 97], "One": [46, 63, 98, 100], "past": [46, 63], "usual": [46, 63, 85, 96, 97], "slice": [46, 63, 94], "iter": [46, 50, 63, 78, 85, 86, 87, 96], "neg": [46, 60, 63], "count": [46, 63, 76], "end": [46, 63, 68], "step": [46, 63], "calcul": [46, 63, 79, 89, 90, 91, 96], "use_cach": 48, "nullvalu": [48, 61, 85, 86, 87, 96], "column": [48, 61, 63, 76, 78, 80, 81, 97], "logsum": [48, 72, 77, 79, 81, 82, 83, 91, 96], "nest": [48, 67, 69, 77, 83, 88, 93, 98], "logit": [48, 77, 83, 89, 90, 93, 96], "arr": 49, "optim": [50, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 94, 96, 97], "scipi": [50, 66, 78, 97], "most": [50, 51, 73, 76, 77, 78, 79, 80, 81, 92, 94, 97, 99, 100], "bhhh": [50, 72, 77, 86], "slsqp": [50, 87, 89, 90, 92, 96], "constraint": [50, 53, 87, 96], "finit": [50, 96], "otherwis": [50, 61, 67, 73, 96, 97], "quiet": 50, "suppress": 50, "dashboard": [50, 84, 86, 89, 90, 91, 94], "minim": 50, "maxit": [50, 85], "maximum": [50, 60, 85, 86, 87, 96], "just": [50, 79, 92, 96, 97, 99], "dictx": 50, "final": [50, 92, 96], "elaps": 50, "exact": [50, 100], "recent": [51, 76, 77, 78, 79, 80, 81, 92, 94, 97, 100], "attach": [52, 77, 78, 89, 90, 91, 94, 96], "tabular": [53, 97], "categori": [53, 76, 80, 84, 85, 86, 87, 89, 90, 91, 96, 97], "applic": [53, 65, 79, 89, 96, 100], "t": [53, 77, 79, 84, 85, 86, 87, 89, 90, 91, 94, 96, 97, 99], "bind": 53, "Not": 55, "yet": [55, 96, 99], "include_nest": 56, "portion": [58, 64, 65, 96], "util": [58, 64, 65, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 87, 89, 92, 97, 98, 100], "actual": [58, 64, 80, 89, 96, 97, 100], "unusu": [58, 64], "design": [58, 64, 73, 96], "everi": [58, 64, 79, 80, 86, 96, 97], "least": [58, 64, 87, 96, 97], "compon": [58, 64, 65, 92, 96], "linear": [58, 65, 72, 95, 96, 97, 98], "exponenti": 58, "raw": [58, 78, 79, 80, 92, 96, 97, 100], "thu": [58, 84, 85, 97, 100], "p": [58, 64, 65, 77, 78, 79, 80, 84, 85, 87, 89, 90, 91, 92, 96, 100], "param1": [58, 64], "data1": [58, 64], "param2": [58, 64], "data2": [58, 64], "exp": 58, "ensur": [58, 79, 85, 87], "outcom": 58, "alwai": [58, 77, 87, 94, 96], "long": [58, 86, 94, 97, 100], "term": [58, 73, 96, 100], "linearfunct": [58, 64, 84, 100], "itself": [58, 73, 89, 96, 97], "intrins": 58, "awar": 58, "utility_funct": [58, 77, 79], "render": 58, "mathemat": 58, "correct": 58, "import": [58, 64, 65, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100], "m": [58, 64, 65, 73, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 94, 96, 99], "print": [58, 64, 65], "param3": [58, 64], "data3": [58, 64], "dataco4": [58, 64], "verbos": [59, 94], "remov": [59, 68, 70, 71, 95, 96, 97, 100], "messag": [59, 90, 91], "how": 59, "mani": [59, 89, 100], "drop": [59, 78, 80, 87, 97], "cap": [60, 84, 96], "limit": [60, 80, 96], "ceil": 60, "minimum": [60, 85, 86, 87, 96], "floor": 60, "entir": [60, 76], "outsid": [60, 96], "rang": [60, 79, 80], "init": [61, 94], "best": [61, 76, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 94, 95, 96], "initvalu": [61, 85, 86, 87, 96], "valueerror": [61, 69, 78, 97], "keyword": [61, 66, 67, 68, 69, 78, 97], "found": [61, 85, 96], "among": 61, "assign": [61, 66, 67, 77, 78, 80, 84, 85, 89, 96, 97], "disallow": 61, "although": [61, 68, 97, 100], "recommend": 61, "weight": [62, 83, 93], "return_format": [63, 96], "seri": [63, 87, 96], "two": [63, 77, 79, 96, 97, 100], "element": [65, 67, 69, 77, 96, 97, 100], "alter": [65, 97], "parama1": 65, "dataa": 65, "parama2": 65, "paramasc2": 65, "dictoflinearfunct": 65, "root_id": 66, "suggested_elemental_ord": 66, "digraph": [66, 68], "edg": [66, 67, 70], "incoming_graph_data": 66, "input": [66, 79, 94, 97], "empti": 66, "list": [66, 78, 97], "networkx": [66, 68], "packag": [66, 76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 99, 100], "instal": [66, 76, 86, 91, 95, 96, 98], "2d": 66, "spars": [66, 98], "pygraphviz": [66, 86, 91, 96], "pair": [66, 97], "nx": 66, "multigraph": 66, "multidigraph": 66, "etc": 66, "my": 66, "dai": [66, 88], "fridai": 66, "u": [67, 70, 77, 85, 86], "v": [67, 70, 85, 86, 87, 89, 90, 91, 98], "_clear_cach": 67, "between": [67, 70, 94, 97], "specifi": [67, 80, 85, 96, 97], "integ": [67, 68, 87, 96, 97], "upstream": 67, "downsteam": 67, "connect": [67, 68, 72, 77], "unconnect": 67, "children": [68, 69, 77, 86, 91, 96], "phi_paramet": 68, "allow": [68, 77, 85, 96, 97], "link": [68, 96], "later": [68, 69, 78, 100], "made": [68, 96], "stream": 68, "phi": 68, "network": [68, 76, 77], "gev": 68, "model": [68, 73, 76, 78, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100], "until": [69, 97], "human": 69, "readabl": 69, "networkxerror": 70, "reconnect": 71, "outedg": 71, "head": [71, 76, 77, 78, 79, 80, 81, 89], "inedg": 71, "attempt": [71, 94], "non": [71, 73, 76, 77, 83, 88, 92, 95, 100], "larch": [72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 98, 100], "from_idca": [72, 96, 97], "from_idc": [72, 97], "from_idco": [72, 77, 78, 80, 81, 89, 90, 91, 92], "nbyte": 72, "set_dtyp": 72, "datatre": [72, 77, 78, 79, 80, 81, 89, 92, 95, 96], "subspac": 72, "relationships_are_digit": 72, "n_case": [72, 81, 90, 91], "n_alt": 72, "altid": [72, 80, 84, 85, 96, 97], "add_dataset": 72, "add_relationship": 72, "digitize_relationship": [72, 80], "query_cas": [72, 77, 78, 90, 91, 92], "replace_dataset": [72, 78], "setup_flow": 72, "choice_ca_var": [72, 80, 84, 85, 94, 96], "choice_co_var": [72, 96], "choice_co_cod": [72, 77, 79, 80, 81, 89, 90, 91, 92, 96], "availability_ca_var": [72, 84, 85, 96], "availability_co_var": [72, 77, 89, 90, 91, 92, 96], "utility_ca": [72, 79, 80, 84, 85, 87, 94, 96], "utility_co": [72, 77, 84, 85, 89, 90, 91, 92, 96], "quantity_ca": [72, 79, 80], "pf": [72, 81, 96], "most_recent_estimation_result": 72, "possible_overspecif": 72, "set_valu": 72, "lock_valu": [72, 92], "set_cap": [72, 77, 84, 85, 89, 90, 91, 92, 96], "remove_unused_paramet": [72, 87], "maximize_loglik": [72, 77, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96], "calculate_parameter_covari": [72, 77, 86, 89, 90, 91, 92, 96], "fit": [72, 77, 94], "loglike_nul": 72, "parameter_summari": [72, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96], "estimation_statist": [72, 77, 79, 84, 96], "ancillari": 72, "d_loglik": [72, 79], "d_loglike_casewis": 72, "loglik": [72, 79, 90, 91], "loglike_casewis": 72, "probabl": [72, 78, 79, 80, 100], "total_weight": [72, 90, 91], "unicoderef": [72, 73], "parameterref": [72, 73], "dataref": [72, 73], "nestingtre": [72, 86, 91, 95, 96], "new_nod": [72, 77, 86, 91, 96], "add_nod": 72, "remove_nod": [72, 96], "add_edg": 72, "remove_edg": 72, "At": 73, "heart": 73, "common": [73, 79, 80, 97], "discret": [73, 76, 84, 88, 89, 95, 96, 98, 100], "written": 73, "specif": [73, 76, 77, 78, 79, 80, 81, 82, 89, 92, 94, 96, 100], "mind": 73, "It": [73, 84, 87, 97, 100], "integr": [73, 84, 96], "facilit": [73, 100], "want": [73, 77, 78, 79, 80, 85, 87, 91, 96, 97, 99], "biogem": [73, 89, 90, 91, 93], "flexibl": 73, "almost": [73, 76, 78], "basic": [73, 96, 97], "summat": 73, "sequenc": 73, "could": [73, 87, 97], "simpl": [73, 80, 84, 86, 87, 89, 92, 96, 97, 100], "travel_cost": 73, "piec": 73, "salient": 73, "featur": [73, 76, 77, 78, 79, 80, 81, 89, 94, 95, 96, 99], "know": 73, "instanti": 73, "instead": [73, 79, 96, 97, 100], "need": [73, 77, 78, 84, 89, 90, 91, 96, 97], "extract": [73, 77, 78, 79, 80, 81], "would": [73, 78, 79, 80, 85, 89, 90, 99], "geopanda": 76, "gpd": 76, "lx": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 99], "__version__": [76, 85, 86], "opt": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "hostedtoolcach": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "13": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 96, 97, 100], "x64": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "lib": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "python3": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "site": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "py": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 97, 100], "userwarn": [76, 77, 78, 79, 80, 81, 86, 89, 91, 94, 96], "v6": [76, 77, 78, 79, 80, 81, 89, 94, 95, 96, 99], "experiment": [76, 77, 78, 79, 80, 81, 89, 94, 96], "system": [76, 77, 78, 79, 80, 81, 89, 92, 94, 96, 97], "binari": [76, 77, 78, 79, 80, 81, 84, 89, 94, 96, 97], "your": [76, 77, 78, 79, 80, 81, 89, 94, 95, 96], "machin": [76, 77, 78, 79, 80, 81, 89, 94, 96], "take": [76, 77, 78, 79, 80, 81, 89, 94, 96], "while": [76, 77, 78, 79, 80, 81, 89, 94, 96, 97, 100], "pleas": [76, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 94, 96, 99], "patient": [76, 77, 78, 79, 80, 81, 89, 94, 96], "good": [76, 77, 78, 79, 80, 81, 86, 89, 90, 94, 96], "everyon": [76, 77, 78, 79, 80, 81, 89, 94, 96], "tool": [76, 77, 78, 79, 80, 81, 82, 89, 94, 96, 97, 99], "might": [76, 77, 78, 79, 80, 81, 82, 85, 89, 94, 96, 97], "buggi": [76, 77, 78, 79, 80, 81, 89, 94, 96], "6": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 97, 99], "17": [76, 77, 78, 79, 80, 81, 83, 84, 86, 88, 89, 90, 91, 92, 94, 97], "dev10": [76, 85, 86], "g3aa8aa3": [76, 85, 86], "welcom": [76, 77, 78, 79, 80], "town": [76, 77, 78, 79, 80], "here": [76, 77, 78, 79, 80, 85, 88, 93], "part": [76, 77, 78, 79, 80, 97], "internet": [76, 77, 78, 79, 80], "illustr": 76, "kind": [76, 77, 79, 80, 82, 97], "transport": [76, 77, 78, 79, 80, 82, 88, 96, 97], "planner": [76, 77, 78, 79, 80, 82], "build": [76, 77, 78, 79, 80, 82, 84, 96], "travel": [76, 77, 78, 79, 80, 82, 88, 92], "fiction": 76, "example_fil": [76, 77, 78, 79, 80, 81, 89, 90, 91, 92, 97], "zone": [76, 78, 80], "store": [76, 78, 96, 97], "zip": [76, 96], "open": [76, 97, 99], "read": [76, 78, 84, 85, 87, 96, 97], "unzip": 76, "disk": [76, 78, 97], "protocol": 76, "front": 76, "filenam": [76, 79], "taz_shap": 76, "read_fil": 76, "exampville_taz": 76, "plot": 76, "edgecolor": 76, "k": [76, 94, 96], "modulenotfounderror": [76, 77, 78, 79, 80, 81, 92, 94, 97], "traceback": [76, 77, 78, 79, 80, 81, 92, 94, 97, 100], "673": [76, 94], "plot_datafram": 76, "df": [76, 94], "cmap": 76, "color": 76, "ax": 76, "cax": 76, "categor": [76, 98], "legend": 76, "scheme": [76, 85], "vmin": 76, "vmax": 76, "markers": 76, "figsiz": 76, "legend_kwd": 76, "classification_kwd": 76, "missing_kwd": 76, "aspect": [76, 96], "style_kwd": 76, "672": 76, "matplotlib": 76, "pyplot": 76, "plt": 76, "674": 76, "importerror": 76, "modul": [76, 77, 78, 79, 80, 81, 86, 91, 92, 94, 96, 97], "handl": 76, "abov": [76, 77, 79, 80, 89, 96, 97], "occur": 76, "cell": [76, 77, 78, 79, 80, 81, 92, 94, 97, 100], "line": [76, 77, 78, 79, 80, 81, 92, 94, 97, 100], "979": 76, "geoplotaccessor": 76, "__call__": 76, "977": 76, "pop": [76, 78, 97], "geo": 76, "978": 76, "980": 76, "_pandas_kind": 76, "981": 76, "982": 76, "plotaccessor": 76, "675": [76, 86], "676": 76, "677": 76, "conda": 76, "c": 76, "forg": 76, "678": 76, "pip": [76, 99], "679": 76, "681": 76, "682": 76, "emp": [76, 77, 78, 79, 80, 81], "read_csv": [76, 77, 78, 79, 80, 81, 89, 90, 91, 92, 96, 97], "exampville_employ": [76, 77, 78, 79, 80, 81], "csv": [76, 77, 78, 79, 80, 81, 89, 90, 91, 92, 96, 97], "gz": [76, 77, 78, 79, 80, 81, 89, 90, 91, 92], "index_col": [76, 77, 78, 79, 80, 81, 97], "info": [76, 79, 80], "core": [76, 96, 97], "40": [76, 77, 78, 79, 80, 84, 85, 89, 90, 91, 96, 97], "entri": 76, "nonretail_emp": [76, 79, 80], "int64": [76, 84, 89, 90, 96, 97], "retail_emp": [76, 79, 80], "total_emp": 76, "usag": 76, "kb": 76, "118": [76, 85], "340": 76, "458": 76, "91": [76, 84, 86, 89, 90], "197": [76, 94], "199": 76, "277": 76, "285": 76, "44": [76, 77, 78, 79, 80, 81, 84, 86, 97], "57": [76, 87], "matrix": [76, 96, 97], "omx": [76, 77, 78, 79, 80, 81, 97], "reader": 76, "emb": 76, "handi": 76, "_tb": [76, 77, 78, 79, 80, 81, 97], "text_manip": [76, 77, 78, 79, 80, 81, 97], "truncate_path_for_displai": [76, 77, 78, 79, 80, 81, 97], "exampville_skim": [76, 77, 78, 79, 80, 81, 97], "r": [76, 77, 78, 79, 80, 81, 84, 96, 97], "nameerror": [76, 77, 78, 79, 80, 81, 92, 94, 97], "hh": [76, 77, 78, 79, 80, 81], "exampville_household": 76, "rangeindex": 76, "5000": [76, 94], "4999": 76, "incom": [76, 77, 79, 80, 81, 84, 85, 87, 89, 90, 96, 97, 100], "n_vehicl": 76, "hhsize": [76, 84], "geometri": 76, "hometaz": [76, 77, 78, 79, 80, 81], "hhid": [76, 77, 78, 79, 80, 81, 84], "n_trip": 76, "n_trips_hbw": 76, "n_trips_hbo": 76, "n_trips_nhb": 76, "12": [76, 77, 78, 79, 80, 81, 84, 89, 90, 92, 97, 100], "n_worker": 76, "507": 76, "361": [76, 85, 94], "35": [76, 79, 80, 84, 96, 97], "33": [76, 77, 79, 80, 84, 86, 91, 97], "34": [76, 79, 80, 84, 94, 97], "6026": 76, "50000": [76, 79, 80, 96, 97], "272": 76, "30": [76, 79, 87, 89, 90, 94, 96, 97], "77": [76, 84, 87, 91, 97], "30538": 76, "50001": 76, "424": 76, "72": [76, 85, 86, 89, 90, 97], "55": [76, 84, 97], "24131": 76, "50002": 76, "464": 76, "48": [76, 84, 86, 89, 90, 94], "61": [76, 84, 85, 97], "34838": 76, "50003": 76, "328": [76, 86], "95": [76, 84, 97], "129": 76, "36": [76, 77, 79, 80, 85, 89, 90, 94, 97], "29337": 76, "50004": 76, "pp": [76, 77, 78, 79, 80, 81, 85, 86], "exampville_person": 76, "12349": 76, "12348": 76, "personid": [76, 77, 78, 79, 80, 81], "hhidx": 76, "ag": [76, 77, 84, 89, 90], "work": [76, 77, 78, 79, 88, 95, 96, 98, 99], "n_work_tour": 76, "n_other_tour": 76, "n_tour": 76, "mb": 76, "60000": 76, "60001": 76, "27": [76, 79, 80, 84, 91, 94, 97], "60002": 76, "31": [76, 77, 79, 80, 84, 85, 96, 97], "60003": 76, "81": [76, 84, 85, 90, 91, 94], "60004": 76, "39": [76, 77, 78, 79, 84, 86, 91, 97], "exampville_tour": 76, "20739": 76, "20738": 76, "tourid": [76, 77, 78, 79, 80, 81], "dtaz": [76, 77, 78, 79, 80, 81], "tourmod": [76, 77, 81], "tourpurp": [76, 77, 78], "n_stop": 76, "20": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 94, 96, 97], "simul": [77, 78, 79, 80, 83, 95], "demonstr": [77, 78, 79, 80], "walk": [77, 78, 79, 80, 81, 84, 96, 97], "notebook": [77, 78, 79, 80, 91, 96], "we": [77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 92, 96, 97, 100], "tour": [77, 78, 79, 80, 81, 82], "begin": 77, "ll": [77, 78, 79, 80, 84, 85, 86, 87, 89, 94, 96], "skim": [77, 78, 79, 80, 81, 82, 98], "setup": [77, 100], "200": [77, 78, 79, 80, 81, 82, 83, 86], "45": [77, 78, 79, 80, 81, 84], "output_fil": [77, 78, 79, 80, 81], "43": [77, 78, 79, 80, 81, 84, 85, 89, 90], "filenotfounderror": [77, 78, 79, 80, 81], "els": [77, 78, 79, 80, 81], "_exec_example_n": [77, 78, 79, 80, 81], "def": [77, 78, 79, 80, 81], "ex": [77, 78, 79, 80, 81], "_200_exampvil": [77, 78, 79, 80, 81], "taz": [77, 78, 79, 80, 81, 82], "19": [77, 78, 79, 80, 81, 84, 91, 92, 94, 97], "real": 77, "survei": [77, 88, 89, 90], "household": [77, 78, 80, 82, 85, 86, 88], "person": [77, 78, 79, 80, 81, 82], "composit": 77, "addicti": [77, 78, 79], "da": [77, 78, 81, 84, 85], "sr": [77, 78, 81], "bike": [77, 78, 81, 84], "transit": [77, 78, 81, 84], "freez": [77, 78], "tour_dataset": [77, 78, 81], "set_index": [77, 78, 79, 80, 81, 96, 97], "alt": [77, 78, 79, 80, 81, 89, 90, 91, 94, 96, 97], "od_skim": [77, 78, 81], "from_omx": [77, 78, 79, 80, 81], "dt": [77, 78, 81], "od": [77, 78, 81], "otaz": [77, 78, 79, 80, 81], "14": [77, 78, 79, 80, 81, 84, 90, 91, 92, 94, 97], "trip": [77, 88, 97], "dt_work": 77, "And": [77, 84], "readi": [77, 99], "our": [77, 78, 79, 80, 84, 85, 87, 96, 97], "titl": [77, 79, 80, 84, 87, 89, 90, 91, 92], "v1": [77, 79], "becaus": [77, 84, 87, 96, 97], "serv": 77, "exclus": [77, 92, 96], "invehtim": [77, 81, 100], "auto_tim": [77, 81, 100], "cost": [77, 81, 85, 87, 92, 96, 97, 100], "auto_cost": [77, 81, 97, 100], "dollar": 77, "mile": [77, 79, 80], "asc_sr": [77, 81], "half": [77, 97], "share": [77, 79, 80], "logincom": 77, "asc_walk": [77, 81, 84, 85, 86, 87], "nonmotortim": [77, 81], "walk_tim": [77, 81], "asc_bik": [77, 81, 84, 85, 86, 87], "bike_tim": [77, 81], "asc_transit": [77, 81, 85, 86], "transit_ivtt": [77, 81], "outvehtim": [77, 81], "transit_ovtt": [77, 81], "transit_far": [77, 81], "lower": 77, "newli": 77, "poteni": 77, "higher": 77, "car": [77, 89, 90, 91, 96, 97], "motor": [77, 83, 85, 88, 96], "mu": 77, "nonmotor": [77, 86], "let": [77, 78, 79, 80, 84, 96], "visual": [77, 82, 91], "condit": [77, 79, 80], "criterion": 77, "60": [77, 84, 89, 90], "Then": [77, 78, 79, 80, 84], "prepar": [77, 89, 98], "though": 77, "load_data": 77, "assembl": [77, 92, 96], "contigu": [77, 97], "suitabl": 77, "effici": [77, 80, 97], "choice_avail_summari": 77, "satisfi": 77, "go": [77, 85, 86, 97], "ahead": 77, "compute_engin": [77, 79, 80, 84, 85, 86, 87], "mj": [77, 79, 80, 86], "jax": [77, 84, 86, 91, 92], "after": [77, 96], "varianc": 77, "covari": [77, 96], "incud": 77, "review": [77, 79, 80, 96], "varieti": [77, 79, 80, 96, 97], "resultj": [77, 79, 80, 86], "stderr": [77, 79, 80, 84, 85, 86, 87, 94], "append": 77, "37": [77, 78, 79, 80, 84, 97], "38": [77, 78, 79, 84, 94, 97], "exampville_mode_choic": [77, 78, 79], "html": [77, 78, 79], "overwrit": [77, 79], "metadata": [77, 79, 94], "dump": [77, 79], "exampville_mode_choice_fil": [78, 79], "201": [78, 79, 82, 83, 86], "load_model": [78, 79], "o": [78, 79], "41": [78, 79, 84, 86], "_201_exville_mode_choic": 78, "replic": 78, "merg": [78, 97], "characterist": [78, 86], "home": [78, 80, 88], "servic": [78, 94], "computation": [78, 96, 97], "expens": [78, 96], "better": [78, 96], "reload": 78, "them": [78, 84, 85, 89, 90, 91, 95, 96, 97], "command": [78, 91, 97, 100], "run": [78, 82, 86, 94], "instantan": 78, "dc": [78, 80, 90, 91, 92, 96], "bundl": [78, 79, 80], "did": 78, "dataservic": [78, 89], "hold": [78, 96], "row": [78, 79, 80, 97], "destin": [78, 82, 83], "taz_id": [78, 79, 80], "howev": 78, "appropri": [78, 79, 80, 97], "simpli": [78, 85, 96, 97, 100], "over": [78, 96, 97, 100], "root_dataset": 78, "full_lik": 78, "_getitem": 78, "loc": 78, "persist": 78, "next": [78, 84], "to_zarr": [78, 97], "zarr": [78, 79, 97], "recov": 78, "from_zarr": [78, 79], "123": [78, 85], "cl": 78, "121": 78, "register_dataarray_classmethod": 78, "122": 78, "open_zarr": [78, 97], "124": 78, "125": [78, 96, 97], "944": [78, 97], "group": [78, 84, 85, 89, 90, 97], "synchron": [78, 97], "decode_cf": [78, 97], "mask_and_scal": [78, 97], "decode_tim": [78, 97], "concat_charact": [78, 97], "decode_coord": [78, 97], "drop_vari": [78, 97], "consolid": [78, 97], "overwrite_encoded_chunk": [78, 97], "chunk_stor": [78, 97], "storage_opt": [78, 97], "decode_timedelta": [78, 97], "use_cftim": [78, 97], "zarr_vers": [78, 97], "chunked_array_typ": [78, 97], "from_array_kwarg": [78, 97], "930": [78, 97], "typeerror": [78, 97], "931": [78, 97], "got": [78, 97], "unexpect": [78, 97], "join": [78, 80, 97], "932": [78, 97], "934": [78, 97], "backend_kwarg": [78, 97], "935": [78, 97], "936": [78, 97], "941": [78, 97], "942": [78, 97], "945": [78, 97], "filename_or_obj": [78, 97], "946": [78, 85, 97], "947": [78, 97], "948": [78, 97], "949": [78, 97], "950": [78, 97], "951": [78, 97], "952": [78, 97], "953": [78, 97], "954": [78, 97], "955": [78, 97], "956": [78, 97], "957": [78, 97], "958": [78, 85, 86, 87, 89, 90, 91, 97], "959": [78, 97], "960": [78, 97], "961": [78, 97], "962": [78, 97], "api": [78, 95, 97], "558": [78, 97], "inline_arrai": [78, 97], "555": [78, 97], "556": [78, 97], "plugin": [78, 97], "get_backend": [78, 97], "560": [78, 97], "decod": [78, 97], "_resolve_decoders_kwarg": [78, 97], "561": [78, 97], "562": [78, 97], "open_backend_dataset_paramet": [78, 97], "open_dataset_paramet": [78, 97], "568": [78, 97], "569": [78, 97], "571": [78, 97], "205": [78, 97], "203": [78, 82, 83, 96, 97], "list_engin": [78, 97], "204": [78, 82, 83, 97], "206": [78, 97], "f": [78, 85, 94, 96, 97, 100], "unrecogn": [78, 97], "207": [78, 84, 86, 94, 97], "208": [78, 97], "209": [78, 97], "elif": [78, 97], "isinst": [78, 97], "issubclass": [78, 97], "backendentrypoint": [78, 97], "income_grp": [79, 80], "qcut": [79, 80], "For": [79, 80, 85, 86, 91, 96, 97, 100], "indentifi": 79, "rebuild": 79, "doesn": [79, 97], "typic": [79, 86, 96, 97], "user": [79, 96, 99], "manual": [79, 85, 86, 88], "logsums_fil": 79, "202": [79, 82, 83], "_202_exville_mc_logsum": 79, "much": [79, 80, 87, 95, 96, 97], "regular": [79, 80, 85, 100], "observ": [79, 80, 89, 90, 96, 97], "leverag": [79, 80], "make": [79, 80, 84], "manag": [79, 80, 97], "simpler": [79, 80], "anc": 79, "ca": [79, 96], "employ": [79, 80, 82], "right": [79, 80, 97], "augment": [79, 80], "version": [79, 80, 87, 96, 97, 99], "rename_axi": [79, 89, 90, 91, 97], "tour_id": 79, "now": [79, 80, 89], "empretail_highinc": [79, 80], "empnonretail_highinc": [79, 80], "empretail_lowinc": [79, 80], "empnonretail_lowinc": [79, 80], "quantity_scal": [79, 80], "theta": [79, 80], "distanc": [79, 80], "auto_dist": [79, 80, 97], "plock": [79, 80, 96], "benefici": [79, 80], "rel": [79, 80, 86, 92], "distribut": [79, 80], "across": [79, 80, 84, 85], "factor": [79, 80, 90, 96], "histogram_on_idca_vari": [79, 80], "24": [79, 84, 86, 90, 97], "histogram": [79, 80], "bin": [79, 80], "span": [79, 80], "subset": [79, 80], "pull": [79, 80, 85], "x_label": [79, 80], "filter_co": [79, 80], "10000": [79, 80, 92], "figur": 79, "shown": [79, 80, 96, 97], "insert": 79, "exampville_dest_choic": 79, "seper": [80, 96, 97], "second": 80, "co": [80, 84, 89, 90, 91, 96], "v2": 80, "disaggreg": 80, "explanatori": 80, "determin": 80, "variou": [80, 89, 90, 91, 96, 100], "low": 80, "origin": [80, 89, 90, 97], "000": [80, 86, 96], "80": [80, 89], "situat": 80, "relev": [80, 89, 97], "tour_plu": 80, "low_incom": 80, "50_000": 80, "tour_agg": 80, "groupbi": [80, 97], "unstack": [80, 97], "fillna": [80, 97], "j": [80, 97], "reset_index": [80, 94], "agg_dataset": 80, "to_fram": 80, "agg_tre": 80, "mg": 80, "namespac": 81, "spec_cont": 81, "logincome_sr": 81, "logincome_walk": 81, "logincome_bik": 81, "logincome_transit": 81, "io": 81, "stringio": 81, "spec": 81, "set_altnam": 81, "alts_name_to_id": 81, "from_spec": 81, "should_preload_data": 81, "quickli": 82, "particularli": 82, "rich": 82, "enough": 82, "larg": [82, 96, 97], "technic": [82, 96, 97], "realist": 82, "shapefil": 82, "preprocess": 82, "semi": 82, "mtc": [83, 95], "mnl": [83, 88, 93], "expand": [83, 88], "constrain": [83, 88, 96], "swissmetro": [83, 92, 95], "101": [83, 92, 93], "102": [83, 85, 92, 93, 94], "109": [83, 93], "exampvil": [83, 95], "lt": [84, 89, 90, 96, 97], "gt": [84, 89, 90, 96, 97], "5029": [84, 88], "5024": 84, "5025": 84, "5026": 84, "5027": 84, "5028": 84, "alt_nam": [84, 85, 89, 90, 96, 97], "u7": 84, "x27": [84, 89, 90, 96, 97], "sr2": [84, 85], "sr3": [84, 85], "chose": [84, 85], "ivtt": 84, "ovtt": [84, 85], "tottim": [84, 85, 87], "totcost": [84, 85, 87], "70": [84, 90], "115": 84, "75": [84, 85, 96, 97], "9429": 84, "9430": 84, "9433": 84, "9434": 84, "9436": 84, "9438": 84, "corredi": 84, "vehbywrk": [84, 85, 86], "vocc": 84, "wgt": 84, "_avail_": [84, 96, 97], "int8": [84, 96, 97], "altidxarrai": [84, 97], "datasetdimens": [84, 89, 90, 96, 97], "5029altid": 84, "6coordin": 84, "int641": [84, 89, 90, 96, 97], "5029arrai": 84, "6arrai": 84, "float321": 84, "0arrai": [84, 89, 90, 96, 97], "float6413": 84, "92": [84, 94], "96": [84, 86, 90], "58": [84, 89, 90, 94, 97], "87": [84, 87, 97], "54": [84, 86, 94], "float642": 84, "02": [84, 87, 90, 91, 96], "float6415": 84, "1arrai": [84, 89, 90, 96, 97], "89": [84, 85, 87, 94], "04": [84, 85, 87, 94, 96], "float6470": 84, "64": [84, 89, 97], "390": 84, "195": 84, "97": 84, "185": 84, "76": [84, 85, 86, 94], "88": [84, 85, 86, 94], "105": 84, "112": [84, 87, 89, 90], "56": [84, 86, 90], "03": [84, 86, 87, 91], "01": [84, 86, 87, 89, 90, 91, 94, 96, 97], "71": 84, "int642": [84, 89, 90], "9438arrai": 84, "perid": 84, "numalt": 84, "2arrai": [84, 89, 90, 97], "dist": [84, 85, 86], "float647": 84, "69": [84, 85, 97], "62": [84, 90, 97], "73arrai": 84, "73": [84, 94], "wkzone": 84, "int64664": 84, "738": 84, "696": 84, "665": 84, "1009": 84, "1030": 84, "1021arrai": 84, "664": 84, "1021": 84, "hmzone": 84, "int64726": 84, "667": 84, "1023": 84, "1019": 84, "726": [84, 86], "rspopden": 84, "52": [84, 89, 90, 97], "85": [84, 86, 94, 96, 97], "98": 84, "77arrai": 84, "rsempden": 84, "float649": 84, "53": [84, 89, 94, 97], "51arrai": 84, "93": [84, 90], "67": [84, 89, 90, 94], "51": [84, 86, 91, 94], "wkpopden": 84, "float6437": 84, "82": [84, 86], "wkempden": [84, 85, 86], "float643": [84, 96], "764": [84, 86], "vehavdum": 84, "femdum": 84, "int640": [84, 89, 90, 97], "int6435": 84, "37arrai": 84, "drlicdum": 84, "noncadum": 84, "numveh": 84, "int644": 84, "3arrai": [84, 89, 90, 96, 97], "5arrai": [84, 89, 90], "hhinc": [84, 85, 86, 87], "float6442": 84, "47": [84, 86, 91, 97], "famtyp": 84, "int647": 84, "99arrai": 84, "hhowndum": 84, "numemphh": 84, "numadlt": 84, "nmlt5": 84, "nm5to11": 84, "nm12to16": 84, "wkccbd": [84, 85], "wknccbd": [84, 85], "float644": 84, "int81": [84, 96, 97], "caseidpandasindexpandasindex": [84, 89, 90, 96, 97], "5020": 84, "5021": 84, "5022": 84, "5023": 84, "altidpandasindexpandasindex": [84, 97], "caseid_altid_": [84, 89, 90, 96, 97], "ref": 84, "px": [84, 94], "asc_sr2": [84, 85, 86, 87], "asc_sr3p": [84, 87], "asc_tran": [84, 87], "lastli": 84, "identifi": [84, 85, 89, 90, 91, 96, 97], "tradit": 84, "often": [84, 96], "view": [84, 96], "correctli": 84, "help": 84, "stabil": 84, "assert": [84, 96, 97], "3626": 84, "186279": 84, "std": [84, 85, 86, 87, 89, 90, 91, 94, 96], "stat": [84, 85, 86, 87, 89, 90, 91, 94, 96], "val": [84, 86, 94], "3768511": 84, "30450457": 84, "806": 84, "1782735": 84, "10463438": 84, "7251716": 84, "17770277": 84, "67088836": 84, "13259089": 84, "20704435": 84, "19410111": 84, "067": 84, "0021647618": 84, "0015531252": 84, "394": 84, "00035547721": 84, "0025379832": 84, "1401": 84, "0052899351": 84, "0018288885": 84, "892": 84, "012800235": 84, "0053235227": 84, "404": [84, 86], "009685621": 84, "0030330606": 84, "193": [84, 86], "0049202789": 84, "00023889157": 84, "051335153": 84, "0030993097": 84, "nbsp": [84, 85, 86, 87, 89, 90, 91, 94, 96], "err": [84, 85, 86, 87, 89, 90, 91, 94, 96], "signif": [84, 85, 86, 87, 89, 90, 91, 94, 96], "305": 84, "00": [84, 85, 86, 87, 89, 90, 91, 94, 96], "178": [84, 86, 90], "671": 84, "133": [84, 85, 94], "194": 84, "00216": 84, "00155": 84, "000355": 84, "00254": 84, "00529": 84, "00183": 84, "0128": [84, 89], "00532": [84, 85], "00969": 84, "00303": 84, "00492": 84, "000239": 84, "0513": 84, "00310": 84, "tough": [84, 87], "show": [84, 87], "alphabet": 84, "reorder": [84, 87], "systemat": 84, "lo": [84, 85, 87, 89, 90, 91], "asc": [84, 85, 86, 87, 89, 90, 91, 100], "statisticaggregatep": [84, 96], "casenumb": [84, 96], "cases5029log": 84, "72log": 84, "7309": 84, "45rho": 84, "w": [84, 96, 97], "parameters0": [84, 96], "504": 84, "instruct": [85, 86, 88, 94], "128": [85, 89, 94], "costbyincom": [85, 86], "motorized_tim": [85, 86], "nonmotorized_tim": [85, 86], "motorized_ovtbydist": [85, 86], "onc": [85, 86, 96, 97, 99], "har": 85, "conveni": [85, 96], "fact": 85, "less": [85, 97], "sinc": [85, 89, 99], "jointli": 85, "omit": [85, 100], "vehicl": 85, "worker": 85, "prefer": [85, 86], "joint": 85, "shadow_paramet": 85, "proport": 85, "sai": [85, 97], "vehbywrk_sr2": 85, "vehbywrk_sr": [85, 86], "wkcbd_": 85, "wkempden_": 85, "asc_": 85, "vehbywrk_": 85, "didn": 85, "fine": 85, "elsewher": [85, 97], "complex": [85, 86, 96], "But": [85, 97, 99], "weird": 85, "hard": 85, "parameter_group": 85, "zonal": [85, 86], "wkcbd": [85, 86], "futurewarn": [85, 86, 87, 89, 90, 91, 96, 97], "_collections_abc": [85, 86, 87, 89, 90, 91], "911": [85, 86, 87, 89, 90, 91], "yield": [85, 86, 87, 89, 90, 91], "_map": [85, 86, 87, 89, 90, 91], "parameter_ord": 85, "compar": 85, "match": [85, 89, 90, 91, 97], "put": [85, 96, 97], "sequenti": 85, "regex": 85, "1000": [85, 96], "ftol": 85, "1e": 85, "117": [85, 89, 90], "termin": [85, 86, 87, 90, 91, 96], "successfulli": [85, 86, 87, 90, 91, 96], "3444": 85, "185100565835": 85, "param_nam": [85, 86, 87, 96], "629": 85, "808": 85, "asc_sr3": [85, 86], "434": 85, "685": 85, "068": 85, "052": [85, 94], "005": 85, "009": 85, "006": [85, 86, 96], "020": 85, "045": 85, "vehbywrk_bik": [85, 86], "702": 85, "317": 85, "vehbywrk_transit": [85, 86], "vehbywrk_walk": [85, 86], "722": 85, "wkcbd_bike": [85, 86], "489": 85, "wkcbd_sr2": [85, 86], "260": 85, "wkcbd_sr3": [85, 86], "069": 85, "wkcbd_transit": [85, 86], "309": [85, 87], "wkcbd_walk": [85, 86], "wkempden_bik": [85, 86], "002": [85, 86], "wkempden_sr2": [85, 86], "wkempden_sr3": [85, 86], "wkempden_transit": [85, 86], "003": 85, "wkempden_walk": [85, 86], "toler": 85, "excess": 85, "remain": [85, 96, 97], "steadi": 85, "platform": 85, "0524": 85, "0104": [85, 86], "0202": 85, "00381": 85, "0454": 85, "00577": 85, "0196": 85, "191": 85, "166": 85, "90": [85, 89, 90, 97], "252": 85, "00193": 85, "00122": 85, "00158": 85, "000390": 85, "00226": 85, "000452": 85, "00313": 85, "000361": 85, "00289": 85, "000742": 85, "00198": 85, "00864": 85, "00515": 85, "00600": 85, "00315": 85, "258": 85, "0666": 85, "169": [85, 87], "427": 85, "106": 85, "152": 85, "248": 85, "0679": 85, "348": 85, "179": 86, "mu_motor": [86, 96], "mu_nonmotor": 86, "costbyinc": 86, "traveltim": 86, "788": [86, 91, 96], "neither": [86, 91, 96], "pydot": [86, 91, 96], "nor": [86, 91, 96], "unabl": [86, 91, 96], "draw": [86, 91, 96], "xml": [86, 91, 96], "__xml__": [86, 91, 96], "0x7f4274c31720": 86, "quit": [86, 97, 99], "short": 86, "session": 86, "pretti": [86, 87, 97], "blaze": 86, "As": [86, 97], "grow": 86, "achiev": [86, 87, 100], "becom": 86, "valuabl": 86, "013": 86, "3441": 86, "672530467279": 86, "325": 86, "506": 86, "345": 86, "039": 86, "004": 86, "010": 86, "114": [86, 90], "015": 86, "001": [86, 96], "769": 86, "046": 86, "735": 86, "226": 86, "707": 86, "408": 86, "781": 86, "921": 86, "0386": 86, "0145": 86, "00387": 86, "0462": 86, "00540": 86, "0211": 86, "00393": 86, "00161": 86, "0100": [86, 96], "00465": 86, "00621": 86, "00302": 86, "229": 86, "0651": 86, "150": [86, 96, 97], "163": 86, "0962": 86, "222": 86, "236": 86, "00167": 86, "00109": 86, "00115": 86, "000354": 86, "00164": 86, "000449": 86, "65": [86, 89, 90, 94], "00224": 86, "000507": 86, "00217": 86, "000762": 86, "417": 86, "255": 86, "475": 86, "221": 86, "358": 86, "135": 86, "672363": 86, "2009723": 86, "41673434": 86, "882": 86, "3259326": 86, "2546277": 86, "5074669": 86, "47504437": 86, "278": 86, "40391469": 86, "22131641": 86, "825": 86, "34520614": 86, "35784563": 86, "9647": 86, "038650849": 86, "010374269": 86, "0039307767": 86, "0016126675": 86, "437": 86, "010044631": 86, "0046500321": 86, "0062074189": 86, "0030219576": 86, "054": 86, "11385823": 86, "021103812": 86, "395": 86, "014533671": 86, "00386768": 86, "758": 86, "72624494": 86, "13491675": 86, "029": 86, "76884717": 86, "17846981": 86, "295": 86, "046223942": 86, "0053980774": 86, "563": 86, "73481115": 86, "22876365": 86, "212": 86, "2258028": 86, "065079868": 86, "70763985": 86, "14990923": 86, "76384627": 86, "16340563": 86, "40693094": 86, "32762641": 86, "242": 86, "19327715": 86, "096248701": 86, "008": 86, "78145279": 86, "19991517": 86, "909": 86, "92191853": 86, "22190614": 86, "155": [86, 89], "11403132": 86, "23647104": 86, "4822": 86, "0016762354": 86, "0010870055": 86, "542": 86, "0011496584": 86, "0003544006": 86, "244": 86, "0016390476": 86, "00044900356": 86, "0022379541": 86, "00050738978": 86, "411": 86, "0021686386": 86, "00076259347": 86, "844": 86, "suppos": 87, "hour": 87, "cent": 87, "minut": 87, "formul": 87, "target": 87, "ratio": 87, "exce": 87, "exactli": 87, "m_explicit": 87, "result_explicit": 87, "049": 87, "3788": 87, "5731392236194": 87, "161e": 87, "456e": 87, "081e": 87, "894e": 87, "988e": 87, "985e": 87, "628e": 87, "409e": 87, "385e": 87, "739e": 87, "ratiobound": 87, "pmaximum": 87, "min_ratio": 87, "max_ratio": 87, "999": 87, "scale": [87, 96], "100": [87, 89, 92, 96, 97], "059": 87, "573358506236": 87, "158e": 87, "455e": 87, "986e": [87, 91], "993e": 87, "616e": 87, "162e": 87, "413e": 87, "219e": 87, "740e": 87, "116": 87, "__getitem__": [87, 96], "treat": [87, 96], "deprec": [87, 95, 96, 97], "ser": [87, 96], "iloc": [87, 96], "po": [87, 96], "i_num": 87, "cmin_num": 87, "i_den": 87, "cmin_den": 87, "119": 87, "cmax_num": 87, "cmax_den": 87, "keyvaluex": [87, 96], "logloss0": [87, 96], "7533452691402339d_logloss": 87, "197e": 87, "476e": 87, "020e": 87, "958e": 87, "786e": 87, "906e": 87, "519e": 87, "677e": 87, "384e": 87, "716e": 87, "849e": 87, "442e": 87, "nit59nfev80njev59status0messag": 87, "successtrueelapsed_time0": [87, 96], "622713method": 87, "n_cases5029iteration_number59loglik": 87, "46": [87, 89, 97], "103": [87, 89, 90, 92], "94": [87, 97], "175": 87, "00199": 87, "00154": 87, "000462": 87, "00252": 87, "00616": 87, "00180": 87, "0141": 87, "00550": 87, "00941": 87, "00306": 87, "00522": 87, "000243": 87, "50": [87, 89, 91, 96, 97], "00174": 87, "09e": 87, "sort": 87, "discov": 87, "sampl": [88, 93, 96], "san": 88, "francisco": 88, "bai": 88, "area": 88, "compris": 88, "commut": 88, "drawn": 88, "conduct": 88, "metropolitan": 88, "commiss": 88, "spring": 88, "1990": 88, "diari": 88, "member": 88, "older": 88, "five": 88, "year": 88, "individu": [88, 97], "socio": 88, "demograph": 88, "reproduc": [88, 93], "document": 88, "sever": [88, 93, 100], "affect": [89, 90, 91], "mere": [89, 90, 91], "style": [89, 90, 91, 97], "train_av": [89, 90, 91, 92], "sp": [89, 90, 91, 92], "sm_av": [89, 90, 91, 92], "car_av": [89, 90, 91, 92], "asc_train": [89, 90, 91, 92], "asc_car": [89, 90, 91, 92], "train_tt": [89, 90, 91, 92], "b_time": [89, 90, 91, 92], "sm_tt": [89, 90, 91, 92], "car_tt": [89, 90, 91, 92], "train_co": [89, 90, 91, 92], "ga": [89, 90, 91, 92], "b_cost": [89, 90, 91, 92], "sm_co": [89, 90, 91, 92], "car_co": [89, 90, 91, 92], "ration": [89, 90, 91], "b_": [89, 90, 91], "warehous": 89, "come": [89, 94], "raw_data": [89, 90, 91], "ticket": [89, 90], "who": [89, 90], "luggag": [89, 90], "male": [89, 90], "dest": [89, 90], "train_h": [89, 90], "sm_he": [89, 90], "sm_seat": [89, 90], "120": [89, 90], "49": [89, 90, 91], "84": [89, 90], "130": [89, 90], "keep": [89, 90, 92, 94], "selected_data": 89, "ve": 89, "train": [89, 90, 91], "sm": [89, 90, 91], "6768": [89, 90, 91], "8445": 89, "8446": 89, "8447": 89, "8448": 89, "8449": 89, "8450": 89, "u5": [89, 90], "939": 89, "104": 89, "_altid_xarrai": [89, 90], "6768_altid_": 89, "3coordin": [89, 90, 96, 97], "8450arrai": 89, "939arrai": 89, "7arrai": [89, 90], "int643": [89, 90], "int64112": [89, 90], "108": 89, "108arrai": 89, "int6448": [89, 90], "13arrai": [89, 90], "int64120": [89, 90], "60arrai": [89, 90], "int6463": [89, 90], "53arrai": 89, "int6452": [89, 90], "21arrai": [89, 90], "int6420": [89, 90, 96], "30arrai": [89, 90], "int64117": [89, 90], "100arrai": 89, "int6465": [89, 90], "80arrai": 89, "8441": 89, "8442": 89, "8443": 89, "8444": 89, "_altid_pandasindexpandasindex": [89, 90], "notic": [89, 95], "carefulli": 89, "rather": 89, "5331": 89, "251953": 89, "gradient": [89, 90, 91], "15477206": 89, "050933838": 89, "1547722": 89, "70136625": 89, "062522888": 89, "70136644": 89, "010838839": 89, "8173828": 89, "01083884": 89, "012777695": 89, "5024414": 89, "012777694": 89, "0432": 89, "701": 89, "0549": 89, "78": [89, 97], "0108": 89, "000518": 89, "000569": 89, "10728": 90, "10723": 90, "10724": 90, "10725": 90, "10726": 90, "10727": 90, "1192": 90, "156": 90, "10728_altid_": 90, "10727arrai": 90, "1192arrai": 90, "4arrai": [90, 96, 97], "20arrai": [90, 96], "148": 90, "148arrai": 90, "96arrai": 90, "120arrai": 90, "70arrai": 90, "10718": 90, "10719": 90, "10720": 90, "10721": 90, "10722": 90, "weight_co_var": 90, "5931": 90, "557617": 90, "11434829": 90, "048187256": 90, "1143483": 90, "75647625": 90, "043884277": 90, "011196585": 90, "70166016": 90, "013215263": 90, "92382812": 90, "success": [90, 91], "statu": [90, 91], "143e": 90, "565e": 90, "120e": 90, "322e": 90, "nit": [90, 91], "jac": [90, 91], "819e": 90, "388e": 90, "017e": 90, "238e": 90, "nfev": [90, 91], "njev": [90, 91], "7612": 90, "199999999999": 90, "logloss": [90, 91], "7792172587671765": 90, "5576171875": 90, "0407": 90, "756": [90, 94], "0528": 90, "0112": 90, "000490": 90, "0132": 90, "000537": 90, "look": [90, 96, 97], "jupyt": [91, 96], "verifi": 91, "0x7f3cb4ad0340": 91, "5236": 91, "899902": 91, "16716959": 91, "015563965": 91, "51192705": 91, "062271118": 91, "0085662475": 91, "87304688": 91, "0089856784": 91, "2919922": 91, "48680588": 91, "045410156": 91, "_src": 91, "abstract_arrai": 91, "runtimewarn": [91, 96, 97], "overflow": 91, "encount": [91, 96, 97], "cast": [91, 96, 97], "canonical_concrete_av": 91, "weak_typ": 91, "interpret": 91, "xla": [91, 94], "157": 91, "asarrai": 91, "672e": 91, "119e": 91, "566e": 91, "868e": 91, "556e": 91, "227e": 91, "730e": 91, "292e": 91, "541e": 91, "7737736262328235": 91, "89990234375": 91, "167": 91, "0371": 91, "0545": 91, "512": 91, "0452": 91, "0791": 91, "00857": 91, "000463": 91, "000600": 91, "00899": 91, "000570": 91, "00107": 91, "487": 91, "0279": 91, "0389": 91, "pytest": [92, 94], "approx": [92, 94], "sm_cost": 92, "train_cost": 92, "train_cost_sc": 92, "train_tt_scal": 92, "sm_cost_scal": 92, "sm_tt_scale": 92, "car_co_sc": 92, "car_tt_scal": 92, "car_av_sp": 92, "train_av_sp": 92, "choos": [92, 97], "m1": 92, "model1": 92, "m2": [92, 94], "model2": 92, "lexicograph": 92, "compensatori": 92, "regard": [92, 100], "m3": 92, "model3": 92, "z_cost": 92, "jnp": 92, "fold": [92, 94], "fold_dataset": 92, "_group_break": 92, "dissolve_zero_vari": 92, "membership": 92, "latent": 92, "mk": 92, "w_other": 92, "w_cost": 92, "latentclass": 92, "b": 92, "set_altid": [92, 96], "groupid": 92, "varnam": 94, "price": 94, "conven": 94, "comfort": 94, "meal": 94, "petfr": 94, "emipp": 94, "nonsig1": 94, "nonsig2": 94, "nonsig3": 94, "artifici": 94, "sum": [94, 96, 97], "randvars_norm": 94, "mixtur": 94, "normal": [94, 99], "sd": 94, "n_draw": 94, "300": 94, "prerol": 94, "common_draw": 94, "2278": 94, "119873": 94, "0847833": 94, "19833504": 94, "469": 94, "87829447": 94, "15528066": 94, "656": 94, "0718255": 94, "23265697": 94, "905": 94, "7090243": 94, "209664": 94, "151": 94, "064875404": 94, "14742585": 94, "4401": 94, "009499986": 94, "15242425": 94, "06233": 94, "016859994": 94, "13450207": 94, "1254": 94, "9602283": 94, "39923492": 94, "0505918": 94, "17949775": 94, "853": 94, "0427685": 94, "14787067": 94, "70335627": 94, "22051126": 94, "5498744": 94, "36840037": 94, "4678429": 94, "17769372": 94, "261": 94, "result2": 94, "2276": 94, "567383": 94, "0574805": 94, "19726777": 94, "9015519": 94, "15892163": 94, "0391817": 94, "23288026": 94, "7305192": 94, "21359079": 94, "079885497": 94, "14670981": 94, "5445": 94, "0079311343": 94, "15114565": 94, "05247": 94, "018052435": 94, "1342542": 94, "1345": 94, "8852413": 94, "39591229": 94, "813": 94, "0382619": 94, "17671853": 94, "875": 94, "0370626": 94, "14128052": 94, "69893378": 94, "24529965": 94, "849": 94, "2661174": 94, "28922653": 94, "378": 94, "4773146": 94, "18105808": 94, "159": 94, "2024": 94, "122128": 94, "extern": 94, "slow_operation_alarm": 94, "cc": 94, "f32": 94, "4000": 94, "op_nam": 94, "jit": 94, "func": 94, "main": [94, 96], "vmap": 94, "gather": 94, "dimension_numb": 94, "gatherdimensionnumb": 94, "offset_dim": 94, "collapsed_slice_dim": 94, "start_index_map": 94, "slice_s": 94, "unique_indic": 94, "indices_are_sort": 94, "gatherscattermod": 94, "promise_in_bound": 94, "fill_valu": 94, "source_fil": 94, "tmp": [94, 96, 97], "ipykernel_2794": 94, "1507874951": 94, "source_lin": 94, "isn": 94, "necessarili": 94, "bug": 94, "inher": [94, 97], "trade": 94, "runtim": 94, "guard": 94, "too": [94, 97], "fundament": [94, 96], "abl": 94, "program": 94, "envvar": 94, "xla_flag": 94, "xla_dump_to": 94, "foo": 94, "754584": 94, "took": 94, "632557336": 94, "428127": 94, "124903": 94, "696851324": 94, "902": 94, "233": 94, "214": 94, "0799": 94, "147": 94, "00793": 94, "0181": 94, "134": 94, "396": 94, "177": 94, "141": 94, "699": 94, "245": 94, "289": 94, "181": 94, "xlogit": 94, "mixedlogit": 94, "to_datafram": 94, "randvar": 94, "panel": 94, "batch_siz": 94, "winner": 95, "agifor": 95, "56th": 95, "annual": 95, "symposium": 95, "innov": 95, "award": 95, "develop": [95, 96], "project": 95, "veri": 95, "under": 95, "There": [95, 97], "plenti": 95, "undocu": 95, "own": 95, "risk": 95, "rigor": 95, "test": 95, "guid": 96, "decent": 96, "grasp": 96, "suggest": 96, "section": 96, "cours": 96, "advanc": [96, 99], "topic": 96, "broken": 96, "learn": 96, "introduc": 96, "hidden": 96, "df_ca": 96, "tiny_idca": [96, 97], "cat": [96, 97], "astyp": [96, 97], "categoricaldtyp": [96, 97], "bu": [96, 97], "altnum": 96, "sort_index": 96, "fill_miss": 96, "drop_var": 96, "chosencod": 96, "sel": 96, "duck_array_op": [96, 97], "invalid": [96, 97], "30000": [96, 97], "40000": [96, 97], "225": [96, 97], "cartim": [96, 97], "bustim": [96, 97], "walktim": [96, 97], "altnumxarrai": 96, "4altnum": 96, "int6430000": [96, 97], "50000arrai": [96, 97], "int6430": [96, 97], "10arrai": [96, 97], "int64150": [96, 97], "15arrai": 96, "int6440": [96, 97], "altnumpandasindexpandasindex": 96, "univers": 96, "accessor": 96, "manipul": 96, "facet": 96, "via": [96, 99], "alts_map": 96, "miss": [96, 97], "dim_nam": 96, "newalt": 96, "newaltsxarrai": 96, "3newalt": 96, "4coordin": 96, "newaltspandasindexpandasindex": 96, "three": 96, "wai": [96, 97], "neccessarili": 96, "dummi": [96, 97], "ch": 96, "expect": [96, 97, 99], "toggl": 96, "potenti": [96, 97], "boolean": [96, 97], "equival": 96, "av": 96, "combin": [96, 100], "mutual": 96, "mix": 96, "income_car": 96, "income_bu": 96, "permit": [96, 100], "nodeid": 96, "50093705": 96, "32164469": 96, "3559175": 96, "86063728": 96, "node_nam": 96, "u6": 96, "_root_": 96, "dataarraycaseid": 96, "4nodeid": 96, "5009": 96, "356": 96, "8606arrai": 96, "nodeidpandasindexpandasindex": 96, "tier": 96, "librari": [96, 97], "wipe": 96, "rebuilt": 96, "particular": [96, 97, 100], "special": [96, 100], "exogen": 96, "stuctur": 96, "var_co": 96, "var_ca": 96, "u4": 96, "3e": 96, "4e": 96, "5e": 96, "3var_co": 96, "1var_ca": 96, "2coordin": 96, "04arrai": 96, "float64150": 96, "var_copandasindexpandasindex": 96, "var_capandasindexpandasindex": 96, "multinomi": 96, "That": [96, 97], "0x7f78e2a3ace0": 96, "accomplish": 96, "z": [96, 97], "overlap": 96, "mu_omni": 96, "omni": 96, "noth": 96, "overload": 96, "degener": 96, "difficult": 96, "care": 96, "odd": 96, "side": 96, "effect": 96, "don": [96, 97, 99], "address": 96, "separ": 96, "few": 96, "won": 96, "four": 96, "infinit": 96, "problemat": 96, "practic": [96, 98], "unconstrain": 96, "74823900518063": 96, "02000": 96, "01573": 96, "03612": 96, "00000": 96, "01000": 96, "2292": 96, "plai": 96, "nice": 96, "unbound": 96, "poor": 96, "consid": 96, "9370597512951575d_logloss": 96, "000000": 96, "001375": 96, "001574": 96, "108505": 96, "nit6nfev14njev6status0messag": 96, "046292method": 96, "n_cases4iteration_number6loglik": 96, "displai": 96, "live": 96, "progress": [96, 99], "optmiz": 96, "analyst": 96, "interrupt": 96, "someth": [96, 97], "wrong": 96, "necessari": 96, "computat": 96, "thing": [96, 97, 99], "376": 96, "382": 96, "2404": 96, "sqrt": 96, "pstderr": 96, "diagon": 96, "la": 96, "cart": 96, "commonli": 96, "select": [96, 100], "0200": 96, "na": 96, "0157": 96, "0394": 96, "0361": 96, "0423": 96, "cases4log": 96, "94log": 96, "01rho": 96, "072": 96, "excel": 96, "to_xlsx": 96, "demo": 96, "xlsx": 96, "receiv": 97, "sometim": 97, "idcas": 97, "record": 97, "idalt": 97, "decis": 97, "maker": 97, "literatur": 97, "wide": 97, "data_co": 97, "tiny_idco": 97, "carcost": 97, "buscost": 97, "tall": 97, "data_ca": 97, "variat": 97, "storag": 97, "certainli": 97, "distinct": 97, "sub": 97, "idc": 97, "super": 97, "easi": 97, "multiindex": 97, "stack": 97, "switch": 97, "clean": 97, "analag": 97, "set_column": 97, "neatli": 97, "arrang": 97, "forc": 97, "forced_ca": 97, "from_tupl": 97, "lambda": 97, "value_count": 97, "get_level_valu": 97, "ipykernel_3040": 97, "1380147596": 97, "previou": 97, "future_stack": 97, "adopt": 97, "silenc": 97, "downcast": 97, "ffill": 97, "bfill": 97, "infer_object": 97, "set_opt": 97, "no_silent_downcast": 97, "especi": [97, 99], "exchang": 97, "softwar": 97, "to_xarrai": 97, "4altid": 97, "float6440": 97, "float64100": 97, "saw": 97, "collaps": 97, "9223372036854775808": 97, "int64100": 97, "swap": 97, "compress": 97, "_casealt_": 97, "_caseptr_": 97, "alt_idx": 97, "_exclude_dims_": 97, "_alt_idx_": 97, "_caseptr_xarrai": 97, "4_casealt_": 97, "11altid": 97, "3_caseptr_": 97, "5coordin": 97, "11arrai": 97, "_caseptr_pandasindexpandasindex": 97, "altid_casealt_": 97, "_casealt__alt_idx_": 97, "alt_idx_caseptr_": 97, "enter": 97, "multipli": [97, 100], "algebra": 97, "queu": 97, "regardless": 97, "seem": 97, "worri": 97, "notabl": 97, "guidelin": 97, "availabl": 97, "natur": 97, "emploi": 97, "appar": 97, "intern": 97, "placehold": 97, "choices1": 97, "_": 97, "clear": 97, "placement": 97, "simultan": 97, "ordin": 97, "nocar": 97, "1car": 97, "2car": 97, "categories_dtyp": 97, "get_dummi": 97, "formal": 97, "datatyp": 97, "still": 97, "explod": 97, "chosen_ca": 97, "boolfals": 97, "truearrai": 97, "usabl": 97, "deriv": 97, "pytabl": 97, "meta": 97, "whole": 97, "skims_dataset": 97, "to_dataset": 97, "skim_df": 97, "1595": 97, "1596": 97, "1597": 97, "1598": 97, "1599": 97, "1600": 97, "94xarrai": 97, "40j": 97, "40coordin": 97, "40arrai": 97, "float640": 97, "33arrai": 97, "float641": 97, "94arrai": 97, "ipandasindexpandasindex": 97, "jpandasindexpandasindex": 97, "advantag": 97, "promptli": 97, "shape": 97, "defer": 97, "eagerli": 97, "quick": 98, "dens": 98, "hot": 98, "larch6": 99, "lot": 99, "v5": 99, "familiar": 99, "feel": 99, "free": 99, "issu": 99, "tracker": 99, "perfectli": 99, "namedparamet": 100, "nameddatavalu": 100, "space": 100, "alphanumer": 100, "charact": 100, "done": 100, "permiss": 100, "On": 100, "hand": 100, "gen_cost": 100, "notimplementederror": 100, "1094": 100, "__add__": 100, "1092": 100, "1093": 100, "_what_i": 100, "implicit": 100, "lock": 100, "compos": 100, "auto_tol": 100, "simplif": 100, "subtract": 100, "cancel": 100, "remove_param": 100, "remove_data": 100}, "objects": {"larch": [[2, 0, 1, "", "DataTree"], [16, 0, 1, "", "Dataset"], [32, 0, 1, "", "Model"], [66, 0, 1, "", "NestingTree"]], "larch.DataTree": [[3, 1, 1, "", "ALTID"], [4, 1, 1, "", "CASEID"], [2, 2, 1, "", "__init__"], [5, 2, 1, "", "add_dataset"], [6, 2, 1, "", "add_relationship"], [7, 2, 1, "", "digitize_relationships"], [8, 1, 1, "", "n_alts"], [9, 1, 1, "", "n_cases"], [10, 2, 1, "", "query_cases"], [11, 1, 1, "", "relationships_are_digitized"], [12, 2, 1, "", "replace_datasets"], [13, 1, 1, "", "root_node_name"], [14, 2, 1, "", "setup_flow"], [15, 1, 1, "", "subspaces"]], "larch.Dataset": [[16, 2, 1, "", "__init__"], [17, 1, 1, "", "attrs"], [18, 1, 1, "", "chunks"], [19, 1, 1, "", "chunksizes"], [24, 1, 1, "", "coords"], [25, 1, 1, "", "data_vars"], [26, 1, 1, "", "dims"], [27, 1, 1, "", "encoding"], [28, 1, 1, "", "indexes"], [29, 1, 1, "", "nbytes"], [30, 2, 1, "", "set_dtypes"], [31, 1, 1, "", "sizes"]], "larch.Model": [[32, 2, 1, "", "__init__"], [33, 1, 1, "", "availability_ca_var"], [34, 1, 1, "", "availability_co_vars"], [35, 2, 1, "", "bhhh"], [36, 2, 1, "", "calculate_parameter_covariance"], [37, 1, 1, "", "choice_ca_var"], [38, 1, 1, "", "choice_co_code"], [39, 1, 1, "", "choice_co_vars"], [40, 2, 1, "", "d_loglike"], [41, 2, 1, "", "d_loglike_casewise"], [42, 1, 1, "", "dataset"], [43, 1, 1, "", "datatree"], [44, 2, 1, "", "estimation_statistics"], [45, 2, 1, "", "lock_value"], [46, 2, 1, "", "loglike"], [47, 2, 1, "", "loglike_casewise"], [48, 2, 1, "", "loglike_null"], [49, 2, 1, "", "logsums"], [50, 2, 1, "", "maximize_loglike"], [51, 1, 1, "", "most_recent_estimation_result"], [52, 1, 1, "", "n_cases"], [53, 2, 1, "", "parameter_summary"], [54, 1, 1, "", "pf"], [55, 1, 1, "", "possible_overspecification"], [56, 2, 1, "", "probability"], [57, 2, 1, "", "quantity"], [58, 3, 1, "", "quantity_ca"], [59, 2, 1, "", "remove_unused_parameters"], [60, 2, 1, "", "set_cap"], [61, 2, 1, "", "set_values"], [62, 2, 1, "", "total_weight"], [63, 2, 1, "", "utility"], [64, 3, 1, "", "utility_ca"], [65, 3, 1, "", "utility_co"]], "larch.NestingTree": [[66, 2, 1, "", "__init__"], [67, 2, 1, "", "add_edge"], [68, 2, 1, "", "add_node"], [69, 2, 1, "", "new_node"], [70, 2, 1, "", "remove_edge"], [71, 2, 1, "", "remove_node"]], "larch.model.linear": [[73, 0, 1, "", "DataRef"], [73, 0, 1, "", "ParameterRef"], [73, 0, 1, "", "UnicodeRef"]], "larch.model.linear.ParameterRef": [[73, 2, 1, "", "string"], [73, 2, 1, "", "valid"], [73, 2, 1, "", "value"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"dataset": [0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42], "constructor": 0, "attribut": [0, 1, 74], "method": [0, 1, 74, 75], "datatre": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 43], "larch": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 95, 97, 99], "altid": 3, "caseid": 4, "add_dataset": 5, "add_relationship": 6, "digitize_relationship": 7, "n_alt": 8, "n_case": [9, 52], "query_cas": 10, "relationships_are_digit": 11, "replace_dataset": 12, "root_node_nam": 13, "setup_flow": 14, "subspac": 15, "attr": 17, "chunk": 18, "chunksiz": 19, "construct": [20, 21, 22, 23], "from_idca": 21, "from_idc": 22, "from_idco": 23, "coord": 24, "data_var": 25, "dim": 26, "encod": [27, 97], "index": 28, "nbyte": 29, "set_dtyp": 30, "size": 31, "model": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 74, 77, 79, 80, 96], "availability_ca_var": 33, "availability_co_var": 34, "bhhh": 35, "calculate_parameter_covari": 36, "choice_ca_var": 37, "choice_co_cod": 38, "choice_co_var": 39, "d_loglik": 40, "d_loglike_casewis": 41, "estimation_statist": 44, "lock_valu": 45, "loglik": 46, "loglike_casewis": 47, "loglike_nul": 48, "logsum": [49, 78, 80], "maximize_loglik": 50, "most_recent_estimation_result": 51, "parameter_summari": 53, "pf": 54, "possible_overspecif": 55, "probabl": 56, "quantiti": 57, "quantity_ca": 58, "remove_unused_paramet": 59, "set_cap": 60, "set_valu": 61, "total_weight": 62, "util": [63, 74, 96], "utility_ca": 64, "utility_co": 65, "nestingtre": [66, 67, 68, 69, 70, 71, 75], "add_edg": 67, "add_nod": 68, "new_nod": 69, "remove_edg": 70, "remove_nod": 71, "api": 72, "data": [72, 73, 74, 76, 80, 96, 97], "linear": [73, 100], "function": [73, 96, 100], "paramet": [73, 74, 96], "connect": 74, "choic": [74, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 96, 97], "definit": [74, 77, 79, 80], "altern": [74, 96], "avail": [74, 96], "estim": [74, 77, 79, 80, 96], "result": 74, "set": 74, "fit": 74, "report": [74, 77, 79, 96], "ancillari": 74, "comput": 74, "200": 76, "exampvil": [76, 77, 78, 79, 80, 82], "simul": [76, 82], "taz": 76, "shapefil": 76, "employ": 76, "skim": [76, 97], "household": 76, "person": 76, "tour": 76, "201": 77, "mode": [77, 78, 84, 85, 86, 87, 89, 90, 91], "preprocess": [77, 79, 80], "save": [77, 79], "202": 78, "203": 79, "destin": [79, 80], "visual": [79, 80], "204": 80, "without": 80, "semi": 80, "aggreg": 80, "exampl": [83, 88, 93], "1": [84, 87], "mtc": [84, 85, 86, 87, 88], "mnl": [84, 85, 87, 89, 90], "17": 85, "expand": 85, "22": 86, "motor": 86, "non": 86, "nest": [86, 91, 96], "constrain": 87, "101": 89, "swissmetro": [89, 90, 91, 93], "102": 90, "weight": 90, "109": 91, "logit": 91, "document": 95, "user": [95, 98], "guid": [95, 98], "prepar": 96, "structur": 96, "discret": 97, "fundament": [97, 98], "format": 97, "idco": 97, "idca": 97, "spars": 97, "v": 97, "dens": 97, "convers": 97, "practic": 97, "categor": 97, "One": 97, "hot": 97, "xarrai": 97, "work": 97, "get": 98, "start": [98, 99], "instal": 99, "quick": 99}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Dataset": [[0, "dataset"]], "Constructors": [[0, "constructors"]], "Attributes": [[0, "attributes"], [1, "attributes"], [74, "attributes"]], "Methods": [[0, "methods"], [1, "methods"], [74, "methods"], [75, "methods"]], "DataTree": [[1, "datatree"]], "larch.DataTree": [[2, "larch-datatree"]], "larch.DataTree.ALTID": [[3, "larch-datatree-altid"]], "larch.DataTree.CASEID": [[4, "larch-datatree-caseid"]], "larch.DataTree.add_dataset": [[5, "larch-datatree-add-dataset"]], "larch.DataTree.add_relationship": [[6, "larch-datatree-add-relationship"]], "larch.DataTree.digitize_relationships": [[7, "larch-datatree-digitize-relationships"]], "larch.DataTree.n_alts": [[8, "larch-datatree-n-alts"]], "larch.DataTree.n_cases": [[9, "larch-datatree-n-cases"]], "larch.DataTree.query_cases": [[10, "larch-datatree-query-cases"]], "larch.DataTree.relationships_are_digitized": [[11, "larch-datatree-relationships-are-digitized"]], "larch.DataTree.replace_datasets": [[12, "larch-datatree-replace-datasets"]], "larch.DataTree.root_node_name": [[13, "larch-datatree-root-node-name"]], "larch.DataTree.setup_flow": [[14, "larch-datatree-setup-flow"]], "larch.DataTree.subspaces": [[15, "larch-datatree-subspaces"]], "larch.Dataset": [[16, "larch-dataset"]], "larch.Dataset.attrs": [[17, "larch-dataset-attrs"]], "larch.Dataset.chunks": [[18, "larch-dataset-chunks"]], "larch.Dataset.chunksizes": [[19, "larch-dataset-chunksizes"]], "larch.Dataset.construct": [[20, "larch-dataset-construct"]], "larch.Dataset.construct.from_idca": [[21, "larch-dataset-construct-from-idca"]], "larch.Dataset.construct.from_idce": [[22, "larch-dataset-construct-from-idce"]], "larch.Dataset.construct.from_idco": [[23, "larch-dataset-construct-from-idco"]], "larch.Dataset.coords": [[24, "larch-dataset-coords"]], "larch.Dataset.data_vars": [[25, "larch-dataset-data-vars"]], "larch.Dataset.dims": [[26, "larch-dataset-dims"]], "larch.Dataset.encoding": [[27, "larch-dataset-encoding"]], "larch.Dataset.indexes": [[28, "larch-dataset-indexes"]], "larch.Dataset.nbytes": [[29, "larch-dataset-nbytes"]], "larch.Dataset.set_dtypes": [[30, "larch-dataset-set-dtypes"]], "larch.Dataset.sizes": [[31, "larch-dataset-sizes"]], "larch.Model": [[32, "larch-model"]], "larch.Model.availability_ca_var": [[33, "larch-model-availability-ca-var"]], "larch.Model.availability_co_vars": [[34, "larch-model-availability-co-vars"]], "larch.Model.bhhh": [[35, "larch-model-bhhh"]], "larch.Model.calculate_parameter_covariance": [[36, "larch-model-calculate-parameter-covariance"]], "larch.Model.choice_ca_var": [[37, "larch-model-choice-ca-var"]], "larch.Model.choice_co_code": [[38, "larch-model-choice-co-code"]], "larch.Model.choice_co_vars": [[39, "larch-model-choice-co-vars"]], "larch.Model.d_loglike": [[40, "larch-model-d-loglike"]], "larch.Model.d_loglike_casewise": [[41, "larch-model-d-loglike-casewise"]], "larch.Model.dataset": [[42, "larch-model-dataset"]], "larch.Model.datatree": [[43, "larch-model-datatree"]], "larch.Model.estimation_statistics": [[44, "larch-model-estimation-statistics"]], "larch.Model.lock_value": [[45, "larch-model-lock-value"]], "larch.Model.loglike": [[46, "larch-model-loglike"]], "larch.Model.loglike_casewise": [[47, "larch-model-loglike-casewise"]], "larch.Model.loglike_null": [[48, "larch-model-loglike-null"]], "larch.Model.logsums": [[49, "larch-model-logsums"]], "larch.Model.maximize_loglike": [[50, "larch-model-maximize-loglike"]], "larch.Model.most_recent_estimation_result": [[51, "larch-model-most-recent-estimation-result"]], "larch.Model.n_cases": [[52, "larch-model-n-cases"]], "larch.Model.parameter_summary": [[53, "larch-model-parameter-summary"]], "larch.Model.pf": [[54, "larch-model-pf"]], "larch.Model.possible_overspecification": [[55, "larch-model-possible-overspecification"]], "larch.Model.probability": [[56, "larch-model-probability"]], "larch.Model.quantity": [[57, "larch-model-quantity"]], "larch.Model.quantity_ca": [[58, "larch-model-quantity-ca"]], "larch.Model.remove_unused_parameters": [[59, "larch-model-remove-unused-parameters"]], "larch.Model.set_cap": [[60, "larch-model-set-cap"]], "larch.Model.set_values": [[61, "larch-model-set-values"]], "larch.Model.total_weight": [[62, "larch-model-total-weight"]], "larch.Model.utility": [[63, "larch-model-utility"]], "larch.Model.utility_ca": [[64, "larch-model-utility-ca"]], "larch.Model.utility_co": [[65, "larch-model-utility-co"]], "larch.NestingTree": [[66, "larch-nestingtree"]], "larch.NestingTree.add_edge": [[67, "larch-nestingtree-add-edge"]], "larch.NestingTree.add_node": [[68, "larch-nestingtree-add-node"]], "larch.NestingTree.new_node": [[69, "larch-nestingtree-new-node"]], "larch.NestingTree.remove_edge": [[70, "larch-nestingtree-remove-edge"]], "larch.NestingTree.remove_node": [[71, "larch-nestingtree-remove-node"]], "API": [[72, "api"]], "Data": [[72, null], [73, "data"]], "Models": [[72, null]], "Linear Functions": [[73, "linear-functions"], [100, "linear-functions"]], "Parameters": [[73, "parameters"], [74, "parameters"]], "Model": [[74, "model"]], "Data Connection": [[74, "data-connection"]], "Choice Definition": [[74, "choice-definition"]], "Alternative Availability": [[74, "alternative-availability"]], "Utility Definition": [[74, "utility-definition"]], "Estimation Results": [[74, "estimation-results"]], "Setting Parameters": [[74, "setting-parameters"]], "Parameter Estimation": [[74, "parameter-estimation"], [96, "parameter-estimation"]], "Model Fitness": [[74, "model-fitness"]], "Reporting": [[74, "reporting"], [96, "reporting"]], "Ancillary Computation": [[74, "ancillary-computation"]], "NestingTree": [[75, "nestingtree"]], "200: Exampville Simulated Data": [[76, "exampville-simulated-data"]], "TAZ Shapefile": [[76, "taz-shapefile"]], "TAZ Employment Data": [[76, "taz-employment-data"]], "Skims": [[76, "skims"]], "Households": [[76, "households"]], "Persons": [[76, "persons"]], "Tours": [[76, "tours"]], "201: Exampville Mode Choice": [[77, "exampville-mode-choice"]], "Preprocessing": [[77, "preprocessing"], [79, "preprocessing"], [80, "preprocessing"]], "Model Definition": [[77, "model-definition"], [79, "model-definition"], [80, "model-definition"]], "Model Estimation": [[77, "model-estimation"], [79, "model-estimation"], [80, "model-estimation"]], "Save and Report Model": [[77, "save-and-report-model"], [79, "save-and-report-model"]], "202: Exampville Mode Choice Logsums": [[78, "exampville-mode-choice-logsums"]], "203: Exampville Destination Choice": [[79, "exampville-destination-choice"]], "Model Visualization": [[79, "model-visualization"], [80, "model-visualization"]], "204: Exampville Destination Choice without Logsums": [[80, "exampville-destination-choice-without-logsums"]], "Semi-Aggregate Data": [[80, "semi-aggregate-data"]], "Exampville Simulator": [[82, "exampville-simulator"]], "Examples": [[83, "examples"]], "1: MTC MNL Mode Choice": [[84, "mtc-mnl-mode-choice"]], "17: MTC Expanded MNL Mode Choice": [[85, "mtc-expanded-mnl-mode-choice"]], "22: MTC Motorized and Non-Motorized Nested Mode Choice": [[86, "mtc-motorized-and-non-motorized-nested-mode-choice"]], "1: MTC MNL Constrained Mode Choice": [[87, "mtc-mnl-constrained-mode-choice"]], "MTC Examples": [[88, "mtc-examples"]], "101: Swissmetro MNL Mode Choice": [[89, "swissmetro-mnl-mode-choice"]], "102: Swissmetro Weighted MNL Mode Choice": [[90, "swissmetro-weighted-mnl-mode-choice"]], "109: Swissmetro Nested Logit Mode Choice": [[91, "swissmetro-nested-logit-mode-choice"]], "Swissmetro Examples": [[93, "swissmetro-examples"]], "Larch Documentation": [[95, "larch-documentation"]], "User Guide": [[95, "user-guide"], [98, "user-guide"]], "Choice Models": [[96, "choice-models"]], "Alternatives": [[96, "alternatives"]], "Choices": [[96, "choices"]], "Availability": [[96, "availability"]], "Utility Functions": [[96, "utility-functions"]], "Data Preparation": [[96, "data-preparation"]], "Nesting Structures": [[96, "nesting-structures"]], "Data for Discrete Choice": [[97, "data-for-discrete-choice"]], "Fundamental Data Formats": [[97, "fundamental-data-formats"]], "idco Format": [[97, "idco"]], "idca Format": [[97, "idca"]], "sparse vs dense": [[97, "sparse-vs-dense"]], "Data Conversion": [[97, "data-conversion"]], "Practical Data Formating in Larch": [[97, "practical-data-formating-in-larch"]], "Data Encoding": [[97, "data-encoding"]], "Categorical Encoding": [[97, "categorical-encoding"]], "One Hot Encoding": [[97, "one-hot-encoding"]], "Encoding with xarray": [[97, "encoding-with-xarray"]], "Working with Skims": [[97, "working-with-skims"]], "Get started": [[98, null]], "Fundamentals": [[98, null]], "Installing Larch": [[99, "installing-larch"]], "Quick Start": [[99, "quick-start"]]}, "indexentries": {"datatree (class in larch)": [[2, "larch.DataTree"]], "__init__() (datatree method)": [[2, "larch.DataTree.__init__"]], "altid (datatree property)": [[3, "larch.DataTree.ALTID"]], "caseid (datatree property)": [[4, "larch.DataTree.CASEID"]], "add_dataset() (datatree method)": [[5, "larch.DataTree.add_dataset"]], "add_relationship() (datatree method)": [[6, "larch.DataTree.add_relationship"]], "digitize_relationships() (datatree method)": [[7, "larch.DataTree.digitize_relationships"]], "n_alts (datatree property)": [[8, "larch.DataTree.n_alts"]], "n_cases (datatree property)": [[9, "larch.DataTree.n_cases"]], "query_cases() (datatree method)": [[10, "larch.DataTree.query_cases"]], "relationships_are_digitized (datatree property)": [[11, "larch.DataTree.relationships_are_digitized"]], "replace_datasets() (datatree method)": [[12, "larch.DataTree.replace_datasets"]], "root_node_name (datatree property)": [[13, "larch.DataTree.root_node_name"]], "setup_flow() (datatree method)": [[14, "larch.DataTree.setup_flow"]], "subspaces (datatree property)": [[15, "larch.DataTree.subspaces"]], "dataset (class in larch)": [[16, "larch.Dataset"]], "__init__() (dataset method)": [[16, "larch.Dataset.__init__"]], "attrs (dataset property)": [[17, "larch.Dataset.attrs"]], "chunks (dataset property)": [[18, "larch.Dataset.chunks"]], "chunksizes (dataset property)": [[19, "larch.Dataset.chunksizes"]], "coords (dataset property)": [[24, "larch.Dataset.coords"]], "data_vars (dataset property)": [[25, "larch.Dataset.data_vars"]], "dims (dataset property)": [[26, "larch.Dataset.dims"]], "encoding (dataset property)": [[27, "larch.Dataset.encoding"]], "indexes (dataset property)": [[28, "larch.Dataset.indexes"]], "nbytes (dataset property)": [[29, "larch.Dataset.nbytes"]], "set_dtypes() (dataset method)": [[30, "larch.Dataset.set_dtypes"]], "sizes (dataset property)": [[31, "larch.Dataset.sizes"]], "model (class in larch)": [[32, "larch.Model"]], "__init__() (model method)": [[32, "larch.Model.__init__"]], "availability_ca_var (model property)": [[33, "larch.Model.availability_ca_var"]], "availability_co_vars (model property)": [[34, "larch.Model.availability_co_vars"]], "bhhh() (model method)": [[35, "larch.Model.bhhh"]], "calculate_parameter_covariance() (model method)": [[36, "larch.Model.calculate_parameter_covariance"]], "choice_ca_var (model property)": [[37, "larch.Model.choice_ca_var"]], "choice_co_code (model property)": [[38, "larch.Model.choice_co_code"]], "choice_co_vars (model property)": [[39, "larch.Model.choice_co_vars"]], "d_loglike() (model method)": [[40, "larch.Model.d_loglike"]], "d_loglike_casewise() (model method)": [[41, "larch.Model.d_loglike_casewise"]], "dataset (model property)": [[42, "larch.Model.dataset"]], "datatree (model property)": [[43, "larch.Model.datatree"]], "estimation_statistics() (model method)": [[44, "larch.Model.estimation_statistics"]], "lock_value() (model method)": [[45, "larch.Model.lock_value"]], "loglike() (model method)": [[46, "larch.Model.loglike"]], "loglike_casewise() (model method)": [[47, "larch.Model.loglike_casewise"]], "loglike_null() (model method)": [[48, "larch.Model.loglike_null"]], "logsums() (model method)": [[49, "larch.Model.logsums"]], "maximize_loglike() (model method)": [[50, "larch.Model.maximize_loglike"]], "most_recent_estimation_result (model property)": [[51, "larch.Model.most_recent_estimation_result"]], "n_cases (model property)": [[52, "larch.Model.n_cases"]], "parameter_summary() (model method)": [[53, "larch.Model.parameter_summary"]], "pf (model property)": [[54, "larch.Model.pf"]], "possible_overspecification (model property)": [[55, "larch.Model.possible_overspecification"]], "probability() (model method)": [[56, "larch.Model.probability"]], "quantity() (model method)": [[57, "larch.Model.quantity"]], "quantity_ca (model attribute)": [[58, "larch.Model.quantity_ca"]], "remove_unused_parameters() (model method)": [[59, "larch.Model.remove_unused_parameters"]], "set_cap() (model method)": [[60, "larch.Model.set_cap"]], "set_values() (model method)": [[61, "larch.Model.set_values"]], "total_weight() (model method)": [[62, "larch.Model.total_weight"]], "utility() (model method)": [[63, "larch.Model.utility"]], "utility_ca (model attribute)": [[64, "larch.Model.utility_ca"]], "utility_co (model attribute)": [[65, "larch.Model.utility_co"]], "nestingtree (class in larch)": [[66, "larch.NestingTree"]], "__init__() (nestingtree method)": [[66, "larch.NestingTree.__init__"]], "add_edge() (nestingtree method)": [[67, "larch.NestingTree.add_edge"]], "add_node() (nestingtree method)": [[68, "larch.NestingTree.add_node"]], "new_node() (nestingtree method)": [[69, "larch.NestingTree.new_node"]], "remove_edge() (nestingtree method)": [[70, "larch.NestingTree.remove_edge"]], "remove_node() (nestingtree method)": [[71, "larch.NestingTree.remove_node"]], "dataref (class in larch.model.linear)": [[73, "larch.model.linear.DataRef"]], "parameterref (class in larch.model.linear)": [[73, "larch.model.linear.ParameterRef"]], "unicoderef (class in larch.model.linear)": [[73, "larch.model.linear.UnicodeRef"]], "string() (parameterref method)": [[73, "larch.model.linear.ParameterRef.string"]], "valid() (parameterref method)": [[73, "larch.model.linear.ParameterRef.valid"]], "value() (parameterref method)": [[73, "larch.model.linear.ParameterRef.value"]]}})