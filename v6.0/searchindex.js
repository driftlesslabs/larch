Search.setIndex({"docnames": ["api/dataset", "api/datatree", "api/generated/larch.DataTree", "api/generated/larch.DataTree.ALTID", "api/generated/larch.DataTree.CASEID", "api/generated/larch.DataTree.add_dataset", "api/generated/larch.DataTree.add_relationship", "api/generated/larch.DataTree.digitize_relationships", "api/generated/larch.DataTree.n_alts", "api/generated/larch.DataTree.n_cases", "api/generated/larch.DataTree.query_cases", "api/generated/larch.DataTree.relationships_are_digitized", "api/generated/larch.DataTree.replace_datasets", "api/generated/larch.DataTree.root_node_name", "api/generated/larch.DataTree.setup_flow", "api/generated/larch.DataTree.subspaces", "api/generated/larch.Dataset", "api/generated/larch.Dataset.attrs", "api/generated/larch.Dataset.chunks", "api/generated/larch.Dataset.chunksizes", "api/generated/larch.Dataset.construct", "api/generated/larch.Dataset.construct.from_idca", "api/generated/larch.Dataset.construct.from_idce", "api/generated/larch.Dataset.construct.from_idco", "api/generated/larch.Dataset.coords", "api/generated/larch.Dataset.data_vars", "api/generated/larch.Dataset.dims", "api/generated/larch.Dataset.encoding", "api/generated/larch.Dataset.indexes", "api/generated/larch.Dataset.nbytes", "api/generated/larch.Dataset.set_dtypes", "api/generated/larch.Dataset.sizes", "api/generated/larch.Model", "api/generated/larch.Model.availability_ca_var", "api/generated/larch.Model.availability_co_vars", "api/generated/larch.Model.bhhh", "api/generated/larch.Model.calculate_parameter_covariance", "api/generated/larch.Model.choice_ca_var", "api/generated/larch.Model.choice_co_code", "api/generated/larch.Model.choice_co_vars", "api/generated/larch.Model.d_loglike", "api/generated/larch.Model.d_loglike_casewise", "api/generated/larch.Model.dataset", "api/generated/larch.Model.datatree", "api/generated/larch.Model.estimation_statistics", "api/generated/larch.Model.lock_value", "api/generated/larch.Model.loglike", "api/generated/larch.Model.loglike_casewise", "api/generated/larch.Model.loglike_null", "api/generated/larch.Model.logsums", "api/generated/larch.Model.maximize_loglike", "api/generated/larch.Model.most_recent_estimation_result", "api/generated/larch.Model.n_cases", "api/generated/larch.Model.parameter_summary", "api/generated/larch.Model.pf", "api/generated/larch.Model.possible_overspecification", "api/generated/larch.Model.probability", "api/generated/larch.Model.quantity", "api/generated/larch.Model.quantity_ca", "api/generated/larch.Model.remove_unused_parameters", "api/generated/larch.Model.set_cap", "api/generated/larch.Model.set_values", "api/generated/larch.Model.total_weight", "api/generated/larch.Model.utility", "api/generated/larch.Model.utility_ca", "api/generated/larch.Model.utility_co", "api/generated/larch.NestingTree", "api/generated/larch.NestingTree.add_edge", "api/generated/larch.NestingTree.add_node", "api/generated/larch.NestingTree.new_node", "api/generated/larch.NestingTree.remove_edge", "api/generated/larch.NestingTree.remove_node", "api/index", "api/linear", "api/model", "api/nesting", "examples/exampville/200_exampville", "examples/exampville/201_exville_mode_choice", "examples/exampville/202_exville_mc_logsums", "examples/exampville/203_exville_dest", "examples/exampville/204_exville_dest_only", "examples/exampville/251_bySpec", "examples/exampville/index", "examples/index", "examples/mtc/001_mnl", "examples/mtc/010_auto_per_hh", "examples/mtc/017_mnl", "examples/mtc/022_nl", "examples/mtc/030_mnl_constrain", "examples/mtc/index", "examples/swissmetro/101_swissmetro_mnl", "examples/swissmetro/102-swissmetro-weighted", "examples/swissmetro/109-swissmetro-nl", "examples/swissmetro/151-swissmetro-panel-latent-class", "examples/swissmetro/index", "examples/xlogit-artificial/xlogit-test", "index", "user-guide/choice-models", "user-guide/data-fundamentals", "user-guide/index", "user-guide/installation", "user-guide/linear-funcs"], "filenames": ["api/dataset.rst", "api/datatree.rst", "api/generated/larch.DataTree.rst", "api/generated/larch.DataTree.ALTID.rst", "api/generated/larch.DataTree.CASEID.rst", "api/generated/larch.DataTree.add_dataset.rst", "api/generated/larch.DataTree.add_relationship.rst", "api/generated/larch.DataTree.digitize_relationships.rst", "api/generated/larch.DataTree.n_alts.rst", "api/generated/larch.DataTree.n_cases.rst", "api/generated/larch.DataTree.query_cases.rst", "api/generated/larch.DataTree.relationships_are_digitized.rst", "api/generated/larch.DataTree.replace_datasets.rst", "api/generated/larch.DataTree.root_node_name.rst", "api/generated/larch.DataTree.setup_flow.rst", "api/generated/larch.DataTree.subspaces.rst", "api/generated/larch.Dataset.rst", "api/generated/larch.Dataset.attrs.rst", "api/generated/larch.Dataset.chunks.rst", "api/generated/larch.Dataset.chunksizes.rst", "api/generated/larch.Dataset.construct.rst", "api/generated/larch.Dataset.construct.from_idca.rst", "api/generated/larch.Dataset.construct.from_idce.rst", "api/generated/larch.Dataset.construct.from_idco.rst", "api/generated/larch.Dataset.coords.rst", "api/generated/larch.Dataset.data_vars.rst", "api/generated/larch.Dataset.dims.rst", "api/generated/larch.Dataset.encoding.rst", "api/generated/larch.Dataset.indexes.rst", "api/generated/larch.Dataset.nbytes.rst", "api/generated/larch.Dataset.set_dtypes.rst", "api/generated/larch.Dataset.sizes.rst", "api/generated/larch.Model.rst", "api/generated/larch.Model.availability_ca_var.rst", "api/generated/larch.Model.availability_co_vars.rst", "api/generated/larch.Model.bhhh.rst", "api/generated/larch.Model.calculate_parameter_covariance.rst", "api/generated/larch.Model.choice_ca_var.rst", "api/generated/larch.Model.choice_co_code.rst", "api/generated/larch.Model.choice_co_vars.rst", "api/generated/larch.Model.d_loglike.rst", "api/generated/larch.Model.d_loglike_casewise.rst", "api/generated/larch.Model.dataset.rst", "api/generated/larch.Model.datatree.rst", "api/generated/larch.Model.estimation_statistics.rst", "api/generated/larch.Model.lock_value.rst", "api/generated/larch.Model.loglike.rst", "api/generated/larch.Model.loglike_casewise.rst", "api/generated/larch.Model.loglike_null.rst", "api/generated/larch.Model.logsums.rst", "api/generated/larch.Model.maximize_loglike.rst", "api/generated/larch.Model.most_recent_estimation_result.rst", "api/generated/larch.Model.n_cases.rst", "api/generated/larch.Model.parameter_summary.rst", "api/generated/larch.Model.pf.rst", "api/generated/larch.Model.possible_overspecification.rst", "api/generated/larch.Model.probability.rst", "api/generated/larch.Model.quantity.rst", "api/generated/larch.Model.quantity_ca.rst", "api/generated/larch.Model.remove_unused_parameters.rst", "api/generated/larch.Model.set_cap.rst", "api/generated/larch.Model.set_values.rst", "api/generated/larch.Model.total_weight.rst", "api/generated/larch.Model.utility.rst", "api/generated/larch.Model.utility_ca.rst", "api/generated/larch.Model.utility_co.rst", "api/generated/larch.NestingTree.rst", "api/generated/larch.NestingTree.add_edge.rst", "api/generated/larch.NestingTree.add_node.rst", "api/generated/larch.NestingTree.new_node.rst", "api/generated/larch.NestingTree.remove_edge.rst", "api/generated/larch.NestingTree.remove_node.rst", "api/index.md", "api/linear.rst", "api/model.rst", "api/nesting.rst", "examples/exampville/200_exampville.ipynb", "examples/exampville/201_exville_mode_choice.ipynb", "examples/exampville/202_exville_mc_logsums.ipynb", "examples/exampville/203_exville_dest.ipynb", "examples/exampville/204_exville_dest_only.ipynb", "examples/exampville/251_bySpec.ipynb", "examples/exampville/index.md", "examples/index.md", "examples/mtc/001_mnl.ipynb", "examples/mtc/010_auto_per_hh.ipynb", "examples/mtc/017_mnl.ipynb", "examples/mtc/022_nl.ipynb", "examples/mtc/030_mnl_constrain.ipynb", "examples/mtc/index.md", "examples/swissmetro/101_swissmetro_mnl.ipynb", "examples/swissmetro/102-swissmetro-weighted.ipynb", "examples/swissmetro/109-swissmetro-nl.ipynb", "examples/swissmetro/151-swissmetro-panel-latent-class.ipynb", "examples/swissmetro/index.md", "examples/xlogit-artificial/xlogit-test.ipynb", "index.md", "user-guide/choice-models.ipynb", "user-guide/data-fundamentals.ipynb", "user-guide/index.md", "user-guide/installation.md", "user-guide/linear-funcs.ipynb"], "titles": ["Dataset", "DataTree", "larch.DataTree", "larch.DataTree.ALTID", "larch.DataTree.CASEID", "larch.DataTree.add_dataset", "larch.DataTree.add_relationship", "larch.DataTree.digitize_relationships", "larch.DataTree.n_alts", "larch.DataTree.n_cases", "larch.DataTree.query_cases", "larch.DataTree.relationships_are_digitized", "larch.DataTree.replace_datasets", "larch.DataTree.root_node_name", "larch.DataTree.setup_flow", "larch.DataTree.subspaces", "larch.Dataset", "larch.Dataset.attrs", "larch.Dataset.chunks", "larch.Dataset.chunksizes", "larch.Dataset.construct", "larch.Dataset.construct.from_idca", "larch.Dataset.construct.from_idce", "larch.Dataset.construct.from_idco", "larch.Dataset.coords", "larch.Dataset.data_vars", "larch.Dataset.dims", "larch.Dataset.encoding", "larch.Dataset.indexes", "larch.Dataset.nbytes", "larch.Dataset.set_dtypes", "larch.Dataset.sizes", "larch.Model", "larch.Model.availability_ca_var", "larch.Model.availability_co_vars", "larch.Model.bhhh", "larch.Model.calculate_parameter_covariance", "larch.Model.choice_ca_var", "larch.Model.choice_co_code", "larch.Model.choice_co_vars", "larch.Model.d_loglike", "larch.Model.d_loglike_casewise", "larch.Model.dataset", "larch.Model.datatree", "larch.Model.estimation_statistics", "larch.Model.lock_value", "larch.Model.loglike", "larch.Model.loglike_casewise", "larch.Model.loglike_null", "larch.Model.logsums", "larch.Model.maximize_loglike", "larch.Model.most_recent_estimation_result", "larch.Model.n_cases", "larch.Model.parameter_summary", "larch.Model.pf", "larch.Model.possible_overspecification", "larch.Model.probability", "larch.Model.quantity", "larch.Model.quantity_ca", "larch.Model.remove_unused_parameters", "larch.Model.set_cap", "larch.Model.set_values", "larch.Model.total_weight", "larch.Model.utility", "larch.Model.utility_ca", "larch.Model.utility_co", "larch.NestingTree", "larch.NestingTree.add_edge", "larch.NestingTree.add_node", "larch.NestingTree.new_node", "larch.NestingTree.remove_edge", "larch.NestingTree.remove_node", "API", "Linear Functions", "Model", "NestingTree", "200: Exampville Simulated Data", "201: Exampville Mode Choice", "202: Exampville Mode Choice Logsums", "203: Exampville Destination Choice", "204: Exampville Destination Choice without Logsums", "&lt;no title&gt;", "Exampville Simulator", "Examples", "1: MTC MNL Mode Choice", "10: Number of Automobiles", "17: MTC Expanded MNL Mode Choice", "22: MTC Motorized and Non-Motorized Nested Mode Choice", "1: MTC MNL Constrained Mode Choice", "MTC Examples", "101: Swissmetro MNL Mode Choice", "102: Swissmetro Weighted MNL Mode Choice", "109: Swissmetro Nested Logit Mode Choice", "&lt;no title&gt;", "Swissmetro Examples", "&lt;no title&gt;", "Larch Documentation", "Choice Models", "Data for Discrete Choice", "User Guide", "Installing Larch", "Linear Functions"], "terms": {"idca": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 84, 85, 97, 99], "idco": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 79, 80, 84, 85, 90, 97, 99], "class": [2, 6, 16, 32, 58, 66, 73, 76, 84, 85, 93, 98, 101], "graph": [2, 66, 67, 68, 71, 77, 87, 92, 97], "none": [2, 7, 10, 12, 16, 18, 19, 35, 36, 40, 41, 45, 46, 47, 49, 56, 57, 61, 63, 66, 68, 69, 76, 78, 87, 90, 91, 92, 95, 97, 98], "root_node_nam": [2, 72, 81], "extra_func": 2, "extra_var": 2, "cache_dir": [2, 14], "relationship": [2, 5, 6, 7, 11, 12, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 97], "force_digit": 2, "fals": [2, 5, 7, 14, 30, 35, 36, 40, 50, 56, 67, 73, 77, 87, 90, 91, 92, 95, 98], "kwarg": [2, 6, 10, 12, 14, 32, 35, 40, 41, 45, 46, 47, 50, 61, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 97, 98], "sourc": [2, 5, 6, 7, 10, 12, 14, 16, 32, 40, 43, 46, 47, 48, 50, 63, 66, 67, 68, 69, 70, 71, 73, 78, 80, 90], "base": [2, 7, 12, 16, 28, 29, 32, 66, 73, 77, 79, 80, 93, 98, 100, 101], "__init__": [2, 16, 32, 66, 72, 77, 78, 79, 80, 81], "method": [2, 16, 32, 50, 58, 66, 69, 72, 73, 77, 78, 79, 80, 84, 85, 87, 88, 90, 91, 92, 93, 97, 98, 101], "attribut": [2, 16, 17, 27, 32, 66, 67, 68, 72, 77, 84, 85, 86, 90, 91, 93, 97, 98, 101], "properti": [3, 4, 8, 9, 11, 13, 15, 17, 18, 19, 24, 25, 26, 27, 28, 29, 31, 33, 34, 37, 38, 39, 42, 43, 51, 52, 54, 55, 97], "The": [3, 4, 6, 8, 9, 10, 13, 14, 16, 45, 46, 50, 52, 58, 60, 63, 64, 65, 66, 67, 68, 69, 73, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100], "_altid_": [3, 8, 84, 85, 90, 91, 97, 98], "dimens": [3, 4, 6, 8, 9, 10, 14, 16, 18, 19, 26, 31, 63, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98], "root": [3, 4, 5, 8, 9, 10, 13, 14, 67, 68, 69], "dataset": [3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 72, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98], "type": [3, 4, 8, 9, 11, 13, 15, 26, 30, 33, 34, 37, 38, 39, 42, 43, 52, 58, 64, 65, 73, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98], "str": [3, 4, 5, 6, 10, 12, 13, 14, 15, 33, 34, 37, 38, 39, 45, 50, 69, 73, 86], "_caseid_": [4, 9, 84, 85, 90, 91, 97, 98], "name": [5, 14, 15, 16, 18, 19, 26, 30, 31, 34, 39, 45, 53, 61, 66, 68, 69, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 100, 101], "as_root": 5, "add": [5, 6, 14, 66, 67, 68, 69, 78, 91, 93, 97, 101], "new": [5, 6, 10, 12, 14, 16, 26, 31, 46, 61, 63, 68, 69, 76, 77, 78, 79, 80, 81, 85, 86, 90, 92, 95, 97, 98, 99], "node": [5, 12, 13, 15, 67, 68, 69, 70, 71, 77, 97], "thi": [5, 6, 10, 12, 13, 14, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 44, 46, 50, 53, 58, 60, 61, 63, 64, 65, 68, 69, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "paramet": [5, 6, 7, 10, 12, 14, 16, 30, 44, 45, 46, 48, 50, 53, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 77, 79, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 98, 99, 101], "panda": [5, 10, 16, 28, 53, 63, 73, 76, 77, 78, 79, 80, 81, 84, 88, 90, 91, 92, 93, 98], "datafram": [5, 30, 53, 63, 76, 77, 78, 88, 90, 97, 98], "Will": 5, "coerc": [5, 28], "object": [5, 14, 15, 16, 24, 25, 26, 28, 66, 67, 68, 73, 76, 79, 80, 81, 84, 85, 88, 90, 91, 92, 97, 98], "i": [5, 6, 10, 12, 13, 14, 16, 18, 19, 26, 31, 34, 44, 45, 46, 48, 50, 58, 61, 63, 66, 67, 68, 69, 70, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101], "alreadi": [5, 6, 44, 67, 69, 77, 98, 100], "format": [5, 12, 58, 63, 64, 73, 76, 77, 79, 80, 84, 85, 90, 91, 92, 97, 99], "us": [5, 6, 10, 14, 16, 28, 45, 46, 48, 50, 58, 59, 61, 63, 67, 68, 69, 73, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101], "copi": [5, 7, 51, 77, 79, 80, 87, 88, 90, 91, 92, 95, 98], "process": [5, 46, 61, 63, 73, 76, 77, 78, 97, 98, 101], "possibl": [5, 50, 78, 97, 98], "tupl": [5, 14, 16, 18, 19, 86], "also": [5, 44, 66, 76, 77, 78, 79, 80, 86, 90, 97, 98, 100, 101], "bool": [5, 7, 11, 12, 14, 30, 44, 48, 50, 59, 67, 73, 98], "default": [5, 7, 10, 12, 14, 16, 30, 44, 46, 48, 50, 59, 60, 63, 66, 67, 86, 97, 98, 100], "set": [5, 14, 16, 26, 30, 45, 46, 48, 60, 61, 63, 68, 69, 72, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 98, 100, 101], "tree": [5, 6, 10, 12, 13, 69, 79, 80, 87, 92, 97], "displac": 5, "ani": [5, 10, 16, 17, 27, 29, 50, 61, 65, 66, 68, 73, 86, 88, 93, 97, 98, 101], "exist": [5, 16, 60, 61, 69, 71, 78, 79, 92, 97, 100, 101], "arg": [6, 10, 14, 32, 50, 66, 70, 73, 76, 77, 78, 79, 80, 81, 97], "point": [6, 14, 76, 98], "from": [6, 7, 10, 14, 16, 18, 19, 26, 31, 46, 51, 58, 63, 64, 65, 68, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101], "variabl": [6, 10, 14, 16, 24, 25, 26, 29, 30, 31, 33, 34, 37, 38, 39, 58, 64, 77, 78, 84, 85, 86, 90, 91, 92, 97, 98], "one": [6, 12, 16, 58, 60, 61, 64, 73, 78, 80, 86, 88, 89, 90, 93, 97, 98, 100, 101], "anoth": [6, 16, 76, 86, 97, 98], "both": [6, 58, 61, 64, 97, 98, 100, 101], "parent": [6, 13, 68, 69], "child": [6, 68, 77, 97], "should": [6, 58, 64, 67, 73, 85, 97], "have": [6, 16, 58, 64, 65, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90, 97, 98, 100, 101], "been": [6, 7, 44, 78, 98], "ad": [6, 16, 26, 31, 50, 67, 69, 77, 97, 98], "all": [6, 7, 11, 14, 16, 29, 46, 48, 58, 63, 69, 71, 73, 77, 79, 80, 84, 85, 86, 90, 91, 92, 93, 97, 98, 100], "argument": [6, 16, 50, 61, 66, 67, 68, 69, 78, 98], "ar": [6, 10, 11, 12, 14, 16, 33, 50, 58, 59, 60, 61, 65, 66, 67, 68, 76, 77, 79, 80, 82, 85, 86, 87, 88, 89, 92, 94, 96, 97, 98, 100], "pass": [6, 16, 50, 90, 101], "through": [6, 50, 61, 77, 78, 79, 80, 97], "contructor": 6, "unless": [6, 12, 60, 69, 97], "onli": [6, 7, 13, 14, 44, 61, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98, 101], "singl": [6, 68, 73, 84, 85, 90, 97, 98, 101], "provid": [6, 14, 31, 76, 77, 78, 79, 80, 82, 89, 94, 97, 98, 101], "which": [6, 13, 14, 16, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 90, 95, 97, 98, 101], "case": [6, 16, 44, 46, 52, 62, 63, 78, 79, 80, 90, 97, 98, 101], "from_str": 6, "constructor": [6, 72, 90], "inplac": [7, 30], "redigit": [7, 12], "true": [7, 12, 14, 44, 48, 59, 67, 73, 77, 78, 79, 80, 84, 85, 86, 87, 88, 91, 92, 95, 97, 98], "convert": [7, 30, 66, 97, 98], "label": [7, 12, 16, 28, 67, 86, 88, 97, 98], "posit": [7, 11, 12, 58, 88, 97, 98], "re": [7, 12, 77, 86, 87, 98, 100], "comput": [7, 14, 42, 44, 46, 48, 58, 62, 63, 64, 65, 72, 73, 77, 78, 86, 87, 90, 97, 98, 100, 101], "even": [7, 77, 84, 85, 98, 100], "had": [7, 10, 16], "previous": [7, 12, 79], "digit": [7, 11, 12, 14], "return": [7, 10, 12, 14, 26, 30, 44, 46, 48, 50, 53, 62, 63, 69, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98], "place": [7, 12, 86, 101], "size": [8, 9, 12, 26, 29, 46, 63, 72, 80, 82, 84, 85, 86, 87, 88, 90, 91, 92], "int": [8, 9, 14, 18, 19, 26, 29, 31, 34, 39, 46, 50, 52, 63, 67, 68, 69, 70, 71, 86], "queri": 10, "filter": [10, 78, 86], "appli": [10, 84, 85, 86, 98], "python": [10, 14, 46, 63, 66, 68, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 100, 101], "express": [10, 14, 33, 34, 39, 58, 64, 77, 81, 86, 88, 90, 97, 98], "evalu": [10, 34, 39, 46, 63, 90, 97], "against": [10, 86, 97], "data": [10, 12, 13, 14, 16, 18, 19, 25, 29, 42, 43, 48, 52, 58, 62, 64, 65, 66, 67, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 99, 101], "eval": [10, 90, 93], "function": [10, 14, 16, 34, 39, 50, 58, 63, 64, 65, 72, 77, 79, 80, 84, 85, 86, 90, 96, 98, 99], "can": [10, 14, 16, 18, 19, 58, 64, 66, 67, 69, 73, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 94, 97, 98, 100, 101], "contain": [10, 44, 53, 63, 77, 97, 98, 101], "valid": [10, 12, 72, 73], "cannot": [10, 18, 19, 26, 28, 31, 100, 101], "statement": 10, "parser": 10, "construct": [10, 72, 77, 78, 79, 80, 81, 90, 91, 92, 93, 97, 98], "syntax": 10, "pars": 10, "code": [10, 14, 34, 39, 65, 67, 68, 69, 77, 84, 85, 90, 97, 98], "slightli": [10, 79, 80], "differ": [10, 26, 79, 80, 86, 87, 97], "than": [10, 79, 80, 86, 89, 98, 100], "standard": [10, 53, 77, 85, 97, 98], "altern": [10, 12, 16, 33, 34, 38, 39, 45, 63, 65, 67, 69, 72, 77, 79, 80, 84, 85, 86, 90, 93, 98, 99, 101], "you": [10, 14, 73, 76, 77, 78, 79, 80, 81, 85, 89, 90, 94, 95, 97, 98, 100, 101], "an": [10, 12, 14, 16, 28, 30, 31, 33, 34, 37, 38, 39, 44, 48, 66, 67, 68, 70, 71, 73, 78, 80, 86, 87, 90, 91, 92, 95, 97, 98, 100, 101], "retain": 10, "strict": [10, 86], "semant": 10, "engin": [10, 78, 87, 98], "numexpr": 10, "support": [10, 97], "tri": 10, "fall": [10, 89], "back": 10, "perform": [10, 14, 87], "oper": [10, 95, 98], "d": [10, 16, 78, 84, 85, 86, 90, 91, 92, 95, 98], "top": [10, 14, 100], "level": [10, 14, 63, 77, 78, 97, 98], "A": [10, 12, 14, 16, 34, 39, 43, 50, 51, 61, 68, 69, 71, 73, 97, 100], "same": [10, 14, 16, 18, 19, 86, 87, 89, 93, 94, 97, 98, 100, 101], "content": 10, "except": [10, 14, 16, 44, 48, 58, 61, 64, 68, 71, 73, 76, 98, 101], "each": [10, 16, 34, 39, 44, 48, 65, 68, 73, 77, 78, 79, 80, 84, 85, 86, 89, 90, 93, 97, 98], "arrai": [10, 14, 16, 18, 19, 29, 42, 46, 61, 63, 66, 77, 79, 80, 84, 85, 87, 90, 91, 92, 95, 97, 98], "index": [10, 16, 63, 72, 76, 78, 79, 80, 81, 84, 85, 90, 91, 92, 97, 98], "result": [10, 12, 14, 50, 51, 63, 72, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98], "caseid": [10, 72, 78, 79, 80, 84, 85, 90, 91, 92, 97, 98], "whether": [11, 30, 34, 39, 50, 80, 98], "other": [12, 14, 16, 50, 68, 69, 73, 77, 79, 80, 85, 87, 93, 97, 98, 101], "replac": [12, 46, 61, 63, 78, 97, 98], "more": [12, 14, 26, 60, 61, 73, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 96, 98, 100, 101], "map": [12, 14, 15, 16, 18, 19, 24, 26, 28, 30, 31, 34, 39, 65, 68, 76, 77, 84, 85, 86, 87, 88, 90, 91, 92, 97], "dictionari": [12, 17, 25, 27, 46, 50, 61, 63, 77, 85, 90, 97], "rais": [12, 14, 28, 30, 48, 61, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 98, 101], "error": [12, 14, 28, 30, 53, 77, 84, 87, 90, 91, 92, 95, 97], "when": [12, 14, 16, 26, 30, 31, 76, 77, 78, 79, 80, 82, 86, 88, 90, 97, 98], "downstream": 12, "referenc": 12, "ident": 12, "If": [12, 14, 29, 44, 46, 61, 63, 66, 68, 69, 70, 73, 77, 78, 95, 97, 98, 100], "deactiv": 12, "incompat": 12, "flow": [12, 14], "reli": [12, 97], "give": [12, 14, 16, 34, 37, 38, 39, 63, 73, 77, 79, 84, 85, 87, 97], "erron": 12, "crash": [12, 14], "segfault": [12, 14], "automat": [12, 16, 67, 69, 79, 88, 97, 98, 101], "were": [12, 59, 79, 98], "complet": [12, 58, 64, 76, 77, 78, 79, 80, 81, 84, 85, 87, 90, 91, 92, 95, 97, 100], "ever": 13, "up": [14, 68, 80, 84, 85, 88, 90, 91, 92, 95, 98, 100], "analysi": [14, 76, 84, 85], "structur": [14, 73, 77, 78, 79, 80, 84, 85, 87, 92, 93, 98, 99, 101], "definition_spec": 14, "dict": [14, 16, 17, 27, 34, 39, 46, 50, 51, 61, 63, 76, 77, 78, 79, 80, 81, 84, 85, 97, 98], "defin": [14, 69, 76, 77, 78, 79, 80, 81, 85, 86, 90, 93, 95, 97, 98, 101], "creat": [14, 16, 44, 53, 66, 68, 69, 73, 77, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 100, 101], "path": [14, 78, 79], "like": [14, 16, 46, 61, 63, 79, 80, 84, 85, 86, 90, 91, 92, 95, 97, 98, 100, 101], "option": [14, 16, 46, 50, 61, 63, 66, 67, 68, 69, 79, 80, 86, 97, 101], "locat": [14, 85], "write": [14, 77, 78, 88, 90, 98, 101], "out": [14, 16, 79, 80, 86, 97, 98, 100, 101], "gener": [14, 44, 53, 59, 68, 77, 78, 79, 80, 81, 82, 85, 96, 97, 98], "numba": [14, 77, 79, 80, 85, 86, 87, 88], "uniqu": [14, 65, 69, 77, 79, 80], "temporari": 14, "directori": 14, "cach": [14, 44, 48, 78, 98], "file": [14, 16, 76, 77, 78, 79, 80, 81, 95, 97, 98, 101], "given": [14, 16, 44, 46, 58, 61, 63, 65, 68, 69, 73, 80, 88, 90, 91, 92, 97, 98, 101], "sure": [14, 84, 85], "avoid": 14, "conflict": 14, "": [14, 18, 19, 38, 58, 77, 78, 79, 80, 84, 85, 97, 98], "dtype": [14, 29, 30, 76, 81, 84, 85, 87, 90, 91, 92, 95, 97, 98], "float32": [14, 84, 85], "numpi": [14, 66, 73, 76, 77, 78, 79, 80, 81, 87, 90, 91, 92, 93, 95, 98], "output": [14, 44, 50, 77, 90, 91, 92], "boundscheck": 14, "enabl": 14, "bound": [14, 50, 60, 84, 85, 97], "check": [14, 73, 77, 90, 91, 92], "indic": [14, 33, 34, 37, 39, 48, 63, 65, 68, 77, 97, 98], "access": [14, 15, 76, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98], "indexerror": 14, "do": [14, 30, 77, 78, 81, 89, 90, 91, 92, 94, 97, 98, 100], "faster": 14, "produc": 14, "garbag": 14, "problem": 14, "so": [14, 16, 58, 77, 79, 80, 89, 90, 92, 94, 97, 98, 100, 101], "try": [14, 73, 76, 100], "turn": 14, "debug": 14, "get": [14, 73, 97, 98], "unexplain": 14, "error_model": 14, "control": [14, 79, 80, 98], "divid": 14, "zero": [14, 48, 78, 86, 98], "behavior": [14, 88, 97, 98], "caus": 14, "cpython": 14, "inf": [14, 97], "nan": [14, 81, 87, 90, 91, 92, 95, 97, 98], "nopython": 14, "compil": [14, 76, 77, 78, 79, 80, 81, 85, 87, 90, 95, 97], "mode": [14, 76, 79, 80, 81, 82, 83, 85, 89, 93, 94, 95, 98], "littl": [14, 76, 77, 78, 79, 80, 81, 84, 85, 88, 90, 95, 97], "off": [14, 95, 97], "product": [14, 73, 100], "speed": [14, 95], "benefit": [14, 31], "sharrow": [14, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97], "lost": 14, "fastmath": 14, "fast": [14, 73, 87, 98], "float": [14, 45, 46, 48, 62, 73, 98], "transform": [14, 58, 90, 98, 101], "improv": [14, 84, 85], "tini": [14, 97], "distort": 14, "see": [14, 16, 26, 50, 77, 79, 80, 98, 100], "doc": 14, "detail": [14, 58, 89, 97, 98], "parallel": 14, "disabl": 14, "certain": [14, 97], "readm": 14, "string": [14, 72, 73, 79], "inject": 14, "comment": 14, "flow_librari": 14, "memori": [14, 16, 76, 77, 98], "precompil": 14, "repeatedli": 14, "definit": [14, 72, 82, 90, 97], "extra_hash_data": 14, "hashabl": [14, 16, 18, 19, 26, 31, 68], "addit": [14, 97, 101], "hash": 14, "prevent": [14, 97], "multipl": [14, 16, 45, 68, 97], "similar": [14, 16, 77, 79, 80, 98, 100, 101], "write_hash_audit": 14, "audit": 14, "log": [14, 44, 46, 48, 50, 59, 63, 73, 77, 81, 84, 87, 90, 91, 92, 95, 101], "purpos": [14, 77, 90, 91, 92, 93], "hashing_level": 14, "1": [14, 16, 45, 46, 48, 63, 65, 66, 73, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 97, 98, 101], "increas": 14, "2": [14, 16, 65, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98], "inform": [14, 89, 96, 98], "about": [14, 59, 96, 98], "encod": [14, 72, 99], "requir": [14, 76, 77, 87, 97, 98, 100], "pre": [14, 77, 78, 97, 98, 101], "dim_exclud": 14, "collect": [14, 68, 69, 79, 80, 98], "exclud": [14, 77, 90, 91], "direct": 15, "data_var": [16, 72], "datavar": 16, "coord": [16, 72, 78, 80, 97], "attr": [16, 66, 72, 97], "datawithcoord": 16, "datasetaggreg": 16, "datasetarithmet": 16, "dataarrai": [16, 24, 25, 26, 31, 63, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98], "multi": [16, 63, 97], "dimension": [16, 98], "databas": 16, "resembl": 16, "represent": [16, 97], "netcdf": 16, "consist": [16, 26, 31, 84, 85, 86, 87, 88, 90, 91, 92, 97], "coordin": [16, 24, 80, 84, 85, 90, 91, 97, 98], "togeth": [16, 77, 86, 92, 97, 101], "form": [16, 45, 58, 73, 79, 80, 90, 101], "self": [16, 76, 86, 87, 88, 89, 92, 97, 101], "describ": [16, 90, 97, 98], "implement": [16, 55, 58, 82, 98], "interfac": [16, 100], "kei": [16, 34, 39, 61, 65, 66, 68, 78, 88, 97, 98], "valu": [16, 37, 39, 44, 45, 46, 48, 53, 58, 60, 61, 63, 65, 66, 68, 72, 73, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "By": [16, 97, 98], "equal": [16, 46, 61, 63, 86], "e": [16, 26, 44, 45, 66, 73, 95, 98], "those": [16, 79, 80, 90, 91, 92, 97, 98, 101], "readili": [16, 98], "built": [16, 79, 80, 84, 85, 88, 90, 91, 92], "To": [16, 46, 63, 77, 78, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98, 100, 101], "load": [16, 42, 48, 62, 77, 78, 79, 80, 86, 97, 98], "open_dataset": [16, 78, 98], "dim": [16, 31, 72, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97], "must": [16, 46, 61, 63, 65, 69, 78, 88, 90, 98, 100, 101], "length": [16, 18, 19, 26, 31, 46, 61, 63, 84, 85, 86, 87, 88, 90, 91, 92], "appear": [16, 86, 98, 101], "follow": [16, 97, 100], "notat": [16, 101], "accept": [16, 101], "var": [16, 98], "scalar": [16, 61], "move": [16, 98], "below": [16, 77, 97, 98, 100], "item": [16, 50, 84, 85, 86, 87, 88, 90, 91, 92, 97], "save": [16, 78, 82, 97, 98], "These": [16, 50, 69, 97], "associ": [16, 34, 39, 61, 69], "mean": 16, "thei": [16, 61, 67, 69, 79, 86, 87, 88], "constant": [16, 44, 85, 93, 95], "fix": [16, 45, 77, 79, 84, 85, 86, 88, 97, 101], "independ": 16, "quantiti": [16, 58, 72], "unlik": [16, 97], "vari": [16, 50, 84, 85], "measur": 16, "depend": [16, 78, 97, 100], "belong": 16, "arbitrari": [16, 66], "implicitli": [16, 101], "last": [16, 46, 63, 76, 77, 78, 79, 80, 81, 93, 95, 98, 101], "impli": [16, 67, 68, 69, 88], "either": [16, 98, 101], "In": [16, 76, 77, 78, 79, 80, 81, 84, 85, 87, 88, 90, 91, 92, 93, 95, 97, 98, 101], "latter": 16, "assum": [16, 68, 97], "along": [16, 80], "mai": [16, 48, 66, 76, 77, 78, 79, 80, 81, 85, 86, 90, 95, 96, 97, 100], "order": [16, 84, 85, 86, 87, 88, 90, 91, 92, 95, 98], "explicitli": [16, 61, 68, 77, 86, 88, 90, 98, 101], "g": [16, 66, 73, 98], "custom": 16, "xarrai": [16, 18, 19, 78, 84, 85, 90, 91, 97, 99], "bypass": 16, "creation": [16, 77, 78, 98], "includ": [16, 29, 44, 46, 50, 61, 63, 76, 78, 79, 80, 86, 89, 90, 93, 97, 98, 101], "global": [16, 17, 27, 60, 97], "exampl": [16, 48, 58, 64, 65, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 101], "np": [16, 77, 78, 79, 80, 92, 93, 95, 97, 98], "random": [16, 95], "seed": [16, 95], "0": [16, 46, 60, 63, 66, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 101], "temperatur": 16, "15": [16, 76, 77, 78, 79, 80, 81, 84, 85, 87, 90, 91, 92, 93, 95, 97, 98], "8": [16, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 98], "randn": 16, "3": [16, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 101], "precipit": 16, "10": [16, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 101], "rand": 16, "lon": 16, "99": [16, 84, 85, 86, 88], "83": [16, 84, 85, 91, 98], "32": [16, 77, 80, 84, 85, 91, 98], "79": [16, 84, 85], "23": [16, 88, 98], "lat": 16, "42": [16, 78, 79, 84, 85, 88, 90, 91, 95], "25": [16, 60, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 93, 95, 97, 98], "21": [16, 77, 80, 84, 85, 87, 88, 90, 91, 98], "63": [16, 84, 85, 86, 90, 91, 95], "59": [16, 84, 85, 86, 98], "time": [16, 50, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 93, 95, 97, 98], "pd": [16, 76, 77, 78, 79, 80, 81, 84, 88, 90, 91, 92, 93, 97, 98], "date_rang": 16, "2014": 16, "09": [16, 92], "06": [16, 84, 85, 88, 95, 98], "period": 16, "reference_tim": 16, "timestamp": 16, "05": [16, 84, 85, 87, 88], "initi": [16, 61, 66, 69, 78], "xr": [16, 78, 98], "x": [16, 35, 40, 41, 46, 47, 49, 56, 57, 58, 63, 64, 65, 76, 77, 78, 79, 80, 84, 85, 86, 88, 90, 91, 92, 93, 95, 97, 98, 101], "y": [16, 76, 95, 98], "descript": [16, 84, 85], "weather": 16, "relat": [16, 85, 97, 98], "float64": [16, 76, 84, 85, 97, 98], "datetime64": 16, "n": [16, 71, 77, 78, 79, 80, 81, 95], "07": [16, 84, 86, 92, 98], "08": [16, 76, 88, 95], "without": [16, 73, 82, 83, 93, 96, 98, 101], "29": [16, 79, 80, 84, 85, 86, 87, 98], "11": [16, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 92, 93, 98], "18": [16, 76, 77, 79, 80, 84, 85, 88, 92, 95, 98], "22": [16, 76, 77, 79, 83, 84, 85, 86, 89, 90, 91, 98], "28": [16, 79, 80, 84, 85, 87, 90, 91, 98], "16": [16, 76, 77, 78, 79, 81, 84, 85, 87, 88, 90, 91, 93, 95, 98], "26": [16, 78, 79, 80, 84, 85, 86, 88, 98], "5": [16, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98], "68": [16, 84, 85, 86, 87], "9": [16, 76, 77, 78, 79, 80, 81, 84, 85, 88, 90, 91, 93, 95, 97, 98], "256": 16, "7104": 16, "7": [16, 76, 77, 78, 79, 80, 81, 84, 85, 86, 90, 91, 93, 95, 98], "992": 16, "4": [16, 66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98], "615": 16, "805": 16, "find": [16, 77, 86, 90, 91, 92, 97, 100], "where": [16, 73, 78, 80, 93, 98], "coldest": 16, "wa": [16, 39, 78, 98], "what": [16, 30, 77, 98], "isel": 16, "argmin": 16, "182": 16, "326": 16, "block": [18, 19, 86], "underli": [18, 19, 98], "dask": [18, 19, 98], "modifi": [18, 19, 26, 31, 97], "directli": [18, 19, 26, 31, 76, 79, 97], "call": [18, 19, 76, 77, 78, 79, 80, 81, 85, 86, 93, 95, 98, 100, 101], "chunksiz": [18, 72], "maintain": 18, "backward": [18, 46, 63], "compat": 18, "unify_chunk": [18, 19], "chunk": [19, 72, 78, 98], "datasetcoordin": 24, "correspond": [24, 25, 66], "datavari": 25, "frozen": [26, 31], "updat": [26, 31, 46, 61, 63, 68, 96, 97, 100], "note": [26, 48, 58, 61, 85, 86, 98, 100], "chang": [26, 45, 61, 68, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98], "futur": [26, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98], "ha": [28, 44, 60, 65, 73, 79, 80, 95, 97, 98], "xindex": 28, "total": [29, 62, 76, 84, 85, 98], "byte": 29, "consum": 29, "backend": [29, 78, 98], "doe": [29, 84, 85, 90, 91, 92, 97, 98, 101], "estim": [29, 44, 45, 50, 53, 72, 73, 78, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 95, 98, 99, 101], "infer": 30, "on_error": 30, "warn": [30, 61, 76, 77, 78, 79, 80, 81, 85, 90, 95, 97, 98], "ignor": [30, 61, 87, 90, 91, 92, 95], "convers": [30, 99], "trigger": 30, "alia": [31, 86], "numbamodel": [32, 76, 77, 78, 79, 80, 81, 85, 90, 95, 97], "optimizemixin": 32, "panelmixin": 32, "avail": [33, 34, 48, 72, 76, 77, 82, 84, 85, 86, 90, 91, 92, 98, 99, 100], "repres": [34, 39, 93, 97, 98, 101], "number": [34, 39, 50, 52, 69, 76, 79, 80, 83, 84, 86, 89, 97, 98], "some": [34, 39, 68, 69, 73, 77, 78, 79, 80, 84, 85, 86, 90, 91, 95, 97, 98, 101], "start_cas": [35, 40, 41, 46, 47, 49, 56, 57, 63], "stop_cas": [35, 40, 41, 46, 47, 49, 56, 57, 63], "step_cas": [35, 40, 41, 46, 47, 49, 56, 57, 63], "return_datafram": [35, 56, 57], "pval": [36, 81, 95], "robust": [36, 92], "choic": [37, 38, 72, 73, 76, 82, 83, 85, 89, 93, 94, 95, 96, 99, 101], "id": [38, 80, 90, 91, 93, 95, 97, 98], "chosen": [39, 84, 85, 90, 97, 98], "return_seri": 40, "compute_loglike_nul": 44, "xhtml": 44, "summari": [44, 53, 77, 79, 84, 85, 95], "statist": [44, 50, 53, 77, 79, 85, 97], "small": [44, 53, 82, 87, 98], "tabl": [44, 53, 76, 77, 78, 79, 80, 81, 97, 98], "likelihood": [44, 45, 46, 48, 50, 51, 63, 77, 84, 85, 87, 90, 91, 92, 95, 97], "converg": [44, 84, 85, 86, 97], "null": [44, 48, 53, 61, 76, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97], "known": [44, 53, 98], "No": [44, 76, 77, 78, 79, 80, 81, 93, 95, 98], "addition": 44, "refer": [44, 58, 64, 73, 86, 97, 98, 101], "everyth": [44, 100], "rho": 44, "squar": [44, 84, 85, 97], "respect": [44, 61, 86], "report": [44, 72, 82, 84, 85, 86, 88, 90, 91, 92, 99], "aggreg": [44, 82], "well": [44, 77, 84, 85, 90, 97, 98], "per": [44, 77, 85, 86, 87, 88], "its": [44, 78, 97, 100], "xmle": 44, "elem": 44, "holdfast": 45, "dure": [45, 76], "maxim": [45, 50, 51], "algorithm": [45, 84, 85, 97], "numer": [45, 60, 84, 85, 98], "befor": [46, 61, 63, 77, 79, 98], "vector": [46, 61, 63, 97], "frame": [46, 48, 61, 63, 76, 97], "current": [46, 48, 61, 63, 84, 87, 90, 91, 92, 95, 97, 101], "first": [46, 63, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 91, 92, 95, 97, 98, 100], "start": [46, 63, 79, 80, 97, 98], "One": [46, 63, 99, 101], "past": [46, 63, 100], "usual": [46, 63, 86, 97, 98], "slice": [46, 63, 95], "iter": [46, 50, 63, 78, 85, 86, 87, 88, 97], "neg": [46, 60, 63], "count": [46, 63, 76], "end": [46, 63, 68], "step": [46, 63], "calcul": [46, 63, 79, 90, 91, 92, 97], "use_cach": 48, "nullvalu": [48, 61, 85, 86, 87, 88, 97], "column": [48, 61, 63, 76, 78, 80, 81, 98], "logsum": [48, 72, 77, 79, 81, 82, 83, 92, 97], "nest": [48, 67, 69, 77, 83, 89, 94, 99], "logit": [48, 77, 83, 90, 91, 94, 97], "arr": 49, "optim": [50, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98], "scipi": [50, 66, 78, 98], "most": [50, 51, 73, 76, 77, 78, 79, 80, 81, 93, 95, 98, 100, 101], "bhhh": [50, 72, 77, 85, 87], "slsqp": [50, 88, 90, 91, 93, 97], "constraint": [50, 53, 88, 97], "finit": [50, 97], "otherwis": [50, 61, 67, 73, 97, 98], "quiet": 50, "suppress": 50, "dashboard": [50, 84, 87, 90, 91, 92, 95], "minim": 50, "maxit": [50, 86], "maximum": [50, 60, 85, 86, 87, 88, 97], "just": [50, 79, 93, 97, 98, 100], "dictx": 50, "final": [50, 85, 93, 97], "elaps": 50, "exact": [50, 101], "recent": [51, 76, 77, 78, 79, 80, 81, 93, 95, 98, 101], "attach": [52, 77, 78, 90, 91, 92, 95, 97], "tabular": [53, 98], "categori": [53, 76, 80, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98], "applic": [53, 65, 79, 90, 97, 101], "t": [53, 77, 79, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 100], "bind": 53, "Not": 55, "yet": [55, 97, 100], "include_nest": 56, "portion": [58, 64, 65, 97], "util": [58, 64, 65, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 93, 98, 99, 101], "actual": [58, 64, 80, 90, 97, 98, 101], "unusu": [58, 64], "design": [58, 64, 73, 97], "everi": [58, 64, 79, 80, 87, 97, 98], "least": [58, 64, 88, 97, 98], "compon": [58, 64, 65, 93, 97], "linear": [58, 65, 72, 96, 97, 98, 99], "exponenti": 58, "raw": [58, 78, 79, 80, 93, 97, 98, 101], "thu": [58, 84, 85, 86, 98, 101], "p": [58, 64, 65, 77, 78, 79, 80, 84, 85, 86, 88, 90, 91, 92, 93, 97, 100, 101], "param1": [58, 64], "data1": [58, 64], "param2": [58, 64], "data2": [58, 64], "exp": 58, "ensur": [58, 79, 86, 88], "outcom": 58, "alwai": [58, 77, 88, 95, 97], "long": [58, 87, 95, 98, 101], "term": [58, 73, 97, 101], "linearfunct": [58, 64, 84, 85, 101], "itself": [58, 73, 90, 97, 98], "intrins": 58, "awar": 58, "utility_funct": [58, 77, 79], "render": 58, "mathemat": 58, "correct": [58, 85], "import": [58, 64, 65, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 100, 101], "m": [58, 64, 65, 73, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 100], "print": [58, 64, 65, 85], "param3": [58, 64], "data3": [58, 64], "dataco4": [58, 64], "verbos": [59, 95], "remov": [59, 68, 70, 71, 96, 97, 98, 101], "messag": [59, 91, 92], "how": 59, "mani": [59, 90, 101], "drop": [59, 78, 80, 88, 98], "cap": [60, 84, 85, 97], "limit": [60, 80, 97], "ceil": 60, "minimum": [60, 85, 86, 87, 88, 97], "floor": 60, "entir": [60, 76], "outsid": [60, 97], "rang": [60, 79, 80], "init": [61, 95], "best": [61, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97], "initvalu": [61, 85, 86, 87, 88, 97], "valueerror": [61, 69, 78, 98], "keyword": [61, 66, 67, 68, 69, 78, 98], "found": [61, 85, 86, 97], "among": 61, "assign": [61, 66, 67, 77, 78, 80, 84, 85, 86, 90, 97, 98], "disallow": 61, "although": [61, 68, 98, 101], "recommend": [61, 100], "weight": [62, 83, 94], "return_format": [63, 97], "seri": [63, 88, 97], "two": [63, 77, 79, 97, 98, 100, 101], "element": [65, 67, 69, 77, 97, 98, 101], "alter": [65, 98], "parama1": 65, "dataa": 65, "parama2": 65, "paramasc2": 65, "dictoflinearfunct": 65, "root_id": 66, "suggested_elemental_ord": 66, "digraph": [66, 68], "edg": [66, 67, 70], "incoming_graph_data": 66, "input": [66, 79, 95, 98], "empti": 66, "list": [66, 78, 98], "networkx": [66, 68], "packag": [66, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 100, 101], "instal": [66, 76, 87, 92, 96, 97, 99], "2d": 66, "spars": [66, 99], "pygraphviz": [66, 87, 92, 97], "pair": [66, 98], "nx": 66, "multigraph": 66, "multidigraph": 66, "etc": 66, "my": 66, "dai": [66, 89], "fridai": 66, "u": [67, 70, 77, 86, 87], "v": [67, 70, 84, 85, 86, 87, 88, 90, 91, 92, 99], "_clear_cach": 67, "between": [67, 70, 95, 98], "specifi": [67, 80, 86, 97, 98], "integ": [67, 68, 88, 97, 98], "upstream": 67, "downsteam": 67, "connect": [67, 68, 72, 77], "unconnect": 67, "children": [68, 69, 77, 87, 92, 97], "phi_paramet": 68, "allow": [68, 77, 86, 97, 98], "link": [68, 97], "later": [68, 69, 78, 101], "made": [68, 97], "stream": 68, "phi": 68, "network": [68, 76, 77], "gev": 68, "model": [68, 73, 76, 78, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101], "until": [69, 98], "human": 69, "readabl": 69, "networkxerror": 70, "reconnect": 71, "outedg": 71, "head": [71, 76, 77, 78, 79, 80, 81, 90], "inedg": 71, "attempt": [71, 95], "non": [71, 73, 76, 77, 83, 89, 93, 96, 101], "larch": [72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 99, 101], "from_idca": [72, 97, 98], "from_idc": [72, 98], "from_idco": [72, 77, 78, 80, 81, 90, 91, 92, 93], "nbyte": 72, "set_dtyp": 72, "datatre": [72, 77, 78, 79, 80, 81, 90, 93, 96, 97], "subspac": 72, "relationships_are_digit": 72, "n_case": [72, 81, 91, 92], "n_alt": 72, "altid": [72, 80, 84, 85, 86, 97, 98], "add_dataset": 72, "add_relationship": 72, "digitize_relationship": [72, 80], "query_cas": [72, 77, 78, 91, 92, 93], "replace_dataset": [72, 78], "setup_flow": 72, "choice_ca_var": [72, 80, 84, 85, 86, 95, 97], "choice_co_var": [72, 97], "choice_co_cod": [72, 77, 79, 80, 81, 90, 91, 92, 93, 97], "availability_ca_var": [72, 84, 85, 86, 97], "availability_co_var": [72, 77, 90, 91, 92, 93, 97], "utility_ca": [72, 79, 80, 84, 85, 86, 88, 95, 97], "utility_co": [72, 77, 84, 85, 86, 90, 91, 92, 93, 97], "quantity_ca": [72, 79, 80], "pf": [72, 81, 97], "most_recent_estimation_result": 72, "possible_overspecif": 72, "set_valu": 72, "lock_valu": [72, 93], "set_cap": [72, 77, 84, 85, 86, 90, 91, 92, 93, 97], "remove_unused_paramet": [72, 88], "maximize_loglik": [72, 77, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97], "calculate_parameter_covari": [72, 77, 87, 90, 91, 92, 93, 97], "fit": [72, 77, 95], "loglike_nul": 72, "parameter_summari": [72, 77, 79, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97], "estimation_statist": [72, 77, 79, 84, 85, 97], "ancillari": 72, "d_loglik": [72, 79], "d_loglike_casewis": 72, "loglik": [72, 79, 91, 92], "loglike_casewis": 72, "probabl": [72, 78, 79, 80, 101], "total_weight": [72, 91, 92], "unicoderef": [72, 73], "parameterref": [72, 73], "dataref": [72, 73], "nestingtre": [72, 87, 92, 96, 97], "new_nod": [72, 77, 87, 92, 97], "add_nod": 72, "remove_nod": [72, 97], "add_edg": 72, "remove_edg": 72, "At": 73, "heart": 73, "common": [73, 79, 80, 85, 98], "discret": [73, 76, 84, 85, 89, 90, 96, 97, 99, 101], "written": 73, "specif": [73, 76, 77, 78, 79, 80, 81, 82, 85, 90, 93, 95, 97, 101], "mind": 73, "It": [73, 84, 85, 88, 98, 101], "integr": [73, 84, 85, 97], "facilit": [73, 101], "want": [73, 77, 78, 79, 80, 85, 86, 88, 92, 97, 98, 100], "biogem": [73, 90, 91, 92, 94], "flexibl": 73, "almost": [73, 76, 78, 85], "basic": [73, 97, 98], "summat": 73, "sequenc": 73, "could": [73, 88, 98], "simpl": [73, 80, 84, 87, 88, 90, 93, 97, 98, 101], "travel_cost": 73, "piec": 73, "salient": 73, "featur": [73, 76, 77, 78, 79, 80, 81, 85, 90, 95, 96, 97, 100], "know": 73, "instanti": 73, "instead": [73, 79, 97, 98, 101], "need": [73, 77, 78, 84, 85, 90, 91, 92, 97, 98, 100], "extract": [73, 77, 78, 79, 80, 81], "would": [73, 78, 79, 80, 86, 90, 91, 100], "geopanda": 76, "gpd": 76, "lx": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 100], "__version__": [76, 85, 86, 87], "opt": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "hostedtoolcach": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "13": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "x64": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "lib": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "python3": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "site": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "py": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 101], "userwarn": [76, 77, 78, 79, 80, 81, 85, 87, 90, 92, 95, 97], "v6": [76, 77, 78, 79, 80, 81, 85, 90, 95, 96, 97, 100], "experiment": [76, 77, 78, 79, 80, 81, 85, 90, 95, 97], "system": [76, 77, 78, 79, 80, 81, 85, 90, 93, 95, 97, 98], "binari": [76, 77, 78, 79, 80, 81, 84, 85, 90, 95, 97, 98], "your": [76, 77, 78, 79, 80, 81, 85, 90, 95, 96, 97, 100], "machin": [76, 77, 78, 79, 80, 81, 85, 90, 95, 97], "take": [76, 77, 78, 79, 80, 81, 85, 90, 95, 97], "while": [76, 77, 78, 79, 80, 81, 85, 90, 95, 97, 98, 100, 101], "pleas": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 100], "patient": [76, 77, 78, 79, 80, 81, 85, 90, 95, 97], "good": [76, 77, 78, 79, 80, 81, 85, 87, 90, 91, 95, 97], "everyon": [76, 77, 78, 79, 80, 81, 85, 90, 95, 97], "6": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 98, 100], "19": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 92, 95, 98], "welcom": [76, 77, 78, 79, 80], "town": [76, 77, 78, 79, 80], "here": [76, 77, 78, 79, 80, 86, 89, 94], "part": [76, 77, 78, 79, 80, 85, 98], "internet": [76, 77, 78, 79, 80], "illustr": 76, "kind": [76, 77, 79, 80, 82, 98], "transport": [76, 77, 78, 79, 80, 82, 89, 97, 98], "planner": [76, 77, 78, 79, 80, 82], "might": [76, 77, 78, 79, 80, 82, 86, 90, 98], "build": [76, 77, 78, 79, 80, 82, 84, 85, 97], "travel": [76, 77, 78, 79, 80, 82, 85, 89, 93], "fiction": 76, "example_fil": [76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 98], "zone": [76, 78, 80], "store": [76, 78, 97, 98], "zip": [76, 97], "open": [76, 98, 100], "read": [76, 78, 84, 85, 86, 88, 97, 98], "unzip": 76, "disk": [76, 78, 98], "protocol": 76, "front": 76, "filenam": [76, 79], "taz_shap": 76, "read_fil": 76, "exampville_taz": 76, "plot": 76, "edgecolor": 76, "k": [76, 95, 97], "modulenotfounderror": [76, 77, 78, 79, 80, 81, 93, 95, 98], "traceback": [76, 77, 78, 79, 80, 81, 93, 95, 98, 101], "673": 76, "plot_datafram": 76, "df": [76, 95], "cmap": 76, "color": 76, "ax": 76, "cax": 76, "categor": [76, 99], "legend": 76, "scheme": [76, 86], "vmin": 76, "vmax": 76, "markers": 76, "figsiz": 76, "legend_kwd": 76, "classification_kwd": 76, "missing_kwd": 76, "aspect": [76, 97], "style_kwd": 76, "672": 76, "matplotlib": 76, "pyplot": 76, "plt": 76, "674": 76, "importerror": 76, "modul": [76, 77, 78, 79, 80, 81, 87, 92, 93, 95, 97, 98], "handl": 76, "abov": [76, 77, 79, 80, 90, 97, 98], "occur": 76, "cell": [76, 77, 78, 79, 80, 81, 93, 95, 98, 100, 101], "line": [76, 77, 78, 79, 80, 81, 93, 95, 98, 101], "979": 76, "geoplotaccessor": 76, "__call__": 76, "977": 76, "pop": [76, 78, 98], "geo": 76, "978": 76, "980": 76, "_pandas_kind": 76, "981": 76, "982": 76, "plotaccessor": 76, "675": [76, 87], "676": 76, "677": 76, "conda": [76, 100], "c": 76, "forg": 76, "678": 76, "pip": [76, 100], "679": 76, "681": 76, "682": 76, "emp": [76, 77, 78, 79, 80, 81], "read_csv": [76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 97, 98], "exampville_employ": [76, 77, 78, 79, 80, 81], "csv": [76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 97, 98], "gz": [76, 77, 78, 79, 80, 81, 90, 91, 92, 93], "index_col": [76, 77, 78, 79, 80, 81, 98], "info": [76, 79, 80], "core": [76, 97, 98], "40": [76, 77, 78, 79, 80, 84, 85, 86, 90, 91, 92, 97, 98], "entri": 76, "nonretail_emp": [76, 79, 80], "int64": [76, 84, 85, 90, 91, 97, 98], "retail_emp": [76, 79, 80], "total_emp": 76, "usag": 76, "kb": 76, "118": [76, 86, 88], "340": 76, "458": 76, "91": [76, 84, 85, 87, 90, 91, 95], "197": 76, "199": 76, "277": 76, "285": 76, "44": [76, 84, 85, 87, 95, 98], "57": [76, 88], "matrix": [76, 97, 98], "omx": [76, 77, 78, 79, 80, 81, 98], "reader": 76, "emb": 76, "handi": 76, "tool": [76, 77, 78, 79, 80, 82, 98, 100], "_tb": [76, 77, 78, 79, 80, 81, 98], "12": [76, 77, 78, 79, 80, 81, 84, 85, 90, 91, 93, 98, 101], "text_manip": [76, 77, 78, 79, 80, 81, 98], "truncate_path_for_displai": [76, 77, 78, 79, 80, 81, 98], "exampville_skim": [76, 77, 78, 79, 80, 81, 98], "r": [76, 77, 78, 79, 80, 81, 84, 85, 97, 98], "nameerror": [76, 77, 78, 79, 80, 81, 93, 95, 98], "hh": [76, 77, 78, 79, 80, 81], "exampville_household": 76, "rangeindex": 76, "5000": [76, 95], "4999": 76, "incom": [76, 77, 79, 80, 81, 84, 85, 86, 88, 90, 91, 97, 98, 101], "n_vehicl": 76, "hhsize": [76, 84, 85], "geometri": 76, "hometaz": [76, 77, 78, 79, 80, 81], "hhid": [76, 77, 78, 79, 80, 81, 84, 85], "n_trip": 76, "n_trips_hbw": 76, "n_trips_hbo": 76, "n_trips_nhb": 76, "n_worker": 76, "507": 76, "361": [76, 86], "35": [76, 79, 80, 84, 85, 97, 98], "33": [76, 77, 79, 80, 84, 85, 87, 92, 98], "34": [76, 79, 80, 84, 85, 95, 98], "6026": 76, "50000": [76, 79, 80, 97, 98], "272": 76, "30": [76, 79, 85, 88, 90, 91, 95, 97, 98], "77": [76, 84, 85, 88, 92, 98], "30538": 76, "50001": 76, "424": 76, "72": [76, 86, 87, 90, 91, 98], "55": [76, 84, 85, 98], "24131": 76, "50002": 76, "464": 76, "48": [76, 84, 85, 87, 90, 91], "61": [76, 84, 85, 86, 98], "34838": 76, "50003": 76, "328": [76, 87], "95": [76, 84, 85, 98], "129": [76, 95], "36": [76, 77, 79, 80, 85, 86, 90, 91, 98], "29337": 76, "50004": 76, "pp": [76, 77, 78, 79, 80, 81, 85, 86, 87], "exampville_person": 76, "12349": 76, "12348": 76, "personid": [76, 77, 78, 79, 80, 81], "hhidx": 76, "ag": [76, 77, 84, 85, 90, 91], "work": [76, 77, 78, 79, 89, 96, 97, 99, 100], "n_work_tour": 76, "n_other_tour": 76, "n_tour": 76, "mb": 76, "60000": 76, "60001": 76, "27": [76, 79, 80, 84, 85, 92, 95, 98], "60002": 76, "31": [76, 77, 79, 80, 84, 85, 86, 97, 98], "60003": 76, "81": [76, 84, 85, 86, 91, 92], "60004": 76, "39": [76, 77, 78, 79, 84, 85, 87, 92, 98], "exampville_tour": 76, "20739": 76, "20738": 76, "tourid": [76, 77, 78, 79, 80, 81], "dtaz": [76, 77, 78, 79, 80, 81], "tourmod": [76, 77, 81], "tourpurp": [76, 77, 78], "n_stop": 76, "20": [76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 97, 98], "simul": [77, 78, 79, 80, 83, 96], "demonstr": [77, 78, 79, 80], "walk": [77, 78, 79, 80, 81, 84, 85, 97, 98], "notebook": [77, 78, 79, 80, 92, 97, 100], "we": [77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 100, 101], "tour": [77, 78, 79, 80, 81, 82], "begin": 77, "ll": [77, 78, 79, 80, 84, 85, 86, 87, 88, 90, 95, 97, 100], "skim": [77, 78, 79, 80, 81, 82, 99], "setup": [77, 101], "200": [77, 78, 79, 80, 81, 82, 83, 87], "47": [77, 78, 79, 80, 81, 84, 85, 87, 92, 98], "output_fil": [77, 78, 79, 80, 81], "45": [77, 78, 79, 80, 81, 84, 85, 95], "filenotfounderror": [77, 78, 79, 80, 81], "46": [77, 78, 79, 80, 81, 88, 90, 98], "els": [77, 78, 79, 80, 81], "_exec_example_n": [77, 78, 79, 80, 81], "14": [77, 78, 79, 80, 81, 84, 85, 91, 92, 95, 98], "def": [77, 78, 79, 80, 81], "ex": [77, 78, 79, 80, 81], "_200_exampvil": [77, 78, 79, 80, 81], "17": [77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 98], "taz": [77, 78, 79, 80, 81, 82], "real": 77, "survei": [77, 89, 90, 91], "household": [77, 78, 80, 82, 85, 86, 87, 89], "person": [77, 78, 79, 80, 81, 82], "composit": 77, "addicti": [77, 78, 79], "da": [77, 78, 81, 84, 85, 86], "sr": [77, 78, 81], "bike": [77, 78, 81, 84, 85], "transit": [77, 78, 81, 84, 85], "freez": [77, 78], "tour_dataset": [77, 78, 81], "set_index": [77, 78, 79, 80, 81, 97, 98], "alt": [77, 78, 79, 80, 81, 90, 91, 92, 95, 97, 98], "od_skim": [77, 78, 81], "from_omx": [77, 78, 79, 80, 81], "dt": [77, 78, 81], "od": [77, 78, 81], "otaz": [77, 78, 79, 80, 81], "trip": [77, 89, 98], "dt_work": 77, "And": [77, 84, 85], "readi": [77, 100], "our": [77, 78, 79, 80, 84, 85, 86, 88, 97, 98], "titl": [77, 79, 80, 84, 85, 88, 90, 91, 92, 93], "v1": [77, 79], "becaus": [77, 84, 85, 88, 97, 98], "serv": 77, "exclus": [77, 93, 97], "invehtim": [77, 81, 101], "auto_tim": [77, 81, 101], "cost": [77, 81, 85, 86, 88, 93, 97, 98, 101], "auto_cost": [77, 81, 98, 101], "dollar": 77, "mile": [77, 79, 80], "asc_sr": [77, 81], "half": [77, 98], "share": [77, 79, 80], "logincom": 77, "asc_walk": [77, 81, 84, 85, 86, 87, 88], "nonmotortim": [77, 81], "walk_tim": [77, 81], "asc_bik": [77, 81, 84, 85, 86, 87, 88], "bike_tim": [77, 81], "asc_transit": [77, 81, 85, 86, 87], "transit_ivtt": [77, 81], "outvehtim": [77, 81], "transit_ovtt": [77, 81], "transit_far": [77, 81], "lower": 77, "newli": 77, "poteni": 77, "higher": 77, "car": [77, 85, 90, 91, 92, 97, 98], "motor": [77, 83, 86, 89, 97], "mu": 77, "nonmotor": [77, 87], "let": [77, 78, 79, 80, 84, 85, 97], "visual": [77, 82, 92], "condit": [77, 79, 80], "criterion": 77, "60": [77, 84, 85, 90, 91], "Then": [77, 78, 79, 80, 84, 85], "prepar": [77, 90, 99], "though": 77, "load_data": 77, "assembl": [77, 93, 97], "contigu": [77, 98], "suitabl": 77, "effici": [77, 80, 98], "choice_avail_summari": [77, 84, 85], "satisfi": 77, "go": [77, 86, 87, 98], "ahead": 77, "compute_engin": [77, 79, 80, 85, 86, 87, 88], "mj": [77, 79, 80, 87], "jax": [77, 87, 90, 91, 92, 95], "after": [77, 97], "varianc": 77, "covari": [77, 97], "incud": 77, "review": [77, 79, 80, 97], "varieti": [77, 79, 80, 85, 97, 98], "resultj": [77, 79, 80, 87], "stderr": [77, 79, 80, 84, 85, 86, 87, 88, 95], "append": 77, "37": [77, 80, 84, 85, 98], "38": [77, 84, 85, 98], "exampville_mode_choic": [77, 78, 79], "html": [77, 78, 79], "overwrit": [77, 79], "metadata": [77, 79, 95], "dump": [77, 79], "exampville_mode_choice_fil": [78, 79], "201": [78, 79, 82, 83, 87], "load_model": [78, 79], "41": [78, 79, 84, 85, 87, 95], "o": [78, 79], "43": [78, 79, 84, 85, 86, 90, 91], "_201_exville_mode_choic": 78, "replic": 78, "merg": [78, 98], "characterist": [78, 87], "home": [78, 80, 89], "servic": [78, 95], "computation": [78, 97, 98], "expens": [78, 97], "better": [78, 97], "reload": 78, "them": [78, 84, 85, 86, 90, 91, 92, 96, 97, 98], "command": [78, 92, 98, 100, 101], "run": [78, 82, 85, 87, 95, 100], "instantan": 78, "dc": [78, 80, 85, 91, 92, 93, 97], "bundl": [78, 79, 80], "did": 78, "dataservic": [78, 90], "hold": [78, 97], "row": [78, 79, 80, 98], "destin": [78, 82, 83], "taz_id": [78, 79, 80], "howev": 78, "appropri": [78, 79, 80, 98], "simpli": [78, 86, 97, 98, 101], "over": [78, 85, 97, 98, 101], "root_dataset": 78, "full_lik": 78, "_getitem": 78, "loc": 78, "persist": 78, "next": [78, 84, 85], "to_zarr": [78, 98], "zarr": [78, 79, 98], "recov": 78, "from_zarr": [78, 79], "125": [78, 97, 98], "cl": 78, "123": [78, 86], "register_dataarray_classmethod": 78, "124": 78, "open_zarr": [78, 98], "126": [78, 95], "127": 78, "944": [78, 98], "group": [78, 84, 85, 86, 90, 91, 98], "synchron": [78, 98], "decode_cf": [78, 98], "mask_and_scal": [78, 98], "decode_tim": [78, 98], "concat_charact": [78, 98], "decode_coord": [78, 98], "drop_vari": [78, 98], "consolid": [78, 98], "overwrite_encoded_chunk": [78, 98], "chunk_stor": [78, 98], "storage_opt": [78, 98], "decode_timedelta": [78, 98], "use_cftim": [78, 98], "zarr_vers": [78, 98], "chunked_array_typ": [78, 98], "from_array_kwarg": [78, 98], "930": [78, 98], "typeerror": [78, 98], "931": [78, 98], "got": [78, 98], "unexpect": [78, 98], "join": [78, 80, 98], "932": [78, 98], "934": [78, 98], "backend_kwarg": [78, 98], "935": [78, 98], "936": [78, 98], "941": [78, 98], "942": [78, 98], "945": [78, 98], "filename_or_obj": [78, 98], "946": [78, 86, 98], "947": [78, 98], "948": [78, 98], "949": [78, 98], "950": [78, 98], "951": [78, 98], "952": [78, 98], "953": [78, 98], "954": [78, 98], "955": [78, 98], "956": [78, 98], "957": [78, 98], "958": [78, 84, 85, 86, 87, 88, 90, 91, 92, 98], "959": [78, 98], "960": [78, 98], "961": [78, 95, 98], "962": [78, 98], "api": [78, 96, 98], "558": [78, 98], "inline_arrai": [78, 98], "555": [78, 98], "556": [78, 98], "plugin": [78, 98], "get_backend": [78, 98], "560": [78, 98], "decod": [78, 98], "_resolve_decoders_kwarg": [78, 98], "561": [78, 98], "562": [78, 98], "open_backend_dataset_paramet": [78, 98], "open_dataset_paramet": [78, 98], "568": [78, 98], "569": [78, 98], "571": [78, 98], "205": [78, 98], "203": [78, 82, 83, 95, 98], "list_engin": [78, 98], "204": [78, 82, 83, 98], "206": [78, 98], "f": [78, 85, 86, 95, 97, 98, 100, 101], "unrecogn": [78, 98], "207": [78, 84, 87, 95, 98], "208": [78, 98], "209": [78, 98], "elif": [78, 98], "isinst": [78, 98], "issubclass": [78, 98], "backendentrypoint": [78, 98], "income_grp": [79, 80], "qcut": [79, 80], "For": [79, 80, 86, 87, 92, 97, 98, 101], "indentifi": 79, "rebuild": 79, "doesn": [79, 98], "typic": [79, 87, 97, 98], "user": [79, 97], "manual": [79, 86, 87, 89], "logsums_fil": 79, "202": [79, 82, 83], "_202_exville_mc_logsum": 79, "much": [79, 80, 88, 96, 97, 98], "regular": [79, 80, 86, 101], "observ": [79, 80, 90, 91, 97, 98], "leverag": [79, 80], "make": [79, 80, 84, 85, 100], "manag": [79, 80, 98], "simpler": [79, 80], "anc": 79, "ca": [79, 97], "employ": [79, 80, 82], "right": [79, 80, 98], "augment": [79, 80], "version": [79, 80, 85, 88, 97, 98, 100], "rename_axi": [79, 90, 91, 92, 98], "tour_id": 79, "now": [79, 80, 90], "empretail_highinc": [79, 80], "empnonretail_highinc": [79, 80], "empretail_lowinc": [79, 80], "empnonretail_lowinc": [79, 80], "quantity_scal": [79, 80], "theta": [79, 80], "distanc": [79, 80], "auto_dist": [79, 80, 98], "plock": [79, 80, 97], "benefici": [79, 80], "rel": [79, 80, 87, 93], "distribut": [79, 80], "across": [79, 80, 84, 85, 86], "factor": [79, 80, 91, 97], "histogram_on_idca_vari": [79, 80], "24": [79, 84, 85, 87, 91, 98], "histogram": [79, 80], "bin": [79, 80], "span": [79, 80], "subset": [79, 80], "pull": [79, 80, 86], "x_label": [79, 80], "filter_co": [79, 80], "10000": [79, 80, 93], "figur": 79, "shown": [79, 80, 97, 98], "insert": 79, "exampville_dest_choic": 79, "seper": [80, 97, 98], "second": 80, "co": [80, 84, 85, 90, 91, 92, 97], "v2": 80, "disaggreg": 80, "explanatori": 80, "determin": 80, "variou": [80, 90, 91, 92, 97, 101], "low": 80, "origin": [80, 90, 91, 98], "000": [80, 87, 97], "80": [80, 90], "situat": 80, "relev": [80, 90, 98], "tour_plu": 80, "low_incom": 80, "50_000": 80, "tour_agg": 80, "groupbi": [80, 98], "unstack": [80, 98], "fillna": [80, 98], "j": [80, 98], "reset_index": [80, 95], "agg_dataset": 80, "to_fram": 80, "agg_tre": 80, "mg": 80, "namespac": 81, "spec_cont": 81, "logincome_sr": 81, "logincome_walk": 81, "logincome_bik": 81, "logincome_transit": 81, "io": 81, "stringio": 81, "spec": 81, "set_altnam": 81, "alts_name_to_id": 81, "from_spec": 81, "should_preload_data": 81, "quickli": 82, "particularli": 82, "rich": 82, "enough": 82, "larg": [82, 97, 98], "technic": [82, 97, 98], "realist": 82, "shapefil": 82, "preprocess": 82, "semi": 82, "mtc": [83, 85, 96], "mnl": [83, 89, 94], "automobil": [83, 89], "expand": [83, 89], "constrain": [83, 89, 97], "swissmetro": [83, 93, 96], "101": [83, 93, 94], "102": [83, 86, 93, 94], "109": [83, 94], "exampvil": [83, 96], "lt": [84, 85, 90, 91, 97, 98], "gt": [84, 85, 90, 91, 97, 98], "5029": [84, 85, 89], "5024": [84, 85], "5025": [84, 85], "5026": [84, 85], "5027": [84, 85], "5028": [84, 85], "alt_nam": [84, 85, 86, 90, 91, 97, 98], "u7": [84, 85], "x27": [84, 85, 90, 91, 97, 98], "sr2": [84, 85, 86], "sr3": [84, 85, 86], "chose": [84, 85, 86], "ivtt": [84, 85], "ovtt": [84, 85, 86], "tottim": [84, 85, 86, 88], "totcost": [84, 85, 86, 88], "70": [84, 85, 91], "115": [84, 85], "75": [84, 85, 86, 97, 98], "9429": [84, 85], "9430": [84, 85], "9433": [84, 85], "9434": [84, 85], "9436": [84, 85], "9438": [84, 85], "corredi": [84, 85], "vehbywrk": [84, 85, 86, 87], "vocc": [84, 85], "wgt": [84, 85], "_avail_": [84, 85, 97, 98], "int8": [84, 85, 97, 98], "altidxarrai": [84, 85, 98], "datasetdimens": [84, 85, 90, 91, 97, 98], "5029altid": [84, 85], "6coordin": [84, 85], "int641": [84, 85, 90, 91, 97, 98], "5029arrai": [84, 85], "6arrai": [84, 85], "float321": [84, 85], "0arrai": [84, 85, 90, 91, 97, 98], "float6413": [84, 85], "92": [84, 85, 95], "96": [84, 85, 87, 91, 95], "58": [84, 85, 90, 91, 95, 98], "87": [84, 85, 88, 98], "54": [84, 85, 87], "float642": [84, 85], "02": [84, 85, 88, 91, 92, 95, 97], "float6415": [84, 85], "1arrai": [84, 85, 90, 91, 97, 98], "89": [84, 85, 86, 88, 95], "04": [84, 85, 86, 88, 97], "float6470": [84, 85], "64": [84, 85, 90, 98], "390": [84, 85], "195": [84, 85], "97": [84, 85], "185": [84, 85], "76": [84, 85, 86, 87], "88": [84, 85, 86, 87], "105": [84, 85], "112": [84, 85, 88, 90, 91], "56": [84, 85, 87, 91], "03": [84, 85, 87, 88, 92, 95], "01": [84, 85, 87, 88, 90, 91, 92, 97, 98], "71": [84, 85], "int642": [84, 85, 90, 91], "9438arrai": [84, 85], "perid": [84, 85], "numalt": [84, 85], "2arrai": [84, 85, 90, 91, 98], "dist": [84, 85, 86, 87], "float647": [84, 85], "69": [84, 85, 86, 98], "62": [84, 85, 91, 98], "73arrai": [84, 85], "73": [84, 85], "wkzone": [84, 85], "int64664": [84, 85], "738": [84, 85], "696": [84, 85], "665": [84, 85], "1009": [84, 85], "1030": [84, 85], "1021arrai": [84, 85], "664": [84, 85], "1021": [84, 85], "hmzone": [84, 85], "int64726": [84, 85], "667": [84, 85], "1023": [84, 85], "1019": [84, 85], "726": [84, 85, 87], "rspopden": [84, 85], "52": [84, 85, 90, 91, 95, 98], "85": [84, 85, 87, 95, 97, 98], "98": [84, 85], "77arrai": [84, 85], "rsempden": [84, 85], "float649": [84, 85], "53": [84, 85, 90, 95, 98], "51arrai": [84, 85], "93": [84, 85, 91], "67": [84, 85, 90, 91], "51": [84, 85, 87, 92], "wkpopden": [84, 85], "float6437": [84, 85], "82": [84, 85, 87], "wkempden": [84, 85, 86, 87], "float643": [84, 85, 97], "764": [84, 85, 87], "vehavdum": [84, 85], "femdum": [84, 85], "int640": [84, 85, 90, 91, 98], "int6435": [84, 85], "37arrai": [84, 85], "drlicdum": [84, 85], "noncadum": [84, 85], "numveh": [84, 85], "int644": [84, 85], "3arrai": [84, 85, 90, 91, 97, 98], "5arrai": [84, 85, 90, 91], "hhinc": [84, 85, 86, 87, 88], "float6442": [84, 85], "famtyp": [84, 85], "int647": [84, 85], "99arrai": [84, 85], "hhowndum": [84, 85], "numemphh": [84, 85], "numadlt": [84, 85], "nmlt5": [84, 85], "nm5to11": [84, 85], "nm12to16": [84, 85], "wkccbd": [84, 85, 86], "wknccbd": [84, 85, 86], "float644": [84, 85], "int81": [84, 85, 97, 98], "caseidpandasindexpandasindex": [84, 85, 90, 91, 97, 98], "5020": [84, 85], "5021": [84, 85], "5022": [84, 85], "5023": [84, 85], "altidpandasindexpandasindex": [84, 85, 98], "caseid_altid_": [84, 85, 90, 91, 97, 98], "ref": [84, 85], "px": [84, 85, 95], "asc_sr2": [84, 85, 86, 87, 88], "asc_sr3p": [84, 88], "asc_tran": [84, 88], "lastli": [84, 85], "identifi": [84, 85, 86, 90, 91, 92, 97, 98], "tradit": [84, 85], "often": [84, 85, 97], "view": [84, 85, 97], "correctli": [84, 85], "futurewarn": [84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98], "3637": [84, 85], "4755": [84, 85], "517": [84, 85], "161": [84, 85], "498": [84, 85], "4003": [84, 85], "50": [84, 85, 88, 90, 92, 95, 97, 98], "1738": [84, 85], "166": [84, 85, 86, 95], "1479": [84, 85], "na": [84, 85, 97], "help": [84, 85, 100], "stabil": [84, 85], "3626": 84, "186279": 84, "std": [84, 85, 86, 87, 88, 90, 91, 92, 95, 97], "stat": [84, 85, 86, 87, 88, 90, 91, 92, 95, 97], "val": [84, 87, 95], "3768511": 84, "30450457": 84, "806": 84, "1782735": 84, "10463438": 84, "7251716": 84, "17770277": 84, "67088836": 84, "13259089": 84, "20704435": 84, "19410111": 84, "067": 84, "0021647618": 84, "0015531252": 84, "394": 84, "00035547721": 84, "0025379832": 84, "1401": 84, "0052899351": 84, "0018288885": 84, "892": 84, "012800235": 84, "0053235227": 84, "404": [84, 87], "009685621": 84, "0030330606": 84, "193": [84, 87], "0049202789": 84, "00023889157": 84, "051335153": 84, "0030993097": 84, "nbsp": [84, 85, 86, 87, 88, 90, 91, 92, 95, 97], "err": [84, 85, 86, 87, 88, 90, 91, 92, 95, 97], "signif": [84, 85, 86, 87, 88, 90, 91, 92, 95, 97], "305": 84, "00": [84, 85, 86, 87, 88, 90, 91, 92, 95, 97], "178": [84, 87, 91], "671": 84, "133": [84, 86, 95], "194": 84, "00216": 84, "00155": 84, "000355": 84, "00254": 84, "00529": 84, "00183": 84, "0128": [84, 90], "00532": [84, 86], "00969": 84, "00303": 84, "00492": 84, "000239": [84, 85], "0513": 84, "00310": 84, "tough": [84, 85, 88], "show": [84, 85, 88], "alphabet": [84, 85], "reorder": [84, 85, 88], "systemat": [84, 85], "lo": [84, 85, 86, 88, 90, 91, 92], "asc": [84, 85, 86, 87, 88, 90, 91, 92, 101], "statisticaggregatep": [84, 85, 97], "casenumb": [84, 85, 97], "cases5029log": [84, 85], "72log": 84, "7309": [84, 85], "45rho": [84, 85], "w": [84, 85, 97, 98], "parameters0": [84, 85, 97], "504": 84, "There": [85, 96, 98], "strong": 85, "theoret": 85, "empir": 85, "reason": 85, "expect": [85, 97, 98, 100], "decis": [85, 98], "maker": [85, 98], "residenti": 85, "worker": [85, 86], "influenc": 85, "consid": [85, 97], "120": [85, 90, 91], "verifi": [85, 92], "2024": [85, 95], "db": 85, "sometim": [85, 98], "via": [85, 97, 100], "alts_map": [85, 97], "skip": 85, "rest": 85, "continu": 85, "asc_": [85, 86], "motorized_tim": [85, 86, 87], "nonmotorized_tim": [85, 86, 87], "motorized_ovtbydist": [85, 86, 87], "auto": 85, "010": [85, 87], "termin": [85, 86, 87, 88, 91, 92, 97, 100], "successfulli": [85, 86, 87, 88, 91, 92, 97], "3501": 85, "6427674451616": 85, "param_nam": [85, 86, 87, 88, 97], "220318": 85, "053957": 85, "asc_sr3": [85, 86, 87], "643069": 85, "573816": 85, "440335": 85, "001955": 85, "001323": 85, "009513": 85, "004157": 85, "178505": 85, "037821": 85, "047507": 85, "035252": 85, "072267": 85, "554459": 85, "229207": 85, "365577": 85, "004059": 85, "381": 85, "121": [85, 88], "94": [85, 88, 98], "180": 85, "574": 85, "181": 85, "440": 85, "332": 85, "00196": 85, "00143": 85, "00132": 85, "00203": 85, "65": [85, 87, 90, 91, 95], "00951": 85, "00544": 85, "00416": 85, "00336": 85, "179": [85, 87, 95], "0185": 85, "0378": 85, "00361": 85, "0475": 85, "00566": 85, "0353": 85, "0391": 85, "90": [85, 86, 90, 91, 98], "0723": 85, "0570": 85, "554": 85, "0690": 85, "229": [85, 87], "132": 85, "74": 85, "366": 85, "0995": 85, "00406": 85, "ownership": 85, "separ": [85, 97], "70log": 85, "521": 85, "instruct": [86, 87, 89, 95], "128": [86, 90, 95], "costbyincom": [86, 87], "onc": [86, 87, 97, 98, 100], "har": 86, "conveni": [86, 97], "fact": 86, "less": [86, 98], "sinc": [86, 90, 100], "jointli": 86, "omit": [86, 101], "vehicl": 86, "prefer": [86, 87], "joint": 86, "shadow_paramet": 86, "proport": 86, "sai": [86, 98], "vehbywrk_sr2": 86, "vehbywrk_sr": [86, 87], "wkcbd_": 86, "wkempden_": 86, "vehbywrk_": 86, "didn": 86, "fine": 86, "elsewher": [86, 98, 100], "complex": [86, 87, 97], "But": [86, 98, 100], "weird": 86, "hard": 86, "parameter_group": 86, "zonal": [86, 87], "wkcbd": [86, 87], "parameter_ord": 86, "compar": 86, "match": [86, 90, 91, 92, 98], "put": [86, 97, 98], "sequenti": 86, "regex": 86, "1000": [86, 97], "ftol": 86, "1e": 86, "117": [86, 90, 91], "3444": 86, "185100565835": 86, "629": 86, "808": 86, "434": 86, "685": 86, "068": 86, "052": [86, 95], "005": 86, "009": 86, "006": [86, 87, 97], "020": 86, "045": 86, "vehbywrk_bik": [86, 87], "702": 86, "317": 86, "vehbywrk_transit": [86, 87], "vehbywrk_walk": [86, 87], "722": 86, "wkcbd_bike": [86, 87], "489": 86, "wkcbd_sr2": [86, 87], "260": 86, "wkcbd_sr3": [86, 87], "069": 86, "wkcbd_transit": [86, 87], "309": [86, 88], "wkcbd_walk": [86, 87], "wkempden_bik": [86, 87], "002": [86, 87], "wkempden_sr2": [86, 87], "wkempden_sr3": [86, 87], "wkempden_transit": [86, 87], "003": 86, "wkempden_walk": [86, 87], "toler": 86, "excess": 86, "remain": [86, 97, 98], "steadi": 86, "platform": [86, 100], "0524": 86, "0104": [86, 87], "0202": 86, "00381": 86, "0454": 86, "00577": 86, "0196": 86, "191": 86, "252": 86, "00193": 86, "00122": 86, "00158": 86, "000390": 86, "00226": 86, "000452": 86, "00313": 86, "000361": 86, "00289": 86, "000742": 86, "00198": 86, "00864": 86, "00515": 86, "00600": 86, "00315": 86, "258": 86, "0666": 86, "169": [86, 88], "427": 86, "106": 86, "152": 86, "248": 86, "0679": 86, "348": 86, "mu_motor": [87, 97], "mu_nonmotor": 87, "costbyinc": 87, "traveltim": 87, "790": [87, 92, 97], "neither": [87, 92, 97], "pydot": [87, 92, 97], "nor": [87, 92, 97], "unabl": [87, 92, 97], "draw": [87, 92, 97], "xml": [87, 92, 97], "__xml__": [87, 92, 97], "0x7fe1be483520": 87, "quit": [87, 98, 100], "short": 87, "session": [87, 100], "pretti": [87, 88, 98], "blaze": 87, "As": [87, 98], "grow": 87, "achiev": [87, 88, 101], "becom": 87, "valuabl": 87, "013": 87, "3441": 87, "672530467279": 87, "325": 87, "506": 87, "345": 87, "039": 87, "004": 87, "114": [87, 91], "015": 87, "001": [87, 97], "769": 87, "046": 87, "735": 87, "226": 87, "707": 87, "408": 87, "781": 87, "921": 87, "0386": 87, "0145": 87, "00387": 87, "0462": 87, "00540": 87, "0211": 87, "00393": 87, "00161": 87, "0100": [87, 97], "00465": 87, "00621": 87, "00302": 87, "0651": 87, "150": [87, 97, 98], "163": 87, "0962": 87, "222": 87, "236": 87, "00167": 87, "00109": 87, "00115": 87, "000354": 87, "00164": 87, "000449": 87, "00224": 87, "000507": 87, "00217": 87, "000762": 87, "417": 87, "255": 87, "475": 87, "221": 87, "358": 87, "135": [87, 95], "672363": 87, "2009723": 87, "41673434": 87, "882": 87, "3259326": 87, "2546277": 87, "5074669": 87, "47504437": 87, "278": 87, "40391469": 87, "22131641": 87, "825": 87, "34520614": 87, "35784563": 87, "9647": 87, "038650849": 87, "010374269": 87, "0039307767": 87, "0016126675": 87, "437": 87, "010044631": 87, "0046500321": 87, "0062074189": 87, "0030219576": 87, "054": 87, "11385823": 87, "021103812": 87, "395": 87, "014533671": 87, "00386768": 87, "758": 87, "72624494": 87, "13491675": 87, "029": 87, "76884717": 87, "17846981": 87, "295": 87, "046223942": 87, "0053980774": 87, "563": 87, "73481115": 87, "22876365": 87, "212": 87, "2258028": 87, "065079868": 87, "70763985": 87, "14990923": 87, "76384627": 87, "16340563": 87, "40693094": 87, "32762641": 87, "242": 87, "19327715": 87, "096248701": 87, "008": 87, "78145279": 87, "19991517": 87, "909": 87, "92191853": 87, "22190614": 87, "155": [87, 90], "11403132": 87, "23647104": 87, "4822": 87, "0016762354": 87, "0010870055": 87, "542": 87, "0011496584": 87, "0003544006": 87, "244": 87, "0016390476": 87, "00044900356": 87, "0022379541": 87, "00050738978": 87, "411": 87, "0021686386": 87, "00076259347": 87, "844": 87, "_src": [87, 90, 91, 92, 95], "lax_numpi": [87, 90, 91, 92, 95], "2206": [87, 90, 91, 92, 95], "encount": [87, 90, 91, 92, 95, 97, 98], "jnp": [87, 90, 91, 92, 95], "treat": [87, 88, 90, 91, 92, 95, 97], "suppos": 88, "hour": 88, "cent": 88, "minut": 88, "formul": 88, "target": 88, "ratio": 88, "exce": 88, "exactli": 88, "m_explicit": 88, "result_explicit": 88, "049": 88, "3788": 88, "5731392236194": 88, "161e": 88, "456e": 88, "081e": 88, "894e": 88, "988e": 88, "985e": 88, "628e": 88, "409e": 88, "385e": 88, "739e": 88, "ratiobound": 88, "pmaximum": 88, "min_ratio": 88, "max_ratio": 88, "999": 88, "scale": [88, 97], "100": [88, 90, 93, 97, 98], "059": 88, "573358506236": 88, "158e": 88, "455e": 88, "986e": [88, 92], "993e": 88, "616e": 88, "162e": 88, "413e": 88, "219e": 88, "740e": 88, "__getitem__": [88, 97], "deprec": [88, 96, 97, 98], "ser": [88, 97], "iloc": [88, 97], "po": [88, 97], "i_num": 88, "cmin_num": 88, "i_den": 88, "cmin_den": 88, "cmax_num": 88, "cmax_den": 88, "keyvaluex": [88, 97], "logloss0": [88, 97], "7533452691402339d_logloss": 88, "197e": 88, "476e": 88, "020e": 88, "958e": 88, "786e": 88, "906e": 88, "519e": 88, "677e": 88, "384e": 88, "716e": 88, "849e": 88, "442e": 88, "nit59nfev80njev59status0messag": 88, "successtrueelapsed_time0": [88, 97], "621848method": 88, "n_cases5029iteration_number59loglik": 88, "103": [88, 90, 91, 93], "175": 88, "00199": 88, "00154": 88, "000462": 88, "00252": 88, "00616": 88, "00180": 88, "0141": 88, "00550": 88, "00941": 88, "00306": 88, "00522": 88, "000243": 88, "00174": 88, "09e": 88, "sort": 88, "discov": 88, "sampl": [89, 94, 97], "san": 89, "francisco": 89, "bai": 89, "area": 89, "compris": 89, "commut": 89, "drawn": 89, "conduct": 89, "metropolitan": 89, "commiss": 89, "spring": 89, "1990": 89, "diari": 89, "member": 89, "older": 89, "five": 89, "year": [89, 100], "individu": [89, 98], "socio": 89, "demograph": 89, "reproduc": [89, 94], "document": 89, "sever": [89, 94, 101], "affect": [90, 91, 92], "mere": [90, 91, 92], "style": [90, 91, 92, 98], "train_av": [90, 91, 92, 93], "sp": [90, 91, 92, 93], "sm_av": [90, 91, 92, 93], "car_av": [90, 91, 92, 93], "asc_train": [90, 91, 92, 93], "asc_car": [90, 91, 92, 93], "train_tt": [90, 91, 92, 93], "b_time": [90, 91, 92, 93], "sm_tt": [90, 91, 92, 93], "car_tt": [90, 91, 92, 93], "train_co": [90, 91, 92, 93], "ga": [90, 91, 92, 93], "b_cost": [90, 91, 92, 93], "sm_co": [90, 91, 92, 93], "car_co": [90, 91, 92, 93], "ration": [90, 91, 92], "b_": [90, 91, 92], "warehous": 90, "come": [90, 95], "raw_data": [90, 91, 92], "ticket": [90, 91], "who": [90, 91], "luggag": [90, 91], "male": [90, 91], "dest": [90, 91], "train_h": [90, 91], "sm_he": [90, 91], "sm_seat": [90, 91], "49": [90, 91, 92], "84": [90, 91], "130": [90, 91], "keep": [90, 91, 93, 95], "selected_data": 90, "ve": 90, "train": [90, 91, 92], "sm": [90, 91, 92], "6768": [90, 91, 92], "8445": 90, "8446": 90, "8447": 90, "8448": 90, "8449": 90, "8450": 90, "u5": [90, 91], "939": 90, "104": 90, "_altid_xarrai": [90, 91], "6768_altid_": 90, "3coordin": [90, 91, 97, 98], "8450arrai": 90, "939arrai": 90, "7arrai": [90, 91], "int643": [90, 91], "int64112": [90, 91], "108": 90, "108arrai": 90, "int6448": [90, 91], "13arrai": [90, 91], "int64120": [90, 91], "60arrai": [90, 91], "int6463": [90, 91], "53arrai": 90, "int6452": [90, 91], "21arrai": [90, 91], "int6420": [90, 91, 97], "30arrai": [90, 91], "int64117": [90, 91], "100arrai": 90, "int6465": [90, 91], "80arrai": 90, "8441": 90, "8442": 90, "8443": 90, "8444": 90, "_altid_pandasindexpandasindex": [90, 91], "notic": [90, 96], "carefulli": 90, "rather": 90, "5331": 90, "251953": 90, "gradient": [90, 91, 92], "15477206": 90, "050933838": 90, "1547722": 90, "70136625": 90, "062522888": 90, "70136644": 90, "010838839": 90, "8173828": 90, "01083884": 90, "012777695": 90, "5024414": 90, "012777694": 90, "0432": 90, "701": 90, "0549": 90, "78": [90, 95, 98], "0108": 90, "000518": 90, "000569": 90, "10728": 91, "10723": 91, "10724": 91, "10725": 91, "10726": 91, "10727": 91, "1192": 91, "156": 91, "10728_altid_": 91, "10727arrai": 91, "1192arrai": 91, "4arrai": [91, 97, 98], "20arrai": [91, 97], "148": 91, "148arrai": 91, "96arrai": 91, "120arrai": 91, "70arrai": 91, "10718": 91, "10719": 91, "10720": 91, "10721": 91, "10722": 91, "weight_co_var": 91, "5931": 91, "557617": 91, "11434829": 91, "048187256": 91, "1143483": 91, "75647625": 91, "043884277": 91, "011196585": 91, "70166016": 91, "013215263": 91, "92382812": 91, "success": [91, 92], "statu": [91, 92], "143e": 91, "565e": 91, "120e": 91, "322e": 91, "nit": [91, 92], "jac": [91, 92], "819e": 91, "388e": 91, "017e": 91, "238e": 91, "nfev": [91, 92], "njev": [91, 92], "7612": 91, "199999999999": 91, "logloss": [91, 92], "7792172587671765": 91, "5576171875": 91, "0407": 91, "756": 91, "0528": 91, "0112": 91, "000490": 91, "0132": 91, "000537": 91, "look": [91, 97, 98], "jupyt": [92, 97, 100], "0x7ff068a08130": 92, "5236": 92, "899902": 92, "16716959": 92, "015563965": 92, "51192705": 92, "062271118": 92, "0085662475": 92, "87304688": 92, "0089856784": 92, "2919922": 92, "48680588": 92, "045410156": 92, "abstract_arrai": 92, "runtimewarn": [92, 97, 98], "overflow": 92, "cast": [92, 97, 98], "canonical_concrete_av": 92, "weak_typ": 92, "interpret": 92, "xla": [92, 95], "157": 92, "asarrai": 92, "672e": 92, "119e": 92, "566e": 92, "868e": 92, "556e": 92, "227e": 92, "730e": 92, "292e": 92, "541e": 92, "7737736262328235": 92, "89990234375": 92, "167": 92, "0371": 92, "0545": 92, "512": 92, "0452": 92, "0791": 92, "00857": 92, "000463": 92, "000600": 92, "00899": 92, "000570": 92, "00107": 92, "487": 92, "0279": 92, "0389": 92, "pytest": [93, 95], "approx": [93, 95], "sm_cost": 93, "train_cost": 93, "train_cost_sc": 93, "train_tt_scal": 93, "sm_cost_scal": 93, "sm_tt_scale": 93, "car_co_sc": 93, "car_tt_scal": 93, "car_av_sp": 93, "train_av_sp": 93, "choos": [93, 98], "m1": 93, "model1": 93, "m2": [93, 95], "model2": 93, "lexicograph": 93, "compensatori": 93, "regard": [93, 101], "m3": 93, "model3": 93, "z_cost": 93, "membership": 93, "latent": 93, "mk": 93, "w_other": 93, "w_cost": 93, "latentclass": 93, "b": 93, "set_altid": [93, 97], "groupid": 93, "varnam": 95, "price": 95, "conven": 95, "comfort": 95, "meal": 95, "petfr": 95, "emipp": 95, "nonsig1": 95, "nonsig2": 95, "nonsig3": 95, "artifici": 95, "sum": [95, 97, 98], "randvars_norm": 95, "mixtur": 95, "normal": [95, 100], "sd": 95, "n_draw": 95, "300": 95, "common_draw": 95, "2278": 95, "119873": 95, "0847833": 95, "19833504": 95, "469": 95, "87829447": 95, "15528066": 95, "656": 95, "0718255": 95, "23265697": 95, "905": 95, "7090243": 95, "209664": 95, "151": 95, "064875404": 95, "14742585": 95, "4401": 95, "009499986": 95, "15242425": 95, "06233": 95, "016859994": 95, "13450207": 95, "1254": 95, "9602283": 95, "39923492": 95, "0505918": 95, "17949775": 95, "853": 95, "0427685": 95, "14787067": 95, "70335627": 95, "22051126": 95, "5498744": 95, "36840037": 95, "4678429": 95, "17769372": 95, "261": 95, "result2": 95, "2282": 95, "032715": 95, "0035365": 95, "18792836": 95, "87347145": 95, "14653882": 95, "9063292": 95, "21001352": 95, "077": 95, "6593245": 95, "20288153": 95, "071248128": 95, "138087": 95, "516": 95, "011414068": 95, "14356261": 95, "07951": 95, "018252459": 95, "12618431": 95, "1446": 95, "6310058": 95, "36731866": 95, "885": 95, "96760929": 95, "16520257": 95, "857": 95, "0159563": 95, "12935086": 95, "854": 95, "59463122": 95, "21403006": 95, "778": 95, "91851189": 95, "43012819": 95, "4145054": 95, "16632068": 95, "505": 95, "908707": 95, "extern": 95, "slow_operation_alarm": 95, "cc": 95, "fold": 95, "f32": 95, "4000": 95, "op_nam": 95, "jit": 95, "func": 95, "main": [95, 97], "vmap": 95, "gather": 95, "dimension_numb": 95, "gatherdimensionnumb": 95, "offset_dim": 95, "collapsed_slice_dim": 95, "start_index_map": 95, "slice_s": 95, "unique_indic": 95, "indices_are_sort": 95, "gatherscattermod": 95, "promise_in_bound": 95, "fill_valu": 95, "source_fil": 95, "tmp": [95, 97, 98], "ipykernel_2859": 95, "1507874951": 95, "source_lin": 95, "isn": 95, "necessarili": 95, "bug": 95, "inher": [95, 98], "trade": 95, "runtim": 95, "guard": 95, "too": [95, 98], "fundament": [95, 97], "abl": 95, "program": 95, "envvar": 95, "xla_flag": 95, "xla_dump_to": 95, "foo": 95, "574192": 95, "took": 95, "665580137": 95, "241317": 95, "095722": 95, "854475652": 95, "188": 95, "873": 95, "147": 95, "210": 95, "66": 95, "0712": 95, "138": 95, "0114": 95, "144": 95, "0183": 95, "367": 95, "968": 95, "165": 95, "86": 95, "595": 95, "214": 95, "919": 95, "430": 95, "xlogit": 95, "mixedlogit": 95, "to_datafram": 95, "randvar": 95, "panel": 95, "batch_siz": 95, "winner": 96, "agifor": 96, "56th": 96, "annual": 96, "symposium": 96, "innov": 96, "award": 96, "develop": [96, 97], "project": 96, "veri": 96, "under": [96, 100], "plenti": 96, "undocu": 96, "own": 96, "risk": 96, "rigor": 96, "test": 96, "guid": 97, "decent": 97, "grasp": 97, "suggest": 97, "section": [97, 100], "cours": 97, "advanc": [97, 100], "topic": 97, "broken": 97, "learn": 97, "introduc": 97, "hidden": 97, "df_ca": 97, "tiny_idca": [97, 98], "cat": [97, 98], "astyp": [97, 98], "categoricaldtyp": [97, 98], "bu": [97, 98], "altnum": 97, "sort_index": 97, "fill_miss": 97, "drop_var": 97, "chosencod": 97, "sel": 97, "duck_array_op": [97, 98], "213": [97, 98], "invalid": [97, 98], "30000": [97, 98], "40000": [97, 98], "225": [97, 98], "cartim": [97, 98], "bustim": [97, 98], "walktim": [97, 98], "altnumxarrai": 97, "4altnum": 97, "int6430000": [97, 98], "50000arrai": [97, 98], "int6430": [97, 98], "10arrai": [97, 98], "int64150": [97, 98], "15arrai": 97, "int6440": [97, 98], "altnumpandasindexpandasindex": 97, "univers": 97, "accessor": 97, "manipul": 97, "facet": 97, "miss": [97, 98], "dim_nam": 97, "newalt": 97, "newaltsxarrai": 97, "3newalt": 97, "4coordin": 97, "newaltspandasindexpandasindex": 97, "three": 97, "wai": [97, 98], "neccessarili": 97, "dummi": [97, 98], "ch": 97, "toggl": 97, "potenti": [97, 98], "boolean": [97, 98], "equival": 97, "av": 97, "combin": [97, 101], "mutual": 97, "mix": 97, "income_car": 97, "income_bu": 97, "permit": [97, 101], "nodeid": 97, "50093705": 97, "32164469": 97, "3559175": 97, "86063728": 97, "node_nam": 97, "u6": 97, "_root_": 97, "dataarraycaseid": 97, "4nodeid": 97, "5009": 97, "356": 97, "8606arrai": 97, "nodeidpandasindexpandasindex": 97, "tier": 97, "librari": [97, 98], "wipe": 97, "rebuilt": 97, "particular": [97, 98, 101], "special": [97, 101], "exogen": 97, "stuctur": 97, "var_co": 97, "var_ca": 97, "u4": 97, "3e": 97, "4e": 97, "5e": 97, "3var_co": 97, "1var_ca": 97, "2coordin": 97, "04arrai": 97, "float64150": 97, "var_copandasindexpandasindex": 97, "var_capandasindexpandasindex": 97, "multinomi": 97, "That": [97, 98], "0x7f98f5444eb0": 97, "accomplish": 97, "z": [97, 98], "overlap": 97, "mu_omni": 97, "omni": 97, "noth": 97, "overload": 97, "degener": 97, "difficult": 97, "care": 97, "odd": 97, "side": 97, "effect": 97, "don": [97, 98, 100], "address": 97, "few": 97, "won": [97, 100], "four": 97, "assert": [97, 98], "infinit": 97, "problemat": 97, "practic": [97, 99], "unconstrain": 97, "74823900518063": 97, "02000": 97, "01573": 97, "03612": 97, "00000": 97, "01000": 97, "2302": 97, "plai": 97, "nice": 97, "unbound": 97, "poor": 97, "9370597512951575d_logloss": 97, "000000": 97, "001375": 97, "001574": 97, "108505": 97, "nit6nfev14njev6status0messag": 97, "047521method": 97, "n_cases4iteration_number6loglik": 97, "displai": 97, "live": 97, "progress": [97, 100], "optmiz": 97, "analyst": 97, "interrupt": 97, "someth": [97, 98], "wrong": 97, "necessari": 97, "computat": 97, "thing": [97, 98, 100], "378": 97, "384": 97, "2414": 97, "sqrt": 97, "pstderr": 97, "diagon": 97, "la": 97, "cart": 97, "commonli": 97, "select": [97, 101], "0200": 97, "0157": 97, "0394": 97, "0361": 97, "0423": 97, "cases4log": 97, "94log": 97, "01rho": 97, "072": 97, "excel": 97, "to_xlsx": 97, "demo": 97, "xlsx": 97, "receiv": 98, "idcas": 98, "record": 98, "idalt": 98, "literatur": 98, "wide": 98, "data_co": 98, "tiny_idco": 98, "carcost": 98, "buscost": 98, "tall": 98, "data_ca": 98, "variat": 98, "storag": 98, "certainli": 98, "distinct": 98, "sub": 98, "idc": 98, "super": 98, "easi": 98, "multiindex": 98, "stack": 98, "switch": 98, "clean": 98, "analag": 98, "set_column": 98, "neatli": 98, "arrang": 98, "forc": 98, "forced_ca": 98, "from_tupl": 98, "lambda": 98, "value_count": 98, "get_level_valu": 98, "ipykernel_3042": 98, "1380147596": 98, "previou": 98, "future_stack": 98, "adopt": 98, "silenc": 98, "downcast": 98, "ffill": 98, "bfill": 98, "infer_object": 98, "set_opt": 98, "no_silent_downcast": 98, "especi": [98, 100], "exchang": 98, "softwar": 98, "to_xarrai": 98, "4altid": 98, "float6440": 98, "float64100": 98, "saw": 98, "collaps": 98, "9223372036854775808": 98, "int64100": 98, "swap": 98, "compress": 98, "_casealt_": 98, "_caseptr_": 98, "alt_idx": 98, "_exclude_dims_": 98, "_alt_idx_": 98, "_caseptr_xarrai": 98, "4_casealt_": 98, "11altid": 98, "3_caseptr_": 98, "5coordin": 98, "11arrai": 98, "_caseptr_pandasindexpandasindex": 98, "altid_casealt_": 98, "_casealt__alt_idx_": 98, "alt_idx_caseptr_": 98, "enter": 98, "multipli": [98, 101], "algebra": 98, "queu": 98, "regardless": 98, "seem": 98, "worri": 98, "notabl": 98, "guidelin": 98, "availabl": 98, "natur": 98, "emploi": 98, "appar": 98, "intern": 98, "placehold": 98, "choices1": 98, "_": 98, "clear": 98, "placement": 98, "simultan": 98, "ordin": 98, "nocar": 98, "1car": 98, "2car": 98, "categories_dtyp": 98, "get_dummi": 98, "formal": 98, "datatyp": 98, "still": [98, 100], "explod": 98, "chosen_ca": 98, "boolfals": 98, "truearrai": 98, "usabl": 98, "deriv": 98, "pytabl": 98, "meta": 98, "whole": 98, "skims_dataset": 98, "to_dataset": 98, "skim_df": 98, "1595": 98, "1596": 98, "1597": 98, "1598": 98, "1599": 98, "1600": 98, "94xarrai": 98, "40j": 98, "40coordin": 98, "40arrai": 98, "float640": 98, "33arrai": 98, "float641": 98, "94arrai": 98, "ipandasindexpandasindex": 98, "jpandasindexpandasindex": 98, "advantag": 98, "promptli": 98, "shape": 98, "defer": 98, "eagerli": 98, "quick": 99, "googl": 99, "colab": 99, "dens": 99, "hot": 99, "familiar": 100, "environ": 100, "larch6": 100, "within": 100, "v5": 100, "lot": 100, "feel": 100, "free": 100, "issu": 100, "tracker": 100, "perfectli": 100, "ago": 100, "latest": 100, "miniforg": 100, "fresh": 100, "bit": 100, "zippier": 100, "old": 100, "prompt": 100, "window": 100, "plain": 100, "mac": 100, "linux": 100, "mamba": 100, "env": 100, "arboretum": 100, "http": 100, "driftless": 100, "xyz": 100, "yml": 100, "activ": 100, "ipython": 100, "kernel": 100, "lab": 100, "jupyterlab": 100, "browser": 100, "namedparamet": 101, "nameddatavalu": 101, "space": 101, "alphanumer": 101, "charact": 101, "done": 101, "permiss": 101, "On": 101, "hand": 101, "gen_cost": 101, "notimplementederror": 101, "1096": 101, "__add__": 101, "1094": 101, "1095": 101, "_what_i": 101, "implicit": 101, "lock": 101, "compos": 101, "auto_tol": 101, "simplif": 101, "subtract": 101, "cancel": 101, "remove_param": 101, "remove_data": 101}, "objects": {"larch": [[2, 0, 1, "", "DataTree"], [16, 0, 1, "", "Dataset"], [32, 0, 1, "", "Model"], [66, 0, 1, "", "NestingTree"]], "larch.DataTree": [[3, 1, 1, "", "ALTID"], [4, 1, 1, "", "CASEID"], [2, 2, 1, "", "__init__"], [5, 2, 1, "", "add_dataset"], [6, 2, 1, "", "add_relationship"], [7, 2, 1, "", "digitize_relationships"], [8, 1, 1, "", "n_alts"], [9, 1, 1, "", "n_cases"], [10, 2, 1, "", "query_cases"], [11, 1, 1, "", "relationships_are_digitized"], [12, 2, 1, "", "replace_datasets"], [13, 1, 1, "", "root_node_name"], [14, 2, 1, "", "setup_flow"], [15, 1, 1, "", "subspaces"]], "larch.Dataset": [[16, 2, 1, "", "__init__"], [17, 1, 1, "", "attrs"], [18, 1, 1, "", "chunks"], [19, 1, 1, "", "chunksizes"], [24, 1, 1, "", "coords"], [25, 1, 1, "", "data_vars"], [26, 1, 1, "", "dims"], [27, 1, 1, "", "encoding"], [28, 1, 1, "", "indexes"], [29, 1, 1, "", "nbytes"], [30, 2, 1, "", "set_dtypes"], [31, 1, 1, "", "sizes"]], "larch.Model": [[32, 2, 1, "", "__init__"], [33, 1, 1, "", "availability_ca_var"], [34, 1, 1, "", "availability_co_vars"], [35, 2, 1, "", "bhhh"], [36, 2, 1, "", "calculate_parameter_covariance"], [37, 1, 1, "", "choice_ca_var"], [38, 1, 1, "", "choice_co_code"], [39, 1, 1, "", "choice_co_vars"], [40, 2, 1, "", "d_loglike"], [41, 2, 1, "", "d_loglike_casewise"], [42, 1, 1, "", "dataset"], [43, 1, 1, "", "datatree"], [44, 2, 1, "", "estimation_statistics"], [45, 2, 1, "", "lock_value"], [46, 2, 1, "", "loglike"], [47, 2, 1, "", "loglike_casewise"], [48, 2, 1, "", "loglike_null"], [49, 2, 1, "", "logsums"], [50, 2, 1, "", "maximize_loglike"], [51, 1, 1, "", "most_recent_estimation_result"], [52, 1, 1, "", "n_cases"], [53, 2, 1, "", "parameter_summary"], [54, 1, 1, "", "pf"], [55, 1, 1, "", "possible_overspecification"], [56, 2, 1, "", "probability"], [57, 2, 1, "", "quantity"], [58, 3, 1, "", "quantity_ca"], [59, 2, 1, "", "remove_unused_parameters"], [60, 2, 1, "", "set_cap"], [61, 2, 1, "", "set_values"], [62, 2, 1, "", "total_weight"], [63, 2, 1, "", "utility"], [64, 3, 1, "", "utility_ca"], [65, 3, 1, "", "utility_co"]], "larch.NestingTree": [[66, 2, 1, "", "__init__"], [67, 2, 1, "", "add_edge"], [68, 2, 1, "", "add_node"], [69, 2, 1, "", "new_node"], [70, 2, 1, "", "remove_edge"], [71, 2, 1, "", "remove_node"]], "larch.model.linear": [[73, 0, 1, "", "DataRef"], [73, 0, 1, "", "ParameterRef"], [73, 0, 1, "", "UnicodeRef"]], "larch.model.linear.ParameterRef": [[73, 2, 1, "", "string"], [73, 2, 1, "", "valid"], [73, 2, 1, "", "value"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:attribute"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"]}, "titleterms": {"dataset": [0, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42], "constructor": 0, "attribut": [0, 1, 74], "method": [0, 1, 74, 75], "datatre": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 43], "larch": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 96, 98, 100], "altid": 3, "caseid": 4, "add_dataset": 5, "add_relationship": 6, "digitize_relationship": 7, "n_alt": 8, "n_case": [9, 52], "query_cas": 10, "relationships_are_digit": 11, "replace_dataset": 12, "root_node_nam": 13, "setup_flow": 14, "subspac": 15, "attr": 17, "chunk": 18, "chunksiz": 19, "construct": [20, 21, 22, 23], "from_idca": 21, "from_idc": 22, "from_idco": 23, "coord": 24, "data_var": 25, "dim": 26, "encod": [27, 98], "index": 28, "nbyte": 29, "set_dtyp": 30, "size": 31, "model": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 74, 77, 79, 80, 97], "availability_ca_var": 33, "availability_co_var": 34, "bhhh": 35, "calculate_parameter_covari": 36, "choice_ca_var": 37, "choice_co_cod": 38, "choice_co_var": 39, "d_loglik": 40, "d_loglike_casewis": 41, "estimation_statist": 44, "lock_valu": 45, "loglik": 46, "loglike_casewis": 47, "loglike_nul": 48, "logsum": [49, 78, 80], "maximize_loglik": 50, "most_recent_estimation_result": 51, "parameter_summari": 53, "pf": 54, "possible_overspecif": 55, "probabl": 56, "quantiti": 57, "quantity_ca": 58, "remove_unused_paramet": 59, "set_cap": 60, "set_valu": 61, "total_weight": 62, "util": [63, 74, 97], "utility_ca": 64, "utility_co": 65, "nestingtre": [66, 67, 68, 69, 70, 71, 75], "add_edg": 67, "add_nod": 68, "new_nod": 69, "remove_edg": 70, "remove_nod": 71, "api": 72, "data": [72, 73, 74, 76, 80, 97, 98], "linear": [73, 101], "function": [73, 97, 101], "paramet": [73, 74, 97], "connect": 74, "choic": [74, 77, 78, 79, 80, 84, 86, 87, 88, 90, 91, 92, 97, 98], "definit": [74, 77, 79, 80], "altern": [74, 97], "avail": [74, 97], "estim": [74, 77, 79, 80, 97], "result": 74, "set": 74, "fit": 74, "report": [74, 77, 79, 97], "ancillari": 74, "comput": 74, "200": 76, "exampvil": [76, 77, 78, 79, 80, 82], "simul": [76, 82], "taz": 76, "shapefil": 76, "employ": 76, "skim": [76, 98], "household": 76, "person": 76, "tour": 76, "201": 77, "mode": [77, 78, 84, 86, 87, 88, 90, 91, 92], "preprocess": [77, 79, 80], "save": [77, 79], "202": 78, "203": 79, "destin": [79, 80], "visual": [79, 80], "204": 80, "without": 80, "semi": 80, "aggreg": 80, "exampl": [83, 89, 94], "1": [84, 88], "mtc": [84, 86, 87, 88, 89], "mnl": [84, 86, 88, 90, 91], "10": 85, "number": 85, "automobil": 85, "17": 86, "expand": 86, "22": 87, "motor": 87, "non": 87, "nest": [87, 92, 97], "constrain": 88, "101": 90, "swissmetro": [90, 91, 92, 94], "102": 91, "weight": 91, "109": 92, "logit": 92, "document": 96, "user": [96, 99, 100], "guid": [96, 99], "prepar": 97, "structur": 97, "discret": 98, "fundament": [98, 99], "format": 98, "idco": 98, "idca": 98, "spars": 98, "v": 98, "dens": 98, "convers": 98, "practic": 98, "categor": 98, "One": 98, "hot": 98, "xarrai": 98, "work": 98, "get": 99, "start": [99, 100], "instal": 100, "quick": 100, "new": 100, "googl": 100, "colab": 100}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"Dataset": [[0, "dataset"]], "Constructors": [[0, "constructors"]], "Attributes": [[0, "attributes"], [1, "attributes"], [74, "attributes"]], "Methods": [[0, "methods"], [1, "methods"], [74, "methods"], [75, "methods"]], "DataTree": [[1, "datatree"]], "larch.DataTree": [[2, "larch-datatree"]], "larch.DataTree.ALTID": [[3, "larch-datatree-altid"]], "larch.DataTree.CASEID": [[4, "larch-datatree-caseid"]], "larch.DataTree.add_dataset": [[5, "larch-datatree-add-dataset"]], "larch.DataTree.add_relationship": [[6, "larch-datatree-add-relationship"]], "larch.DataTree.digitize_relationships": [[7, "larch-datatree-digitize-relationships"]], "larch.DataTree.n_alts": [[8, "larch-datatree-n-alts"]], "larch.DataTree.n_cases": [[9, "larch-datatree-n-cases"]], "larch.DataTree.query_cases": [[10, "larch-datatree-query-cases"]], "larch.DataTree.relationships_are_digitized": [[11, "larch-datatree-relationships-are-digitized"]], "larch.DataTree.replace_datasets": [[12, "larch-datatree-replace-datasets"]], "larch.DataTree.root_node_name": [[13, "larch-datatree-root-node-name"]], "larch.DataTree.setup_flow": [[14, "larch-datatree-setup-flow"]], "larch.DataTree.subspaces": [[15, "larch-datatree-subspaces"]], "larch.Dataset": [[16, "larch-dataset"]], "larch.Dataset.attrs": [[17, "larch-dataset-attrs"]], "larch.Dataset.chunks": [[18, "larch-dataset-chunks"]], "larch.Dataset.chunksizes": [[19, "larch-dataset-chunksizes"]], "larch.Dataset.construct": [[20, "larch-dataset-construct"]], "larch.Dataset.construct.from_idca": [[21, "larch-dataset-construct-from-idca"]], "larch.Dataset.construct.from_idce": [[22, "larch-dataset-construct-from-idce"]], "larch.Dataset.construct.from_idco": [[23, "larch-dataset-construct-from-idco"]], "larch.Dataset.coords": [[24, "larch-dataset-coords"]], "larch.Dataset.data_vars": [[25, "larch-dataset-data-vars"]], "larch.Dataset.dims": [[26, "larch-dataset-dims"]], "larch.Dataset.encoding": [[27, "larch-dataset-encoding"]], "larch.Dataset.indexes": [[28, "larch-dataset-indexes"]], "larch.Dataset.nbytes": [[29, "larch-dataset-nbytes"]], "larch.Dataset.set_dtypes": [[30, "larch-dataset-set-dtypes"]], "larch.Dataset.sizes": [[31, "larch-dataset-sizes"]], "larch.Model": [[32, "larch-model"]], "larch.Model.availability_ca_var": [[33, "larch-model-availability-ca-var"]], "larch.Model.availability_co_vars": [[34, "larch-model-availability-co-vars"]], "larch.Model.bhhh": [[35, "larch-model-bhhh"]], "larch.Model.calculate_parameter_covariance": [[36, "larch-model-calculate-parameter-covariance"]], "larch.Model.choice_ca_var": [[37, "larch-model-choice-ca-var"]], "larch.Model.choice_co_code": [[38, "larch-model-choice-co-code"]], "larch.Model.choice_co_vars": [[39, "larch-model-choice-co-vars"]], "larch.Model.d_loglike": [[40, "larch-model-d-loglike"]], "larch.Model.d_loglike_casewise": [[41, "larch-model-d-loglike-casewise"]], "larch.Model.dataset": [[42, "larch-model-dataset"]], "larch.Model.datatree": [[43, "larch-model-datatree"]], "larch.Model.estimation_statistics": [[44, "larch-model-estimation-statistics"]], "larch.Model.lock_value": [[45, "larch-model-lock-value"]], "larch.Model.loglike": [[46, "larch-model-loglike"]], "larch.Model.loglike_casewise": [[47, "larch-model-loglike-casewise"]], "larch.Model.loglike_null": [[48, "larch-model-loglike-null"]], "larch.Model.logsums": [[49, "larch-model-logsums"]], "larch.Model.maximize_loglike": [[50, "larch-model-maximize-loglike"]], "larch.Model.most_recent_estimation_result": [[51, "larch-model-most-recent-estimation-result"]], "larch.Model.n_cases": [[52, "larch-model-n-cases"]], "larch.Model.parameter_summary": [[53, "larch-model-parameter-summary"]], "larch.Model.pf": [[54, "larch-model-pf"]], "larch.Model.possible_overspecification": [[55, "larch-model-possible-overspecification"]], "larch.Model.probability": [[56, "larch-model-probability"]], "larch.Model.quantity": [[57, "larch-model-quantity"]], "larch.Model.quantity_ca": [[58, "larch-model-quantity-ca"]], "larch.Model.remove_unused_parameters": [[59, "larch-model-remove-unused-parameters"]], "larch.Model.set_cap": [[60, "larch-model-set-cap"]], "larch.Model.set_values": [[61, "larch-model-set-values"]], "larch.Model.total_weight": [[62, "larch-model-total-weight"]], "larch.Model.utility": [[63, "larch-model-utility"]], "larch.Model.utility_ca": [[64, "larch-model-utility-ca"]], "larch.Model.utility_co": [[65, "larch-model-utility-co"]], "larch.NestingTree": [[66, "larch-nestingtree"]], "larch.NestingTree.add_edge": [[67, "larch-nestingtree-add-edge"]], "larch.NestingTree.add_node": [[68, "larch-nestingtree-add-node"]], "larch.NestingTree.new_node": [[69, "larch-nestingtree-new-node"]], "larch.NestingTree.remove_edge": [[70, "larch-nestingtree-remove-edge"]], "larch.NestingTree.remove_node": [[71, "larch-nestingtree-remove-node"]], "API": [[72, "api"]], "Data": [[72, null], [73, "data"]], "Models": [[72, null]], "Linear Functions": [[73, "linear-functions"], [101, "linear-functions"]], "Parameters": [[73, "parameters"], [74, "parameters"]], "Model": [[74, "model"]], "Data Connection": [[74, "data-connection"]], "Choice Definition": [[74, "choice-definition"]], "Alternative Availability": [[74, "alternative-availability"]], "Utility Definition": [[74, "utility-definition"]], "Estimation Results": [[74, "estimation-results"]], "Setting Parameters": [[74, "setting-parameters"]], "Parameter Estimation": [[74, "parameter-estimation"], [97, "parameter-estimation"]], "Model Fitness": [[74, "model-fitness"]], "Reporting": [[74, "reporting"], [97, "reporting"]], "Ancillary Computation": [[74, "ancillary-computation"]], "NestingTree": [[75, "nestingtree"]], "200: Exampville Simulated Data": [[76, "exampville-simulated-data"]], "TAZ Shapefile": [[76, "taz-shapefile"]], "TAZ Employment Data": [[76, "taz-employment-data"]], "Skims": [[76, "skims"]], "Households": [[76, "households"]], "Persons": [[76, "persons"]], "Tours": [[76, "tours"]], "201: Exampville Mode Choice": [[77, "exampville-mode-choice"]], "Preprocessing": [[77, "preprocessing"], [79, "preprocessing"], [80, "preprocessing"]], "Model Definition": [[77, "model-definition"], [79, "model-definition"], [80, "model-definition"]], "Model Estimation": [[77, "model-estimation"], [79, "model-estimation"], [80, "model-estimation"]], "Save and Report Model": [[77, "save-and-report-model"], [79, "save-and-report-model"]], "202: Exampville Mode Choice Logsums": [[78, "exampville-mode-choice-logsums"]], "203: Exampville Destination Choice": [[79, "exampville-destination-choice"]], "Model Visualization": [[79, "model-visualization"], [80, "model-visualization"]], "204: Exampville Destination Choice without Logsums": [[80, "exampville-destination-choice-without-logsums"]], "Semi-Aggregate Data": [[80, "semi-aggregate-data"]], "Exampville Simulator": [[82, "exampville-simulator"]], "Examples": [[83, "examples"]], "1: MTC MNL Mode Choice": [[84, "mtc-mnl-mode-choice"]], "10: Number of Automobiles": [[85, "number-of-automobiles"]], "17: MTC Expanded MNL Mode Choice": [[86, "mtc-expanded-mnl-mode-choice"]], "22: MTC Motorized and Non-Motorized Nested Mode Choice": [[87, "mtc-motorized-and-non-motorized-nested-mode-choice"]], "1: MTC MNL Constrained Mode Choice": [[88, "mtc-mnl-constrained-mode-choice"]], "MTC Examples": [[89, "mtc-examples"]], "101: Swissmetro MNL Mode Choice": [[90, "swissmetro-mnl-mode-choice"]], "102: Swissmetro Weighted MNL Mode Choice": [[91, "swissmetro-weighted-mnl-mode-choice"]], "109: Swissmetro Nested Logit Mode Choice": [[92, "swissmetro-nested-logit-mode-choice"]], "Swissmetro Examples": [[94, "swissmetro-examples"]], "Larch Documentation": [[96, "larch-documentation"]], "User Guide": [[96, "user-guide"], [99, "user-guide"]], "Choice Models": [[97, "choice-models"]], "Alternatives": [[97, "alternatives"]], "Choices": [[97, "choices"]], "Availability": [[97, "availability"]], "Utility Functions": [[97, "utility-functions"]], "Data Preparation": [[97, "data-preparation"]], "Nesting Structures": [[97, "nesting-structures"]], "Data for Discrete Choice": [[98, "data-for-discrete-choice"]], "Fundamental Data Formats": [[98, "fundamental-data-formats"]], "idco Format": [[98, "idco"]], "idca Format": [[98, "idca"]], "sparse vs dense": [[98, "sparse-vs-dense"]], "Data Conversion": [[98, "data-conversion"]], "Practical Data Formating in Larch": [[98, "practical-data-formating-in-larch"]], "Data Encoding": [[98, "data-encoding"]], "Categorical Encoding": [[98, "categorical-encoding"]], "One Hot Encoding": [[98, "one-hot-encoding"]], "Encoding with xarray": [[98, "encoding-with-xarray"]], "Working with Skims": [[98, "working-with-skims"]], "Get started": [[99, null]], "Fundamentals": [[99, null]], "Installing Larch": [[100, "installing-larch"]], "Quick Start": [[100, "quick-start"]], "New Users": [[100, "new-users"]], "Google Colab": [[100, "google-colab"]]}, "indexentries": {"datatree (class in larch)": [[2, "larch.DataTree"]], "__init__() (datatree method)": [[2, "larch.DataTree.__init__"]], "altid (datatree property)": [[3, "larch.DataTree.ALTID"]], "caseid (datatree property)": [[4, "larch.DataTree.CASEID"]], "add_dataset() (datatree method)": [[5, "larch.DataTree.add_dataset"]], "add_relationship() (datatree method)": [[6, "larch.DataTree.add_relationship"]], "digitize_relationships() (datatree method)": [[7, "larch.DataTree.digitize_relationships"]], "n_alts (datatree property)": [[8, "larch.DataTree.n_alts"]], "n_cases (datatree property)": [[9, "larch.DataTree.n_cases"]], "query_cases() (datatree method)": [[10, "larch.DataTree.query_cases"]], "relationships_are_digitized (datatree property)": [[11, "larch.DataTree.relationships_are_digitized"]], "replace_datasets() (datatree method)": [[12, "larch.DataTree.replace_datasets"]], "root_node_name (datatree property)": [[13, "larch.DataTree.root_node_name"]], "setup_flow() (datatree method)": [[14, "larch.DataTree.setup_flow"]], "subspaces (datatree property)": [[15, "larch.DataTree.subspaces"]], "dataset (class in larch)": [[16, "larch.Dataset"]], "__init__() (dataset method)": [[16, "larch.Dataset.__init__"]], "attrs (dataset property)": [[17, "larch.Dataset.attrs"]], "chunks (dataset property)": [[18, "larch.Dataset.chunks"]], "chunksizes (dataset property)": [[19, "larch.Dataset.chunksizes"]], "coords (dataset property)": [[24, "larch.Dataset.coords"]], "data_vars (dataset property)": [[25, "larch.Dataset.data_vars"]], "dims (dataset property)": [[26, "larch.Dataset.dims"]], "encoding (dataset property)": [[27, "larch.Dataset.encoding"]], "indexes (dataset property)": [[28, "larch.Dataset.indexes"]], "nbytes (dataset property)": [[29, "larch.Dataset.nbytes"]], "set_dtypes() (dataset method)": [[30, "larch.Dataset.set_dtypes"]], "sizes (dataset property)": [[31, "larch.Dataset.sizes"]], "model (class in larch)": [[32, "larch.Model"]], "__init__() (model method)": [[32, "larch.Model.__init__"]], "availability_ca_var (model property)": [[33, "larch.Model.availability_ca_var"]], "availability_co_vars (model property)": [[34, "larch.Model.availability_co_vars"]], "bhhh() (model method)": [[35, "larch.Model.bhhh"]], "calculate_parameter_covariance() (model method)": [[36, "larch.Model.calculate_parameter_covariance"]], "choice_ca_var (model property)": [[37, "larch.Model.choice_ca_var"]], "choice_co_code (model property)": [[38, "larch.Model.choice_co_code"]], "choice_co_vars (model property)": [[39, "larch.Model.choice_co_vars"]], "d_loglike() (model method)": [[40, "larch.Model.d_loglike"]], "d_loglike_casewise() (model method)": [[41, "larch.Model.d_loglike_casewise"]], "dataset (model property)": [[42, "larch.Model.dataset"]], "datatree (model property)": [[43, "larch.Model.datatree"]], "estimation_statistics() (model method)": [[44, "larch.Model.estimation_statistics"]], "lock_value() (model method)": [[45, "larch.Model.lock_value"]], "loglike() (model method)": [[46, "larch.Model.loglike"]], "loglike_casewise() (model method)": [[47, "larch.Model.loglike_casewise"]], "loglike_null() (model method)": [[48, "larch.Model.loglike_null"]], "logsums() (model method)": [[49, "larch.Model.logsums"]], "maximize_loglike() (model method)": [[50, "larch.Model.maximize_loglike"]], "most_recent_estimation_result (model property)": [[51, "larch.Model.most_recent_estimation_result"]], "n_cases (model property)": [[52, "larch.Model.n_cases"]], "parameter_summary() (model method)": [[53, "larch.Model.parameter_summary"]], "pf (model property)": [[54, "larch.Model.pf"]], "possible_overspecification (model property)": [[55, "larch.Model.possible_overspecification"]], "probability() (model method)": [[56, "larch.Model.probability"]], "quantity() (model method)": [[57, "larch.Model.quantity"]], "quantity_ca (model attribute)": [[58, "larch.Model.quantity_ca"]], "remove_unused_parameters() (model method)": [[59, "larch.Model.remove_unused_parameters"]], "set_cap() (model method)": [[60, "larch.Model.set_cap"]], "set_values() (model method)": [[61, "larch.Model.set_values"]], "total_weight() (model method)": [[62, "larch.Model.total_weight"]], "utility() (model method)": [[63, "larch.Model.utility"]], "utility_ca (model attribute)": [[64, "larch.Model.utility_ca"]], "utility_co (model attribute)": [[65, "larch.Model.utility_co"]], "nestingtree (class in larch)": [[66, "larch.NestingTree"]], "__init__() (nestingtree method)": [[66, "larch.NestingTree.__init__"]], "add_edge() (nestingtree method)": [[67, "larch.NestingTree.add_edge"]], "add_node() (nestingtree method)": [[68, "larch.NestingTree.add_node"]], "new_node() (nestingtree method)": [[69, "larch.NestingTree.new_node"]], "remove_edge() (nestingtree method)": [[70, "larch.NestingTree.remove_edge"]], "remove_node() (nestingtree method)": [[71, "larch.NestingTree.remove_node"]], "dataref (class in larch.model.linear)": [[73, "larch.model.linear.DataRef"]], "parameterref (class in larch.model.linear)": [[73, "larch.model.linear.ParameterRef"]], "unicoderef (class in larch.model.linear)": [[73, "larch.model.linear.UnicodeRef"]], "string() (parameterref method)": [[73, "larch.model.linear.ParameterRef.string"]], "valid() (parameterref method)": [[73, "larch.model.linear.ParameterRef.valid"]], "value() (parameterref method)": [[73, "larch.model.linear.ParameterRef.value"]]}})