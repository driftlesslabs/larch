name: larch testing

on:
  push:
    branches: [ main, develop, sandbox ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-dev-install:
    name: developer install
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
        - name: checkout
          uses: actions/checkout@v4
        - name: setup graphviz
          uses: ts-graphviz/setup-graphviz@v2
        - name: run developer install script
          run: bash envs/uv-dev.sh -d .
        - name: run tests
          run: uv run pytest

  build-wheel:
    name: ðŸ›ž build wheel
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: build wheel
        run: uv build
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  test-wheel:
    name: ðŸ§ª test wheel
    needs: build-wheel
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12' ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist
      - name: Install wheel
        run: |
          uv venv
          uv pip install dist/*.whl
      - name: Run tests
        run: |
          uv run python -c "import larch; print(larch.versions())"
